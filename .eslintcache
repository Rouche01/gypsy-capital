[{"/home/tga/Desktop/gypsy-capital/src/App.js":"1","/home/tga/Desktop/gypsy-capital/src/index.js":"2","/home/tga/Desktop/gypsy-capital/src/pages/pages.js":"3","/home/tga/Desktop/gypsy-capital/src/pages/SignUp/SignUp.jsx":"4","/home/tga/Desktop/gypsy-capital/src/reportWebVitals.js":"5","/home/tga/Desktop/gypsy-capital/src/components/InputField/InputField.js":"6","/home/tga/Desktop/gypsy-capital/src/components/Button/Button.jsx":"7","/home/tga/Desktop/gypsy-capital/src/routes/pageUrl.js":"8","/home/tga/Desktop/gypsy-capital/src/pages/SignIn/SignIn.jsx":"9","/home/tga/Desktop/gypsy-capital/src/pages/Profile/Profile.jsx":"10","/home/tga/Desktop/gypsy-capital/src/components/Dashboard/Dashboard.jsx":"11","/home/tga/Desktop/gypsy-capital/src/pages/CreditReport/CreditReport.jsx":"12","/home/tga/Desktop/gypsy-capital/src/components/ProgressBar/ProgressBar.jsx":"13","/home/tga/Desktop/gypsy-capital/src/context/createDataContext.js":"14","/home/tga/Desktop/gypsy-capital/src/components/FileUploadButton/FileUploadButton.js":"15","/home/tga/Desktop/gypsy-capital/src/context/AuthContext.js":"16","/home/tga/Desktop/gypsy-capital/src/pages/Overview/Overview.jsx":"17","/home/tga/Desktop/gypsy-capital/src/pages/ConsumerCredit/ConsumerCredit.jsx":"18"},{"size":968,"mtime":1611471232991,"results":"19","hashOfConfig":"20"},{"size":500,"mtime":1611009045300,"results":"21","hashOfConfig":"20"},{"size":231,"mtime":1611281042828,"results":"22","hashOfConfig":"20"},{"size":3910,"mtime":1611113260151,"results":"23","hashOfConfig":"20"},{"size":362,"mtime":1611009045300,"results":"24","hashOfConfig":"20"},{"size":1858,"mtime":1611423460410,"results":"25","hashOfConfig":"20"},{"size":605,"mtime":1611113277831,"results":"26","hashOfConfig":"20"},{"size":608,"mtime":1611205480558,"results":"27","hashOfConfig":"20"},{"size":1992,"mtime":1611415823620,"results":"28","hashOfConfig":"20"},{"size":12746,"mtime":1611440243152,"results":"29","hashOfConfig":"20"},{"size":1944,"mtime":1611298804187,"results":"30","hashOfConfig":"20"},{"size":992,"mtime":1611281322795,"results":"31","hashOfConfig":"20"},{"size":1565,"mtime":1611429643367,"results":"32","hashOfConfig":"20"},{"size":514,"mtime":1611274652956,"results":"33","hashOfConfig":"20"},{"size":407,"mtime":1611436566769,"results":"34","hashOfConfig":"20"},{"size":335,"mtime":1611274873952,"results":"35","hashOfConfig":"20"},{"size":3240,"mtime":1611471775497,"results":"36","hashOfConfig":"20"},{"size":1889,"mtime":1611472530722,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"t9s37o",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/tga/Desktop/gypsy-capital/src/App.js",["81"],"/home/tga/Desktop/gypsy-capital/src/index.js",[],["82","83"],"/home/tga/Desktop/gypsy-capital/src/pages/pages.js",[],["84","85"],"/home/tga/Desktop/gypsy-capital/src/pages/SignUp/SignUp.jsx",[],"/home/tga/Desktop/gypsy-capital/src/reportWebVitals.js",[],["86","87"],"/home/tga/Desktop/gypsy-capital/src/components/InputField/InputField.js",[],"/home/tga/Desktop/gypsy-capital/src/components/Button/Button.jsx",[],"/home/tga/Desktop/gypsy-capital/src/routes/pageUrl.js",[],["88","89"],"/home/tga/Desktop/gypsy-capital/src/pages/SignIn/SignIn.jsx",["90"],"/home/tga/Desktop/gypsy-capital/src/pages/Profile/Profile.jsx",["91"],"import React, { useMemo, useRef, useState } from 'react';\nimport styles from './Profile.module.scss';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport pageUrl from '../../routes/pageUrl';\nimport { FiLayers } from 'react-icons/fi';\nimport { BiCreditCard } from 'react-icons/bi';\nimport { AiOutlineUser } from 'react-icons/ai';\nimport { GiTakeMyMoney } from 'react-icons/gi';\nimport { FaCloudUploadAlt, FaCheckCircle } from 'react-icons/fa';\nimport ProgressBar from '../../components/ProgressBar/ProgressBar';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport { Row, Col } from 'react-bootstrap';\nimport FileUploadButton from '../../components/FileUploadButton/FileUploadButton';\n\n\nconst Profile = ({ location }) => {\n\n  const stages = {\n    0: \"bvnVerification\",\n    1: \"personalInformation\",\n    2: \"identity\",\n    3: \"complete\"\n  }\n  const [setupStage, setSetupStage] = useState(0);\n\n  const sidebarRoutes = [\n    {\n      label: \"Dashboard\",\n      link: pageUrl.DASHBOARD_HOMEPAGE,\n      icon: FiLayers\n    },\n    {\n      label: \"Consumer Credit\",\n      link: pageUrl.CONSUMER_CREDIT_PAGE,\n      icon: GiTakeMyMoney\n    },\n    {\n      label: \"Credit Report\",\n      link: pageUrl.CREDIT_REPORT_PAGE,\n      icon: BiCreditCard\n    },\n    {\n      label: \"Profile\",\n      link: pageUrl.PROFILE_PAGE,\n      icon: AiOutlineUser\n    },\n  ]\n\n\n\n  const handleSubmit = () => {\n    setSetupStage(setupStage + 1);\n  }\n\n  const BvnForm = () => {\n    const [userBvn, setUserBvn] = useState(''); \n\n    return (\n      <div className={styles.bvnFormBox}>\n        <p>Your BVN helps us verify your identity in line with CBNâ€™s Know-Your-Customer (KYC) requirements.</p>\n        <InputField \n          label=\"What's your BVN?\" \n          nameAttr=\"bvn\"\n          type=\"text\"\n          value={userBvn}\n          changed={(val) => setUserBvn(val)}  \n        />\n        <Button className=\"mt-4\" fullWidth clicked={handleSubmit} bgColor=\"#741763\" size=\"lg\" color=\"#EBEBEB\">\n          Verify\n        </Button>\n        <p className={styles.extraTip}>To get your BVN, <span>Dial *565*0#</span></p>\n      </div>\n    )\n  }\n\n  const PersonalInfoForm = () => {\n\n    const [biodata, setBiodata] = useState({\n      fullName: '',\n      dateOfBirth: '',\n      bvnPhoneNo: '',\n      email: '',\n      phoneNo: '',\n      altPhone: '',\n      gender: ''\n    });\n    const [residentialInfo, setResidentialInfo] = useState({\n      street: '',\n      city: '',\n      state: ''\n    });\n    const [kinInfo, setKinInfo] = useState({\n      fullName: '',\n      relationship: '',\n      emailAddress: '',\n      phoneNo: '',\n      address: ''\n    });\n    const [bankInfo, setBankInfo] = useState({\n      bankName: '',\n      accountType: '',\n      accountNumber: '',\n      accountName: ''\n    });\n\n    return (\n      <div className={styles.personalInfo}>\n        <div className={styles.biodata}>\n          <h3>Biodata Information</h3>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Full name\"\n                type=\"text\"\n                nameAttr=\"fullname\"\n                value={biodata.fullName}\n                changed={(val) => setBiodata({...biodata, fullName: val})}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Date of Birth\"\n                type=\"text\"\n                nameAttr=\"dob\"\n                value={biodata.dateOfBirth}\n                changed={(val) => setBiodata({...biodata, dateOfBirth: val})}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"BVN-linked Phone Number\"\n                type=\"text\"\n                nameAttr=\"bvnPhoneNo\"\n                value={biodata.bvnPhoneNo}\n                changed={(val) => setBiodata({...biodata, bvnPhoneNo: val})}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Email\"\n                type=\"email\"\n                nameAttr=\"email\"\n                value={biodata.email}\n                changed={(val) => setBiodata({...biodata, email: val})}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Phone Number\"\n                type=\"text\"\n                nameAttr=\"PhoneNo\"\n                value={biodata.phoneNo}\n                changed={(val) => setBiodata({...biodata, phoneNo: val})}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Alternative Phone Number\"\n                type=\"text\"\n                nameAttr=\"altPhoneNo\"\n                value={biodata.altPhone}\n                changed={(val) => setBiodata({ ...biodata, altPhone: val})}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <InputField \n                label=\"Gender\"\n                type=\"select\"\n                options={['Female', 'Male', 'Other']}\n                nameAttr=\"gender\"\n                value={biodata.gender}\n                changed={(val) => setBiodata({...biodata, gender: val})}\n              />\n            </Col>\n          </Row>\n        </div>\n        <div className={styles.residentialInfo}>\n          <h3>Residential Address</h3>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Street\"\n                type=\"text\"\n                nameAttr=\"residentStreet\"\n                value={residentialInfo.street}\n                changed={(val) => setResidentialInfo({...residentialInfo, street: val})}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <InputField \n                label=\"City\"\n                type=\"text\"\n                nameAttr=\"city\"\n                value={residentialInfo.city}\n                changed={(val) => setResidentialInfo({...residentialInfo, city: val})}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"State\"\n                type=\"select\"\n                options={['Oyo', 'Lagos']}\n                nameAttr=\"state\"\n                value={residentialInfo.state}\n                changed={(val) => setResidentialInfo({...residentialInfo, state: val})}\n              />\n            </Col>\n          </Row>\n        </div>\n        <div className={styles.kinInfo}>\n          <h3>Next of Kin Information</h3>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Full name\"\n                type=\"text\"\n                nameAttr=\"kinFullname\"\n                value={kinInfo.fullName}\n                changed={(val) => setKinInfo({...kinInfo, fullName: val})}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Relationship\"\n                type=\"text\"\n                nameAttr=\"kinRelationship\"\n                value={kinInfo.relationship}\n                changed={(val) => setKinInfo({...kinInfo, relationship: val})}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Email Address\"\n                type=\"email\"\n                nameAttr=\"kinEmail\"\n                value={kinInfo.emailAddress}\n                changed={(val) => setKinInfo({...kinInfo, emailAddress: val})}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Phone Number\"\n                type=\"text\"\n                nameAttr=\"kinPhone\"\n                value={kinInfo.phoneNo}\n                changed={(val) => setKinInfo({...kinInfo, phoneNo: val})}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <InputField \n                label=\"Residential Address\"\n                type=\"text\"\n                nameAttr=\"kinAddress\"\n                placeholder=\"Street address to the nearest bus stop\"\n                value={kinInfo.address}\n                changed={(val) => setKinInfo({...kinInfo, address: val})}\n              />\n            </Col>\n          </Row>\n        </div>\n        <div className={styles.bankInfo}>\n          <h3>Bank Information</h3>\n          <p>Please provide a bank account where we can send your investment proceeds or loan requests to.</p>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"text\"\n                label=\"Bank\"\n                nameAttr=\"bank\"\n                value={bankInfo.bankName}\n                changed={(val) => setBankInfo({...bankInfo, bankName: val})}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Account Type\"\n                type=\"select\"\n                options={[\"Savings\", \"Current\"]}\n                nameAttr=\"acountType\"\n                value={bankInfo.accountType}\n                changed={(val) => setBankInfo({...bankInfo, accountType: val})}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"text\"\n                label=\"Account Number\"\n                nameAttr=\"accountNo\"\n                value={bankInfo.accountNumber}\n                changed={(val) => setBankInfo({...bankInfo, accountNumber: val})}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Account Name\"\n                type=\"text\"\n                nameAttr=\"accountName\"\n                value={bankInfo.accountName}\n                changed={(val) => setBankInfo({ ...bankInfo, accountName: val })}\n              />\n            </Col>\n          </Row>\n        </div>\n        <Button className=\"mt-4\" fullWidth clicked={handleSubmit} bgColor=\"#741763\" size=\"lg\" color=\"#EBEBEB\">\n          Save & Continue\n        </Button>\n      </div>\n    )\n  }\n\n  const IdentityForm = () => {\n\n    const idFileRef = useRef();\n    const passportFileRef= useRef();\n\n    const [idType, setIdType] = useState('');\n\n    return (\n      <div className={styles.identityForm}>\n        <div className={styles.identification}>\n          <h3>Identification</h3>\n          <p className={styles.validID}>Upload a valid government issued Identification</p>\n          <InputField \n            type=\"select\"\n            options={['International Passport', \"Driver's License\", 'Voters Card', 'National Identity Card']}\n            nameAttr=\"identityType\"\n            value={idType}\n            changed={(val) => setIdType(val)}\n          />\n          <FileUploadButton \n            label=\"Choose File\" \n            icon={<FaCloudUploadAlt className=\"ml-3\" size=\"1.1em\" />}\n            id=\"id-upload\" \n            className=\"mt-3\"\n            fileRef={idFileRef}\n          />\n        </div>\n        <div className={styles.passportVerify}>\n          <h3>Upload passport photograph</h3>\n          <p className={styles.passportImg}>Please upload a clear and resent passport photograph.</p>\n          <FileUploadButton \n            label=\"Choose File\" \n            icon={<FaCloudUploadAlt className=\"ml-3\" size=\"1.1em\" />}\n            id=\"passport-upload\"  \n            fileRef={passportFileRef}\n          />\n        </div>\n        <Button className=\"mt-4\" fullWidth clicked={handleSubmit} bgColor=\"#741763\" size=\"lg\" color=\"#EBEBEB\">\n          Save & Continue\n        </Button>\n        <p className={styles.extraTip}>Maximum file size accepted: <span>2mb</span></p>\n        <p className={styles.extraTip}>Accepted formats: <span>JPG & PNG</span></p>\n      </div>\n    )\n  }\n\n  const CompleteStage = () => {\n    return (\n      <div className={styles.stageComplete}>\n        <FaCheckCircle size=\"4em\" color=\"#741763\" />\n        <h2>Congratulations</h2>\n        <p>Account setup completed.</p>\n        <p>Enjoy our amazing loan offer</p>\n      </div>\n    )\n  }\n\n  const resolveStageView = useMemo(() => {\n    if(setupStage === 0) {\n      return <BvnForm />\n    } else if (setupStage === 1) {\n      return <PersonalInfoForm />\n    } else if(setupStage === 2) {\n      return <IdentityForm />\n    } else if(setupStage === 3) {\n      return <CompleteStage />\n    }\n  }, [setupStage])\n\n  return(\n    <Dashboard sidebarRoutes={sidebarRoutes} location={location}>\n      <div className={styles.container}>\n        <h1>Account Setup</h1>\n        <p className={styles.leadText}>Fill the field to complete your profile</p>\n        <ProgressBar stage={setupStage} className={styles.profileProgress} />\n        {resolveStageView}\n      </div>\n    </Dashboard>\n  );\n}\n\n\nexport default Profile;",["92","93"],"/home/tga/Desktop/gypsy-capital/src/components/Dashboard/Dashboard.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/CreditReport/CreditReport.jsx",["94"],"import React from 'react';\nimport styles from './CreditReport.module.scss';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport pageUrl from '../../routes/pageUrl';\nimport { FiLayers } from 'react-icons/fi';\nimport { BiCreditCard } from 'react-icons/bi';\nimport { AiOutlineUser } from 'react-icons/ai';\nimport { GiTakeMyMoney } from 'react-icons/gi';\n\n\nconst CreditReport = ({ location }) => {\n\n  const sidebarRoutes = [\n    {\n      label: \"Dashboard\",\n      link: pageUrl.DASHBOARD_HOMEPAGE,\n      icon: FiLayers\n    },\n    {\n      label: \"Consumer Credit\",\n      link: pageUrl.CONSUMER_CREDIT_PAGE,\n      icon: GiTakeMyMoney\n    },\n    {\n      label: \"Credit Report\",\n      link: pageUrl.CREDIT_REPORT_PAGE,\n      icon: BiCreditCard\n    },\n    {\n      label: \"Profile\",\n      link: pageUrl.PROFILE_PAGE,\n      icon: AiOutlineUser\n    },\n  ]\n\n  return (\n    <Dashboard sidebarRoutes={sidebarRoutes} location={location}>\n\n    </Dashboard>\n  )\n}\n\n\nexport default CreditReport;","/home/tga/Desktop/gypsy-capital/src/components/ProgressBar/ProgressBar.jsx",[],"/home/tga/Desktop/gypsy-capital/src/context/createDataContext.js",["95"],"/home/tga/Desktop/gypsy-capital/src/components/FileUploadButton/FileUploadButton.js",[],"/home/tga/Desktop/gypsy-capital/src/context/AuthContext.js",[],"/home/tga/Desktop/gypsy-capital/src/pages/Overview/Overview.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/ConsumerCredit/ConsumerCredit.jsx",[],{"ruleId":"96","severity":1,"message":"97","line":2,"column":25,"nodeType":"98","messageId":"99","endLine":2,"endColumn":31},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"100","replacedBy":"104"},{"ruleId":"102","replacedBy":"105"},{"ruleId":"100","replacedBy":"106"},{"ruleId":"102","replacedBy":"107"},{"ruleId":"100","replacedBy":"108"},{"ruleId":"102","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":18,"column":6,"nodeType":"112","endLine":18,"endColumn":8,"suggestions":"113"},{"ruleId":"96","severity":1,"message":"114","line":19,"column":9,"nodeType":"98","messageId":"99","endLine":19,"endColumn":15},{"ruleId":"100","replacedBy":"115"},{"ruleId":"102","replacedBy":"116"},{"ruleId":"96","severity":1,"message":"117","line":2,"column":8,"nodeType":"98","messageId":"99","endLine":2,"endColumn":14},{"ruleId":"118","severity":1,"message":"119","line":4,"column":1,"nodeType":"120","endLine":22,"endColumn":2},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","no-native-reassign",["121"],"no-negated-in-lhs",["122"],["121"],["122"],["121"],["122"],["121"],["122"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.","ArrayExpression",["123"],"'stages' is assigned a value but never used.",["121"],["122"],"'styles' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},"Update the dependencies array to be: [state]",{"range":"126","text":"127"},[584,586],"[state]"]