[{"/home/tga/Desktop/gypsy-capital/src/index.js":"1","/home/tga/Desktop/gypsy-capital/src/pages/pages.js":"2","/home/tga/Desktop/gypsy-capital/src/context/ApprovalContext.js":"3","/home/tga/Desktop/gypsy-capital/src/context/BankCotext.js":"4","/home/tga/Desktop/gypsy-capital/src/routes/protectedroute/ProtectedRoute.js":"5","/home/tga/Desktop/gypsy-capital/src/context/createPersistDataContext.js":"6","/home/tga/Desktop/gypsy-capital/src/pages/Profile/Profile.jsx":"7","/home/tga/Desktop/gypsy-capital/src/pages/Overview/Overview.jsx":"8","/home/tga/Desktop/gypsy-capital/src/pages/AboutUs/AboutUs.jsx":"9","/home/tga/Desktop/gypsy-capital/src/pages/LoanList/LoanList.jsx":"10","/home/tga/Desktop/gypsy-capital/src/pages/LoanDetail/LoanDetail.jsx":"11","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorLoans/ProcessorLoans.jsx":"12","/home/tga/Desktop/gypsy-capital/src/pages/LoanCalculator/LoanCalculator.jsx":"13","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorClientDetails/ProcessorClientDetails.jsx":"14","/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerClients/AuthorizerClients.jsx":"15","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorLoanDetails/ProcessorLoanDetails.jsx":"16","/home/tga/Desktop/gypsy-capital/src/hooks/useNavigateAfterAuth.js":"17","/home/tga/Desktop/gypsy-capital/src/components/PersonalForm/PersonalForm.jsx":"18","/home/tga/Desktop/gypsy-capital/src/components/ProgressBar/ProgressBar.jsx":"19","/home/tga/Desktop/gypsy-capital/src/components/ClientList/ClientList.jsx":"20","/home/tga/Desktop/gypsy-capital/src/components/ProfileView/ProfileView.jsx":"21","/home/tga/Desktop/gypsy-capital/src/components/Footer/Footer.jsx":"22","/home/tga/Desktop/gypsy-capital/src/components/ProcessOffer/ProcessOffer.jsx":"23","/home/tga/Desktop/gypsy-capital/src/utils/mappedLgas.js":"24","/home/tga/Desktop/gypsy-capital/src/components/MonoWidget/MonoWidget.jsx":"25","/home/tga/Desktop/gypsy-capital/src/components/EmployerInfoForm/EmployerInfoForm.jsx":"26","/home/tga/Desktop/gypsy-capital/src/components/OfferLetter/OfferLetter.jsx":"27","/home/tga/Desktop/gypsy-capital/src/routes/pageUrl.js":"28","/home/tga/Desktop/gypsy-capital/src/context/AuthContext.js":"29","/home/tga/Desktop/gypsy-capital/src/api/gypsy-web.js":"30","/home/tga/Desktop/gypsy-capital/src/pages/ConsumerCredit/ConsumerCredit.jsx":"31","/home/tga/Desktop/gypsy-capital/src/pages/OtpVerify/OtpVerify.jsx":"32","/home/tga/Desktop/gypsy-capital/src/pages/ContactPage/ContactPage.jsx":"33","/home/tga/Desktop/gypsy-capital/src/pages/ClientListPage/ClientListPage.jsx":"34","/home/tga/Desktop/gypsy-capital/src/pages/ClientDetails/ClientDetails.jsx":"35","/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerLoanDetails/AuthorizerLoanDetails.jsx":"36","/home/tga/Desktop/gypsy-capital/src/routes/sidebarRoutes.js":"37","/home/tga/Desktop/gypsy-capital/src/components/InputField/InputField.js":"38","/home/tga/Desktop/gypsy-capital/src/components/LoanContactForm/LoanContactForm.jsx":"39","/home/tga/Desktop/gypsy-capital/src/components/BankInfoForm/BankInfoForm.jsx":"40","/home/tga/Desktop/gypsy-capital/src/components/Loader/Loader.jsx":"41","/home/tga/Desktop/gypsy-capital/src/components/NavTabs/NavTabs.jsx":"42","/home/tga/Desktop/gypsy-capital/src/hooks/useLoanDetails.js":"43","/home/tga/Desktop/gypsy-capital/src/components/ModalForm/ModalForm.jsx":"44","/home/tga/Desktop/gypsy-capital/src/components/OfferLetter/OfferLetterForm.jsx":"45","/home/tga/Desktop/gypsy-capital/src/components/IdentityForm/IdentityForm.jsx":"46","/home/tga/Desktop/gypsy-capital/src/components/LoanCalculatorForm/LoanCalculatorForm.jsx":"47","/home/tga/Desktop/gypsy-capital/src/utils/convertInputType.js":"48","/home/tga/Desktop/gypsy-capital/src/context/RepaymentContext.js":"49","/home/tga/Desktop/gypsy-capital/src/utils/nigeriaStates.js":"50","/home/tga/Desktop/gypsy-capital/src/context/LoanContext.js":"51","/home/tga/Desktop/gypsy-capital/src/utils/history.js":"52","/home/tga/Desktop/gypsy-capital/src/utils/resolveToken.js":"53","/home/tga/Desktop/gypsy-capital/src/pages/CreditReport/CreditReport.jsx":"54","/home/tga/Desktop/gypsy-capital/src/pages/AgentOverview/AgentOverview.jsx":"55","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorDashboard/ProcessorDashboard.jsx":"56","/home/tga/Desktop/gypsy-capital/src/pages/Support/Support.jsx":"57","/home/tga/Desktop/gypsy-capital/src/pages/ForgotPassword/ForgotPassword.jsx":"58","/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerClientDetails/AuthorizerClientDetails.jsx":"59","/home/tga/Desktop/gypsy-capital/src/components/Button/Button.jsx":"60","/home/tga/Desktop/gypsy-capital/src/components/ScrollToTopOnMount/ScrollToTopOnMount.jsx":"61","/home/tga/Desktop/gypsy-capital/src/components/CustomDatePicker/CustomDatePicker.jsx":"62","/home/tga/Desktop/gypsy-capital/src/components/AccountSetupModal/AccountSetupModal.jsx":"63","/home/tga/Desktop/gypsy-capital/src/pages/HomePage/HomePage.jsx":"64"},{"size":601,"mtime":1615892768088,"results":"65","hashOfConfig":"66"},{"size":2387,"mtime":1615165250184,"results":"67","hashOfConfig":"66"},{"size":2972,"mtime":1616141359768,"results":"68","hashOfConfig":"66"},{"size":1970,"mtime":1615411153492,"results":"69","hashOfConfig":"66"},{"size":601,"mtime":1613641026802,"results":"70","hashOfConfig":"66"},{"size":821,"mtime":1612688150601,"results":"71","hashOfConfig":"66"},{"size":5552,"mtime":1614520423023,"results":"72","hashOfConfig":"66"},{"size":5197,"mtime":1613938100761,"results":"73","hashOfConfig":"66"},{"size":7035,"mtime":1615812259183,"results":"74","hashOfConfig":"66"},{"size":4424,"mtime":1615230346385,"results":"75","hashOfConfig":"66"},{"size":10824,"mtime":1616133159312,"results":"76","hashOfConfig":"66"},{"size":1038,"mtime":1614577544983,"results":"77","hashOfConfig":"66"},{"size":7784,"mtime":1615886397781,"results":"78","hashOfConfig":"66"},{"size":4749,"mtime":1615230346385,"results":"79","hashOfConfig":"66"},{"size":1072,"mtime":1614757665510,"results":"80","hashOfConfig":"66"},{"size":38983,"mtime":1616140031604,"results":"81","hashOfConfig":"66"},{"size":990,"mtime":1614729905905,"results":"82","hashOfConfig":"66"},{"size":14673,"mtime":1616126812441,"results":"83","hashOfConfig":"66"},{"size":1565,"mtime":1611429643367,"results":"84","hashOfConfig":"66"},{"size":3204,"mtime":1615363832802,"results":"85","hashOfConfig":"66"},{"size":7350,"mtime":1615166227442,"results":"86","hashOfConfig":"66"},{"size":1498,"mtime":1615812259059,"results":"87","hashOfConfig":"66"},{"size":2173,"mtime":1615812259143,"results":"88","hashOfConfig":"66"},{"size":14356,"mtime":1614449747162,"results":"89","hashOfConfig":"66"},{"size":1633,"mtime":1615286487857,"results":"90","hashOfConfig":"66"},{"size":9874,"mtime":1616129609463,"results":"91","hashOfConfig":"66"},{"size":11980,"mtime":1615826503262,"results":"92","hashOfConfig":"66"},{"size":2456,"mtime":1615165274533,"results":"93","hashOfConfig":"66"},{"size":8060,"mtime":1615162900026,"results":"94","hashOfConfig":"66"},{"size":194,"mtime":1615812339399,"results":"95","hashOfConfig":"66"},{"size":8165,"mtime":1613929899661,"results":"96","hashOfConfig":"66"},{"size":2391,"mtime":1612574568451,"results":"97","hashOfConfig":"66"},{"size":5306,"mtime":1616079331769,"results":"98","hashOfConfig":"66"},{"size":4660,"mtime":1615230346369,"results":"99","hashOfConfig":"66"},{"size":18542,"mtime":1615230346361,"results":"100","hashOfConfig":"66"},{"size":6808,"mtime":1615970512956,"results":"101","hashOfConfig":"66"},{"size":2677,"mtime":1614724878260,"results":"102","hashOfConfig":"66"},{"size":2658,"mtime":1615812259071,"results":"103","hashOfConfig":"66"},{"size":6146,"mtime":1616128974346,"results":"104","hashOfConfig":"66"},{"size":5780,"mtime":1616129780693,"results":"105","hashOfConfig":"66"},{"size":244,"mtime":1614263157725,"results":"106","hashOfConfig":"66"},{"size":504,"mtime":1613386895718,"results":"107","hashOfConfig":"66"},{"size":701,"mtime":1615230346353,"results":"108","hashOfConfig":"66"},{"size":11735,"mtime":1614471117577,"results":"109","hashOfConfig":"66"},{"size":23650,"mtime":1615885590519,"results":"110","hashOfConfig":"66"},{"size":2560,"mtime":1616126960876,"results":"111","hashOfConfig":"66"},{"size":9861,"mtime":1616128754617,"results":"112","hashOfConfig":"66"},{"size":404,"mtime":1616128671630,"results":"113","hashOfConfig":"66"},{"size":2566,"mtime":1616133398878,"results":"114","hashOfConfig":"66"},{"size":6981,"mtime":1616131792816,"results":"115","hashOfConfig":"66"},{"size":7730,"mtime":1614756252067,"results":"116","hashOfConfig":"66"},{"size":84,"mtime":1612764469627,"results":"117","hashOfConfig":"66"},{"size":192,"mtime":1612142197425,"results":"118","hashOfConfig":"66"},{"size":498,"mtime":1613049821733,"results":"119","hashOfConfig":"66"},{"size":5044,"mtime":1615450279629,"results":"120","hashOfConfig":"66"},{"size":5721,"mtime":1615450279669,"results":"121","hashOfConfig":"66"},{"size":473,"mtime":1614546415965,"results":"122","hashOfConfig":"66"},{"size":1549,"mtime":1613844663739,"results":"123","hashOfConfig":"66"},{"size":2997,"mtime":1615812259183,"results":"124","hashOfConfig":"66"},{"size":917,"mtime":1614587267822,"results":"125","hashOfConfig":"66"},{"size":183,"mtime":1615812259163,"results":"126","hashOfConfig":"66"},{"size":794,"mtime":1615944781210,"results":"127","hashOfConfig":"66"},{"size":21688,"mtime":1614430258872,"results":"128","hashOfConfig":"66"},{"size":16172,"mtime":1616141449357,"results":"129","hashOfConfig":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},"t9s37o",{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"139"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"139"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"132"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"132"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"139"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"132"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"132"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"132"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"132"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"132"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"132"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"132"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"132"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"132"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"132"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"132"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"132"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/tga/Desktop/gypsy-capital/src/index.js",[],["277","278"],"/home/tga/Desktop/gypsy-capital/src/pages/pages.js",[],"/home/tga/Desktop/gypsy-capital/src/context/ApprovalContext.js",[],"/home/tga/Desktop/gypsy-capital/src/context/BankCotext.js",[],["279","280"],"/home/tga/Desktop/gypsy-capital/src/routes/protectedroute/ProtectedRoute.js",["281"],"import React, { useContext } from 'react';\nimport { Route, Redirect, useLocation } from 'react-router-dom';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport pageUrl from '../pageUrl';\n\n\nconst ProtectedRoute = ({component: Component, ...rest}) => {\n\n  const { state: { loggedIn, user } } = useContext(AuthContext);\n  const location = useLocation()\n\n  return (\n    <Route {...rest}>\n      { loggedIn ? \n          <Component /> :\n          <Redirect to={{ pathname: pageUrl.SIGNIN_PAGE, state: { from: location } }} />\n      }\n    </Route>\n  )\n}\n\n\nexport default ProtectedRoute;","/home/tga/Desktop/gypsy-capital/src/context/createPersistDataContext.js",["282"],"import React, {createContext, useReducer, useEffect } from 'react';\n\n\nexport default (reducer, actions, initialState, persist, saveData) => {\n  const Context = createContext();\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState, () => {\n      if(persist) {\n        const localData = localStorage.getItem('gypsy');\n        return localData ? JSON.parse(localData) : {}\n      }\n    });\n\n    useEffect(() => {\n      if(persist) {\n        saveData(state);\n        // console.log(state);\n      }\n    }, [state])\n\n    const boundActions = {}\n\n    for(let key in actions) {\n      boundActions[key] = actions[key](dispatch);\n    }\n\n    return (\n      <Context.Provider value={{ state, ...boundActions }}>{children}</Context.Provider>\n    )\n  }\n\n  return { Context, Provider }\n}","/home/tga/Desktop/gypsy-capital/src/pages/Profile/Profile.jsx",["283","284","285"],"/home/tga/Desktop/gypsy-capital/src/pages/Overview/Overview.jsx",["286","287"],"import React, { useContext, useEffect, useState } from 'react';\nimport styles from './Overview.module.scss';\nimport { clientRoutes } from '../../routes/sidebarRoutes';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport Button from '../../components/Button/Button';\nimport gypsyNote from '../../assets/icons/gypsyNotes.svg';\nimport altInvestment from '../../assets/icons/alternative.svg';\nimport { Col, Row } from 'react-bootstrap';\nimport noLoan from '../../assets/no-loan.png';\nimport moment from 'moment';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { Context as LoanContext } from '../../context/LoanContext';\nimport { useRouteMatch, useHistory, useLocation } from 'react-router-dom';\n\n\nconst Overview = () => {\n\n  const { path } = useRouteMatch();\n  const history = useHistory();\n  const location = useLocation();\n  const [activeLoan, setActiveLoan] = useState(null);\n\n  const { state: { user } } = useContext(AuthContext);\n  const { state: { loans }, retrieveClientLoans } = useContext(LoanContext)\n\n  useEffect(() => {\n    retrieveClientLoans()\n  }, []);\n\n  useEffect(() => {\n    const statusToDisplay = loans.filter(loan => loan.status.toLowerCase() === 'pending' || 'active');\n    console.log(statusToDisplay[0]);\n    setActiveLoan(statusToDisplay[0]);\n  }, [loans]);\n\n  useEffect(() => {\n    console.log(user);\n  }, [user]);\n\n  const numberWithCommas = (x) => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  if(!user) {\n    return null\n  }\n\n  return (\n    <Dashboard sidebarRoutes={clientRoutes} location={location}>\n      <div className={styles.welcomeGroup}>\n        <h2>Hey, {user.firstName}</h2>\n        <p className={styles.currentDate}>Today is {moment().format('dddd Do[,] MMMM')}.</p>\n      </div>\n      <div className={styles.loanStatus} style={{padding: '30px 40px'}}>\n        { !activeLoan && <div className={styles.innerContainer}>\n          <div className={styles.mainContent}>\n            <h3>Active Loan</h3>\n            <p>Sorry you currently have no active loan</p>\n            <Button\n              bgColor=\"#741763\"\n              size=\"sm\"\n              color=\"#fff\"\n              className=\"mt-4\"\n              clicked={() => history.push('/dashboard/consumer-credit/apply/calculator')}\n            >\n              Apply for loan\n            </Button>\n          </div>\n          <img src={noLoan} alt=\"No active loan\" height=\"280\" />\n        </div> } \n        { activeLoan && <div className={styles.activeStyle}>\n          <div className={styles.mainContent}>\n            <h3>Active Loan <span>{activeLoan.status}</span></h3>\n            <div className={styles.statusBoard}>\n              <Row>\n                <Col className={styles.borderClass}>\n                  <div className={styles.loanData}>\n                    <div>\n                      <h6>Loan amount</h6>\n                      <h1>{`N${numberWithCommas(activeLoan.amount)}`}</h1>\n                    </div>\n                  </div>\n                </Col>\n                <Col className={styles.borderClass}>\n                  <div className={styles.loanData}>\n                    <div>\n                      <h6>Monthly Repayment</h6>\n                      <h1>{`N${numberWithCommas(activeLoan.monthlyRepayment)}`}</h1>\n                    </div>\n                  </div>\n                </Col>\n                <Col>\n                  <div className={styles.loanData}>\n                    <div>\n                      <h6>Tenure</h6>\n                      <h1>{activeLoan.paymentPeriod}</h1>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </div>}\n      </div>\n      <div className={styles.otherProducts}>\n        <Row>\n          <Col sm={12} md={6}>\n            <div className={[styles.product, styles.borderClass].join(' ')}>\n              <div className={styles.productIcon}>\n                <img src={gypsyNote} alt=\"Gypsy Notes\" width=\"25\" />\n              </div>\n              <h3 className={styles.productTitle}>Gypsy Notes</h3>\n              <p className=\"mt-2\">Let your money work for you and enjoy high interest rates on your money. Start a Gypsy Fixed Income Note today and earn more.</p>\n              <button className={[styles.productBtn, \"mt-3\"].join(' ')}>\n                Be the first to know when we launch\n              </button>\n            </div>\n          </Col>\n          <Col sm={12} md={6}>\n            <div className={[styles.product, styles.border2Class].join(' ')}>\n              <div className={styles.productIcon}>\n                <img src={altInvestment} alt=\"Alternative Investment\" width=\"40\" />\n              </div>\n              <h3 className={styles.productTitle}>Alternative Investment</h3>\n              <p className=\"mt-2\">Are you an investor who seek greater rewards? Our Alternative Investment service is here to help you earn more.</p>\n              <button className={[styles.productBtn, \"mt-3\"].join(' ')}>\n                Be the first to know when we launch\n              </button>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </Dashboard>\n  )\n}\n\n\nexport default Overview;","/home/tga/Desktop/gypsy-capital/src/pages/AboutUs/AboutUs.jsx",["288","289","290"],"/home/tga/Desktop/gypsy-capital/src/pages/LoanList/LoanList.jsx",["291"],"import React, { useState, useContext, useEffect } from 'react';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport styles from './LoanList.module.scss';\nimport { useLocation, Link } from 'react-router-dom';\nimport { routes } from '../../routes/sidebarRoutes';\nimport InputField from '../../components/InputField/InputField';\nimport moment from 'moment';\nimport { Table, Pagination } from 'react-bootstrap';\nimport { numberWithCommas } from '../../utils/nigeriaStates';\nimport usePagination from '../../hooks/usePagination';\nimport { Context as LoanContext } from '../../context/LoanContext';\nimport _ from 'lodash';\nimport Loader from '../../components/Loader/Loader';\nimport { TiCancelOutline } from 'react-icons/ti';\n\n\nconst LoanList = () => {\n\n  const { state: { loans, loading }, retrieveClientLoans } = useContext(LoanContext);\n\n  useEffect(() => {\n    retrieveClientLoans();\n  }, []);\n\n  console.log(loans);\n\n  const location = useLocation();\n  const salesRoutes = routes[1];\n  const [filterInput, setFilterInput] = useState('');\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(5);\n\n   const {  \n     currentList,\n     items,\n     goToPrevPage,\n     goToNextPage\n   } = usePagination(currentPage, postsPerPage, loans, setCurrentPage, styles);\n\n  return (\n    <Dashboard sidebarRoutes={salesRoutes} location={location}>\n      <div className={styles.welcomeGroup}>\n        <div>\n          <h2>Loans</h2>\n          <p className={styles.currentDate}>Today is {moment().format('dddd Do[,] MMMM')}.</p>\n        </div>\n      </div>\n      <div className={styles.loansTable}>\n        <div className={styles.filterInput}>\n          <p>Filter</p>\n          <div className={styles.inputWrapper}>\n            <InputField \n              type=\"select\"\n              options={['Active Loans', 'Pending Loans', 'Declined Loans', 'Expired Loans']}\n              nameAttr='filterInput'\n              value={filterInput}\n              changed={(val) => setFilterInput(val)}\n            />\n          </div>\n        </div>\n        { !loading ? <div className={styles.cardTable}>\n          <Table>\n            <thead>\n              <tr>\n                <th>Loan ID</th>\n                <th>Monthly Repayment</th>\n                <th>Tenure</th>\n                <th>Status</th>\n                <th>Repayment Source</th>\n                <th>Loan Amount</th>\n                <th>DTI</th>\n                <th>Balance</th>\n              </tr>\n            </thead>\n            { currentList && currentList.length > 0 ? <tbody>\n              { currentList.map((loan, idx) => (\n                <tr>\n                  <td className={styles.loanId}>\n                    <Link to={`/sales-agent/loan/${loan._id}`}>\n                      {loan._id.slice(0,6)}\n                    </Link>\n                  </td>\n                  <td>{`N ${numberWithCommas(loan.monthlyRepayment)}`}</td>\n                  <td>{loan.paymentPeriod}</td>\n                  <td>{_.capitalize(loan.status)}</td>\n                  <td>{'Salary'}</td>\n                  <td>{`N ${numberWithCommas(loan.amount)}`}</td>\n                  <td>{`${loan?.DTI}%`}</td>\n                  <td>______</td>\n                </tr>\n              ))}\n            </tbody> : null }\n          </Table>\n          { currentList && currentList.length === 0 ? <div className={styles.nullList}>\n            <TiCancelOutline size=\"6em\" color=\"rgba(116, 23, 99, 0.6)\" />\n          </div> : null }\n          { currentList && currentList.length > 0 ? <div className={styles.tableFooter}>\n            <div className={styles.rowsInput}>\n              <p>Rows per page: </p>\n              <select onChange={(e) => setPostsPerPage(Number(e.currentTarget.value))}>\n                <option value={5} selected>5</option>\n                <option value={10}>10</option>\n                <option value={15}>15</option>\n                <option value={20}>20</option>\n                <option value={10}>25</option>\n                <option value={30}>30</option>\n              </select>\n            </div>\n            <Pagination className={styles.pagination}>\n              <Pagination.Prev onClick={goToPrevPage}/>\n              {items}\n              <Pagination.Next onClick={goToNextPage} />\n            </Pagination>\n          </div> : null }\n        </div> : <Loader /> }\n      </div>\n    </Dashboard>\n  )\n}\n\n\nexport default LoanList;","/home/tga/Desktop/gypsy-capital/src/pages/LoanDetail/LoanDetail.jsx",["292","293","294","295"],"/home/tga/Desktop/gypsy-capital/src/pages/ProcessorLoans/ProcessorLoans.jsx",["296","297"],"/home/tga/Desktop/gypsy-capital/src/pages/LoanCalculator/LoanCalculator.jsx",["298","299"],"/home/tga/Desktop/gypsy-capital/src/pages/ProcessorClientDetails/ProcessorClientDetails.jsx",["300","301"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { routes } from '../../routes/sidebarRoutes';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport styles from './ProcessorClientDetails.module.scss';\nimport NavTabs from '../../components/NavTabs/NavTabs';\nimport { Biodata, NextOfKin, Bank, Employer, ClientLoan } from '../ClientDetails/ClientDetails';\nimport { Row, Col, Modal } from 'react-bootstrap';\nimport { IoDocumentTextOutline } from 'react-icons/io5';\nimport { RiDeleteBin5Line } from 'react-icons/ri'\nimport { FiEye } from 'react-icons/fi';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport Loader from '../../components/Loader/Loader';\nimport useLoanDetails from '../../hooks/useLoanDetails';\n\n\nconst DocCard = ({ docTitle, docLink }) => {\n\n  const [show, setShow] = useState(false);\n\n  const openDoc = () => {\n    setShow(true);\n  }\n\n  const handleClose = () => {\n    setShow(false);\n  }\n\n  return (\n    <>\n      <div className={styles.documentCard}>\n        <div style={{ width: \"100%\", textAlign: \"center\"}}>\n          <IoDocumentTextOutline color=\"#741763\" size=\"5em\" />\n          <div className={styles.ctrlBtn}>\n            <RiDeleteBin5Line size=\"1.3em\" color=\"#741763\" />\n            <FiEye size=\"1.3em\" color=\"#741763\" onClick={openDoc} />\n          </div>\n        </div>\n      </div>\n      <h4 className={styles.docTitle}>{docTitle}</h4>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Body className={styles.documentImg}>\n          <img width=\"100%\" src={docLink} />\n        </Modal.Body>\n      </Modal>\n    </>\n  )\n}\n\nexport const DocTab = ({ userId }) => {\n\n  const [ loanDeets ] = useLoanDetails(userId);\n\n  console.log(loanDeets); \n\n  return (\n    <>\n      <Row>\n        <Col>\n          <DocCard docTitle=\"Identification\" docLink={loanDeets?.client[0]?.identity?.identityImageUrl} />\n        </Col>\n        <Col>\n          <DocCard docTitle=\"Proof of Address\" docLink={loanDeets?.residence[0]?.residenceProof} />\n        </Col>\n        <Col>\n          <DocCard docTitle=\"Official Document\" docLink={loanDeets?.employment[0]?.officialDocumentUrl} />\n        </Col>\n        <Col>\n          <DocCard docTitle=\"Statement of Account\" docLink={loanDeets?.bank[0]?.accountStatementUrl} />\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nconst ProcessorClientDetails = () => {\n\n  const location = useLocation();\n  const processorRoute = routes[2];\n  const { clientId } = useParams();\n  console.log(clientId);\n\n  const { state: { userDetails, loading }, getClientDetails } = useContext(UserContext);\n  const { state: { user } } = useContext(AuthContext);\n\n  useEffect(() => {\n    getClientDetails(clientId);\n  }, []);\n\n  console.log(userDetails);\n\n  const [detailSection, setDetailSection] = useState('biodata');\n\n  const navArray = [\n    {\n      title: \"Biodata\",\n      shortlink: \"biodata\"\n    },\n    {\n      title: \"Next of Kin Info\",\n      shortlink: \"kin\"\n    },\n    {\n      title: \"Bank Info\",\n      shortlink: \"bank\"\n    },\n    {\n      title: \"Employment Info\",\n      shortlink: \"employ\"\n    },\n    {\n      title: \"Document\",\n      shortlink: \"doc\"\n    },\n    {\n      title: \"Loans\",\n      shortlink: \"loans\"\n    },\n  ]\n\n  const setActiveTab = (link) => {\n    setDetailSection(link);\n  }\n\n\n  return (\n    <>\n      <Dashboard sidebarRoutes={processorRoute} location={location}>\n        <NavTabs navs={navArray} setActive={setActiveTab} currentTab={detailSection } />\n        { !loading ? <div className={detailSection !== \"loans\" && styles.detailFields}>\n          { detailSection === \"biodata\" && \n            <Biodata \n              data={userDetails && {...userDetails.bioData, ...userDetails.residence}}\n              userId={userDetails?.clientId}\n            /> \n          }\n          { detailSection === \"kin\" && \n            <NextOfKin \n              data={userDetails && { ...userDetails.nextOfKin }}\n            /> \n          }\n          { detailSection === \"bank\" && \n            <Bank \n              data={userDetails && { ...userDetails.bank }}\n            /> \n          }\n          { detailSection === \"employ\" && \n            <Employer \n              data={userDetails.employer && { ...userDetails.employer }}\n            /> \n          }\n          { detailSection === \"doc\" && <DocTab userId={userDetails?.clientId} /> }\n          { detailSection === \"loans\" && \n            <ClientLoan \n              userRole={user.role}\n              userId={userDetails && userDetails.clientId}\n            /> \n          }\n        </div> : <Loader />}\n      </Dashboard>\n    </>\n  )\n}\n\n\nexport default ProcessorClientDetails;","/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerClients/AuthorizerClients.jsx",["302","303"],"import React, { useEffect, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport { routes } from '../../routes/sidebarRoutes';\nimport ClientList from '../../components/ClientList/ClientList';\nimport styles from './AuthorizerClients.module.scss';\nimport Loader from '../../components/Loader/Loader';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\n\n\nconst AuthorizerClients = () => {\n\n  const authorizerRoutes = routes[3]\n  const location = useLocation()\n\n  const { state: { user } } = useContext(AuthContext);\n  const { state: { clientsForRole, loading }, getClientListForRole } = useContext(UserContext);\n\n  useEffect(() => {\n    getClientListForRole()\n  }, [])\n\n  return(\n    <Dashboard sidebarRoutes={authorizerRoutes} location={location}>\n      { !loading ? <ClientList clientList={clientsForRole} role={user.role}/> : <Loader /> }\n    </Dashboard>\n  )\n}\n\n\nexport default AuthorizerClients;","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorLoanDetails/ProcessorLoanDetails.jsx",["304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321"],"/home/tga/Desktop/gypsy-capital/src/hooks/useNavigateAfterAuth.js",["322"],"import { useContext, useEffect } from 'react';\nimport { Context as AuthContext } from '../context/AuthContext';\nimport history from '../utils/history';\nimport pageUrl from '../routes/pageUrl';\n\n\nexport default (email, password) => {\n  const { state: { user }, getActiveUser } = useContext(AuthContext);\n\n  useEffect(() => {\n    if(user?.role && user.role === \"client\") {\n      history.push(pageUrl.DASHBOARD_HOMEPAGE)\n    } else if(user?.role && user.role === \"admin\") {\n      history.push(pageUrl.PROCESSORS_DASHBOARD)\n    } else if(user?.role && user.role === \"sales\") {\n      history.push(pageUrl.SALES_AGENT_OVERVIEW)\n    } else if(user?.role && user.role === \"processor\") {\n      history.push(pageUrl.PROCESSORS_DASHBOARD)\n    } else if(user?.role && user.role === \"authorizer\") {\n      history.push(pageUrl.AUTHORIZER_OVERVIEW) \n    }\n  }, [user])\n\n  const signinAndNavigate = (signinFunc) => {\n    signinFunc({ email, password }, getActiveUser)\n  }\n\n  return [ signinAndNavigate ];\n}","/home/tga/Desktop/gypsy-capital/src/components/PersonalForm/PersonalForm.jsx",["323","324","325","326"],"import React, { useState, useContext, useEffect, useMemo } from \"react\";\nimport styles from \"./PersonalForm.module.scss\";\nimport { Row, Col, Spinner } from \"react-bootstrap\";\nimport { Context as AuthContext } from \"../../context/AuthContext\";\nimport InputField from \"../InputField/InputField\";\nimport Button from \"../Button/Button\";\nimport { Context as UserContext } from \"../../context/UserContext\";\nimport { nigeriaStates } from \"../../utils/nigeriaStates\";\nimport { Context as BankContext } from \"../../context/BankCotext\";\nimport { validateInput } from \"../../utils/validateInput\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nconst PersonalForm = ({ submit }) => {\n  const {\n    state: { bankList, userBankDetails, bankLoading },\n    getBankList,\n    verifyBankInfo,\n  } = useContext(BankContext);\n  const {\n    state: { user },\n  } = useContext(AuthContext);\n  const {\n    state: { userDetails, loading },\n    getClientDetails,\n  } = useContext(UserContext);\n\n  useEffect(() => {\n    (async () => {\n      await getClientDetails(user.user_id);\n      await getBankList();\n    })();\n  }, []);\n\n  const bankNames = useMemo(() => {\n    return bankList ? bankList.map((bank) => bank.name) : [];\n  }, [bankList]);\n\n  const [biodata, setBiodata] = useState({\n    fullName: \"\",\n    dateOfBirth: \"\",\n    bvnPhoneNo: \"\",\n    email: \"\",\n    phoneNo: \"\",\n    altPhone: \"\",\n    gender: null,\n  });\n  const [biodataErrors, setBiodataErrors] = useState({\n    fullName: null,\n    dateOfBirth: null,\n    bvnPhoneNo: null,\n    email: null,\n    phoneNo: null,\n    altPhone: null,\n    gender: null,\n  });\n  const [residentialInfo, setResidentialInfo] = useState({\n    street: \"\",\n    city: \"\",\n    state: null,\n  });\n  const [residentialErrors, setResidentialErrors] = useState({\n    street: null,\n    city: null,\n    state: null,\n  });\n  const [kinInfo, setKinInfo] = useState({\n    fullName: \"\",\n    relationship: \"\",\n    email: \"\",\n    phoneNo: \"\",\n    address: \"\",\n  });\n  const [kinErrors, setKinErrors] = useState({\n    fullName: null,\n    relationship: null,\n    email: null,\n    phoneNo: null,\n    address: null,\n  });\n  const [bankInfo, setBankInfo] = useState({\n    bankName: null,\n    accountType: null,\n    accountNumber: \"\",\n    accountName: \"\",\n  });\n  const [bankInfoErrors, setBankInfoErrors] = useState({\n    bankName: null,\n    accountType: null,\n    accountNumber: null,\n    accountName: null,\n  });\n\n  useEffect(() => {\n    if (bankInfo.accountNumber.length === 10 && bankInfo.bankName) {\n      const bank = bankList.find(\n        (bank) => bank.name.toLowerCase() === bankInfo.bankName\n      );\n      const bankCode = bank.code;\n      console.log(bankCode);\n      verifyBankInfo(bankInfo.accountNumber, bankCode);\n    }\n  }, [bankInfo.accountNumber, bankInfo.bankName]);\n\n  useEffect(() => {\n    console.log(userBankDetails);\n    if (userBankDetails) {\n      setBankInfo({ ...bankInfo, accountName: userBankDetails.account_name });\n    }\n  }, [userBankDetails]);\n\n  const handleSubmit = () => {\n    const validatedBiodata = validateInput(biodata, setBiodataErrors);\n    const validatedResidence = validateInput(\n      residentialInfo,\n      setResidentialErrors\n    );\n    const validatedKinInfo = validateInput(kinInfo, setKinErrors);\n    const validatedBankInfo = validateInput(bankInfo, setBankInfoErrors);\n    if (\n      validatedBiodata &&\n      validatedResidence &&\n      validatedKinInfo &&\n      validatedBankInfo\n    ) {\n      submit(biodata, residentialInfo, kinInfo, bankInfo);\n    }\n  };\n\n  useEffect(() => {\n    if (user && userDetails) {\n      const { bioData } = userDetails;\n      setBiodata({\n        ...biodata,\n        fullName: `${user.firstName} ${user.lastName}`,\n        email: user.email,\n        phoneNo: user.phoneNumber.replace(\"234\", \"0\"),\n        dateOfBirth: bioData.DOB,\n        bvnPhoneNo: bioData.bvnPhoneNumber,\n      });\n    }\n  }, [user, userDetails]);\n\n  if (!userDetails) {\n    return (\n      <div className={styles.loadingStyle}>\n        <Spinner animation=\"grow\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.personalInfo}>\n      <div className={styles.biodata}>\n        <h3>Biodata Information</h3>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField\n              label=\"Full name\"\n              type=\"text\"\n              nameAttr=\"fullname\"\n              value={biodata.fullName}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, fullName: null });\n                setBiodata({ ...biodata, fullName: val });\n              }}\n              error={biodataErrors.fullName && biodataErrors.fullName}\n            />\n          </Col>\n          <Col>\n            <InputField\n              label=\"Date of Birth\"\n              type=\"text\"\n              nameAttr=\"dob\"\n              value={biodata.dateOfBirth}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, dateOfBirth: null });\n                setBiodata({ ...biodata, dateOfBirth: val });\n              }}\n              error={biodataErrors.dateOfBirth && biodataErrors.dateOfBirth}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField\n              label=\"BVN-linked Phone Number\"\n              type=\"text\"\n              nameAttr=\"bvnPhoneNo\"\n              value={biodata.bvnPhoneNo}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, bvnPhoneNo: null });\n                setBiodata({ ...biodata, bvnPhoneNo: val });\n              }}\n              error={biodataErrors.bvnPhoneNo && biodataErrors.bvnPhoneNo}\n            />\n          </Col>\n          <Col>\n            <InputField\n              label=\"Email\"\n              type=\"email\"\n              nameAttr=\"email\"\n              value={biodata.email}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, email: null });\n                setBiodata({ ...biodata, email: val });\n              }}\n              error={biodataErrors.email && biodataErrors.email}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField\n              label=\"Phone Number\"\n              type=\"text\"\n              nameAttr=\"PhoneNo\"\n              value={biodata.phoneNo}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, phoneNo: null });\n                setBiodata({ ...biodata, phoneNo: val });\n              }}\n              error={biodataErrors.phoneNo && biodataErrors.phoneNo}\n            />\n          </Col>\n          <Col>\n            <InputField\n              label=\"Alternative Phone Number\"\n              type=\"text\"\n              nameAttr=\"altPhoneNo\"\n              value={biodata.altPhone}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, altPhone: null });\n                setBiodata({ ...biodata, altPhone: val });\n              }}\n              error={biodataErrors.altPhone && biodataErrors.altPhone}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <InputField\n              label=\"Gender\"\n              type=\"select\"\n              options={[\"Female\", \"Male\", \"Other\"]}\n              nameAttr=\"gender\"\n              value={biodata.gender}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, gender: null });\n                setBiodata({ ...biodata, gender: val });\n              }}\n              error={biodataErrors.gender && biodataErrors.gender}\n            />\n          </Col>\n        </Row>\n      </div>\n      <div className={styles.residentialInfo}>\n        <h3>Residential Address</h3>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField\n              label=\"Street\"\n              type=\"text\"\n              nameAttr=\"residentStreet\"\n              value={residentialInfo.street}\n              changed={(val) => {\n                setResidentialErrors({ ...residentialErrors, street: null });\n                setResidentialInfo({ ...residentialInfo, street: val });\n              }}\n              error={residentialErrors.street && residentialErrors.street}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <InputField\n              label=\"City\"\n              type=\"text\"\n              nameAttr=\"city\"\n              value={residentialInfo.city}\n              changed={(val) => {\n                setResidentialErrors({ ...residentialErrors, city: null });\n                setResidentialInfo({ ...residentialInfo, city: val });\n              }}\n              error={residentialErrors.city && residentialErrors.city}\n            />\n          </Col>\n          <Col>\n            <InputField\n              label=\"State\"\n              type=\"select\"\n              options={nigeriaStates}\n              nameAttr=\"state\"\n              value={residentialInfo.state}\n              changed={(val) => {\n                setResidentialErrors({ ...residentialErrors, state: null });\n                setResidentialInfo({ ...residentialInfo, state: val });\n              }}\n              error={residentialErrors.state && residentialErrors.state}\n            />\n          </Col>\n        </Row>\n      </div>\n      <div className={styles.kinInfo}>\n        <h3>Next of Kin Information</h3>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField\n              label=\"Full name\"\n              type=\"text\"\n              nameAttr=\"kinFullname\"\n              value={kinInfo.fullName}\n              changed={(val) => {\n                setKinErrors({ ...kinErrors, fullName: null });\n                setKinInfo({ ...kinInfo, fullName: val });\n              }}\n              error={kinErrors.fullName && kinErrors.fullName}\n            />\n          </Col>\n          <Col>\n            <InputField\n              label=\"Relationship\"\n              type=\"text\"\n              nameAttr=\"kinRelationship\"\n              value={kinInfo.relationship}\n              changed={(val) => {\n                setKinErrors({ ...kinErrors, relationship: null });\n                setKinInfo({ ...kinInfo, relationship: val });\n              }}\n              error={kinErrors.relationship && kinErrors.relationship}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField\n              label=\"Email Address\"\n              type=\"email\"\n              nameAttr=\"kinEmail\"\n              value={kinInfo.email}\n              changed={(val) => {\n                setKinErrors({ ...kinErrors, email: null });\n                setKinInfo({ ...kinInfo, email: val });\n              }}\n              error={kinErrors.email && kinErrors.email}\n            />\n          </Col>\n          <Col>\n            <InputField\n              label=\"Phone Number\"\n              type=\"text\"\n              nameAttr=\"kinPhone\"\n              value={kinInfo.phoneNo}\n              changed={(val) => {\n                setKinErrors({ ...kinErrors, phoneNo: null });\n                setKinInfo({ ...kinInfo, phoneNo: val });\n              }}\n              error={kinErrors.phoneNo && kinErrors.phoneNo}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <InputField\n              label=\"Residential Address\"\n              type=\"text\"\n              nameAttr=\"kinAddress\"\n              placeholder=\"Street address to the nearest bus stop\"\n              value={kinInfo.address}\n              changed={(val) => {\n                setKinErrors({ ...kinErrors, address: null });\n                setKinInfo({ ...kinInfo, address: val });\n              }}\n              error={kinErrors.address && kinErrors.address}\n            />\n          </Col>\n        </Row>\n      </div>\n      <div className={styles.bankInfo}>\n        <h3>Bank Information</h3>\n        <p>\n          Please provide a bank account where we can send your investment\n          proceeds or loan requests to.\n        </p>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField\n              type=\"select\"\n              label=\"Bank\"\n              options={bankNames}\n              nameAttr=\"bank\"\n              value={bankInfo.bankName}\n              changed={(val) => {\n                setBankInfoErrors({ ...bankInfoErrors, bankName: null });\n                setBankInfo({ ...bankInfo, bankName: val });\n              }}\n              error={bankInfoErrors.bankName && bankInfoErrors.bankName}\n            />\n          </Col>\n          <Col>\n            <InputField\n              label=\"Account Type\"\n              type=\"select\"\n              options={[\"Savings\", \"Current\"]}\n              nameAttr=\"acountType\"\n              value={bankInfo.accountType}\n              changed={(val) => {\n                setBankInfoErrors({ ...bankInfoErrors, accountType: null });\n                setBankInfo({ ...bankInfo, accountType: val });\n              }}\n              error={bankInfoErrors.accountType && bankInfoErrors.accountType}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField\n              type=\"text\"\n              label=\"Account Number\"\n              nameAttr=\"accountNo\"\n              value={bankInfo.accountNumber}\n              changed={(val) => {\n                setBankInfoErrors({ ...bankInfoErrors, accountNumber: null });\n                setBankInfo({ ...bankInfo, accountNumber: val });\n              }}\n              error={\n                bankInfoErrors.accountNumber && bankInfoErrors.accountNumber\n              }\n            />\n          </Col>\n          <Col>\n            {!bankLoading ? (\n              <InputField\n                label=\"Account Name\"\n                type=\"text\"\n                nameAttr=\"accountName\"\n                value={bankInfo.accountName}\n                disable={true}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, accountName: null });\n                  setBankInfo({ ...bankInfo, accountName: val });\n                }}\n                error={bankInfoErrors.accountName && bankInfoErrors.accountName}\n              />\n            ) : (\n              <div className={styles.loaderWrapper}>\n                <BeatLoader color=\"#741763\" size={10} />\n              </div>\n            )}\n          </Col>\n        </Row>\n      </div>\n      <Button\n        className=\"mt-4\"\n        clicked={handleSubmit}\n        loading={loading}\n        disabled={loading}\n        fullWidth\n        bgColor=\"#741763\"\n        size=\"lg\"\n        color=\"#EBEBEB\"\n      >\n        Save & Continue\n      </Button>\n    </div>\n  );\n};\n\nexport default PersonalForm;\n","/home/tga/Desktop/gypsy-capital/src/components/ProgressBar/ProgressBar.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/ClientList/ClientList.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/ProfileView/ProfileView.jsx",["327","328"],"/home/tga/Desktop/gypsy-capital/src/components/Footer/Footer.jsx",["329"],"import React from \"react\";\nimport styles from \"./Footer.module.scss\";\nimport {\n  FaFacebookF,\n  FaTwitter,\n  FaInstagram,\n  FaLinkedin,\n} from \"react-icons/fa\";\nimport PlainLogo from \"../../assets/logo-white.png\";\nimport { Link } from \"react-router-dom\";\nimport pageUrl from \"../../routes/pageUrl\";\n\nconst Footer = () => {\n  return (\n    <div className={styles.footerSection}>\n      <div className={styles.container}>\n        <img src={PlainLogo} alt=\"Gypsy Logo\" />\n        <div className={styles.socialLinks}>\n          <a href=\"#\">\n            <FaFacebookF size=\"1.4em\" />\n          </a>\n          <a href=\"https://twitter.com/gypsycapital?s=21\" target=\"blank\">\n            <FaTwitter size=\"1.4em\" />\n          </a>\n          <a\n            href=\"https://instagram.com/gypsycapital?igshid=1g1gf2sug3h9w\"\n            target=\"blank\"\n          >\n            <FaInstagram size=\"1.4em\" />\n          </a>\n          <Link>\n            <FaLinkedin size=\"1.4em\" />\n          </Link>\n        </div>\n        <div className={styles.footerLinks}>\n          <ul>\n            <li>\n              <Link to={pageUrl.PRIVACY_POLICY_PAGE}>Privacy Policy</Link>\n            </li>\n            <li>\n              <Link to={pageUrl.TERMS_CONDITIONS_PAGE}>Terms & Conditions</Link>\n            </li>\n          </ul>\n        </div>\n        <p className={styles.copyright}>\n          &copy; {new Date().getFullYear()} Gypsy Capital. All Rights Reserved\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","/home/tga/Desktop/gypsy-capital/src/components/ProcessOffer/ProcessOffer.jsx",[],"/home/tga/Desktop/gypsy-capital/src/utils/mappedLgas.js",[],"/home/tga/Desktop/gypsy-capital/src/components/MonoWidget/MonoWidget.jsx",["330","331","332"],"/home/tga/Desktop/gypsy-capital/src/components/EmployerInfoForm/EmployerInfoForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/OfferLetter/OfferLetter.jsx",[],"/home/tga/Desktop/gypsy-capital/src/routes/pageUrl.js",[],"/home/tga/Desktop/gypsy-capital/src/context/AuthContext.js",[],"/home/tga/Desktop/gypsy-capital/src/api/gypsy-web.js",[],"/home/tga/Desktop/gypsy-capital/src/pages/ConsumerCredit/ConsumerCredit.jsx",["333","334"],"import React, { useContext, useEffect } from 'react';\nimport styles from './ConsumerCredit.module.scss';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport Button from '../../components/Button/Button';\nimport { Table } from 'react-bootstrap';\nimport noLoan from '../../assets/no-loan.png';\nimport { Row, Col, Modal } from 'react-bootstrap';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport LoanCalculatorForm from '../../components/LoanCalculatorForm/LoanCalculatorForm';\nimport LoanContactForm from '../../components/LoanContactForm/LoanContactForm';\nimport EmployerInfoForm from '../../components/EmployerInfoForm/EmployerInfoForm';\nimport BankInfoForm from '../../components/BankInfoForm/BankInfoForm';\nimport { Route, useRouteMatch, Switch, useLocation, useHistory } from 'react-router-dom';\nimport { Context as LoanContext } from '../../context/LoanContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { clientRoutes } from '../../routes/sidebarRoutes';\n\n\nconst ConsumerCredit = () => {\n\n  const { path } = useRouteMatch();\n  const location = useLocation();\n  const history = useHistory();\n\n  const applyStageArray = {\n    '/dashboard/consumer-credit/apply/calculator': 0,\n    '/dashboard/consumer-credit/apply/contact-info': 1,\n    '/dashboard/consumer-credit/apply/employer-info': 2,\n    '/dashboard/consumer-credit/apply/bank-info': 3\n  }\n\n\n  const { \n    state: { loans, error, currentLoanId, incomplete, loanApplicationStage }, \n    retrieveClientLoans,\n    clearError,\n    loanApply,\n    addAddressForLoan,\n    addWorkInfoForLoan,\n    addBankInfoForLoan,\n    clearCompleteState\n  } = useContext(LoanContext);\n  const { state: { user } } = useContext(AuthContext);\n\n  useEffect(() => {\n    retrieveClientLoans();\n  }, [])\n\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearError();\n    }\n  }, [error])\n\n\n  const numberWithCommas = (x) => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  const calculateLoan = (data) => {\n    loanApply(data, user.user_id)\n  }\n\n  const updateAddress = (data) => {\n    addAddressForLoan(data, currentLoanId)\n  }\n\n  const updateEmployerInfo = (data) => {\n    addWorkInfoForLoan(data, currentLoanId)\n  }\n\n  const updateBankInfo = (data) => {\n    addBankInfoForLoan(data, currentLoanId)\n  }\n\n  const resumeApplication = () => {\n    clearCompleteState();\n    if(loanApplicationStage === 'calculated') {\n      history.push('/dashboard/consumer-credit/apply/contact-info')\n    }\n    if(loanApplicationStage === 'address_added') {\n      history.push('/dashboard/consumer-credit/apply/employer-info')\n    }\n    if(loanApplicationStage === 'employer_added') {\n      history.push('/dashboard/consumer-credit/apply/bank-info')\n    }\n  }\n\n  return (\n    <>\n      <Dashboard sidebarRoutes={clientRoutes} location={location}>\n        <ToastContainer position=\"top-center\" />\n        <div className={styles.heading}>\n          <div>\n            <h2>Consumer Credit</h2>\n            <p>Get a loan with ease</p>\n          </div>\n          { location.pathname === '/dashboard/consumer-credit/history' && <Button\n              bgColor=\"#741763\"\n              size=\"sm\"\n              color=\"#fff\"\n              className=\"mt-4\"\n              clicked={() => history.push('/dashboard/consumer-credit/apply/calculator')}\n            >\n              Apply for a loan\n            </Button>}\n        </div>\n        <Switch>\n          <Route path={`${path}/history`}>\n            <div className={styles.creditTable}>\n              <Table striped hover className={styles.tableStyles}>\n                <thead>\n                  <tr>\n                    <th>Loan ID</th>\n                    <th>Monthly Repayment</th>\n                    <th>Tenor</th>\n                    <th>Status</th>\n                    <th>Repayment Source</th>\n                    <th>Loan Amount</th>\n                    <th>Balance</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {loans.map((loanInstance, idx) => {\n                    return (\n                      <tr>\n                        <td>{loanInstance._id.substring(0, 5)}</td>\n                        <td>{`N ${numberWithCommas(loanInstance.monthlyRepayment)}`}</td>\n                        <td>{!loanInstance.approvedTenure ? loanInstance.paymentPeriod : loanInstance.approvedTenure}</td>\n                        <td>{loanInstance.status}</td>\n                        <td>Salary</td>\n                        <td>{`N ${numberWithCommas(loanInstance.amount)}`}</td>\n                        <td>______</td>\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </Table>\n              { (!loans || loans.length === 0) && <div className={styles.noLoanMessage}>\n                <p>Sorry you currently have no loan</p>\n                <img src={noLoan} alt=\"No loan history\" height=\"250\" />\n              </div>}\n            </div>\n          </Route>\n          <Route path={`${path}/apply`}>\n            <div className={styles.applyContainer}>\n              <Row>\n                <Col md={4}>\n                  <ul className={styles.joinedBullets}>\n                    <li className={styles.active}>\n                      Loan Calculator\n                    </li>\n                    <li \n                      className={applyStageArray[location.pathname] > 0 && styles.active}\n                    >\n                      Contact Address\n                    </li>\n                    <li\n                      className={applyStageArray[location.pathname] > 1 && styles.active}\n                    >\n                      Employment Information\n                    </li>\n                    <li\n                      className={applyStageArray[location.pathname] > 2 && styles.active}\n                    >\n                      Bank Details\n                    </li>\n                  </ul>\n                </Col>\n                <Col md={8}>\n                  <div className={styles.applyForm}>\n                    <Switch>\n                      <Route path={`${path}/apply/calculator`}>\n                        <LoanCalculatorForm delegateApply={calculateLoan} />\n                      </Route>\n                      <Route path={`${path}/apply/contact-info`}>\n                        <LoanContactForm submitContact={updateAddress} />\n                      </Route>\n                      <Route path={`${path}/apply/employer-info`}>\n                        <EmployerInfoForm submitEmployerInfo={updateEmployerInfo} />\n                      </Route>\n                      <Route path={`${path}/apply/bank-info`}>\n                        <BankInfoForm submitBankInfo={updateBankInfo} />\n                      </Route>\n                    </Switch>\n                  </div>\n                </Col>\n              </Row>\n            </div>\n          </Route>\n          <Route path={`${path}/success`}>\n            <div className={styles.applicationComplete}>\n              <FaCheckCircle size=\"4em\" color=\"#741763\" />\n              <h2>Congratulations!</h2>\n              <p>Your loan application has been submitted and is being processed</p>\n              <p>Look out for an email from us within the next 24 hours</p>\n            </div>\n          </Route>\n        </Switch>\n      </Dashboard>\n      <Modal \n        className={styles.continueModal} \n        size=\"sm\" \n        show={incomplete}\n        onHide={() => {\n          clearCompleteState();\n        }}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>\n            <h3>Continue Application</h3>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>You have an incomplete loan request, please continue where you left off</p>\n          <Button\n            clicked={resumeApplication} \n            fullWidth\n            className=\"mt-4\" \n            bgColor=\"#741763\" \n            size=\"sm\" \n            color=\"#EBEBEB\"\n          >\n            Continue\n          </Button>\n        </Modal.Body>\n      </Modal>\n    </>\n  )\n}\n\n\nexport default ConsumerCredit;","/home/tga/Desktop/gypsy-capital/src/pages/OtpVerify/OtpVerify.jsx",["335"],"import React, { useContext, useEffect, useState } from 'react';\nimport styles from './OtpVerify.module.scss';\nimport Logo from '../../assets/logo.png';\nimport { Row, Col } from 'react-bootstrap';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport { Link } from 'react-router-dom';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst OtpVerify = () => {\n\n  const [otp, setOtp] = useState('');\n  const [validationErr, setValidationErr] = useState(null);\n\n  const { \n      state: { error, loading, message, user }, \n      verifyOtp, \n      getActiveUser, \n      resendOtp,\n      clearErrors \n  } = useContext(AuthContext);\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearErrors();\n    }\n  }, [error])\n\n  useEffect(() => {\n    if(message) {\n      toast.success(message);\n    }\n  }, [message])\n\n  const handleSubmit = () => {\n    if(!otp) {\n      setValidationErr('You need to enter your otp to verify your account')\n    } else {\n      verifyOtp(otp, user.email, getActiveUser);\n    }\n  }\n\n  const resendCode = () => {\n    resendOtp(user.email);\n  }\n\n  return(\n    <div className={styles.container}>\n      <img src={Logo} alt=\"Gypsy Logo\" />\n      <h1>Verify Your Details</h1>\n      <p>Please enter the OTP sent to your email to continue</p>\n      <div className={styles.verifyBox}>\n        <ToastContainer position=\"top-center\" />\n        <Row>\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"One Time Password\"\n              nameAttr=\"otp\"\n              value={otp}\n              changed={(val) => {\n                setValidationErr(null)\n                setOtp(val)\n              }}\n              error={validationErr && validationErr}\n            />\n          </Col>\n        </Row>\n        <Button \n          clicked={handleSubmit} \n          fullWidth \n          className=\"mt-4\" \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n          disabled={loading}\n          loading={loading}\n        >\n          Verify Code\n        </Button>\n        <p className={[styles.authLink, 'mt-3'].join(' ')}>\n          Didn’t receive code? <Link onClick={resendCode}>Resend OTP</Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n\n\nexport default OtpVerify;","/home/tga/Desktop/gypsy-capital/src/pages/ContactPage/ContactPage.jsx",["336"],"import React, { useState } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport styles from \"./ContactPage.module.scss\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport { HiLocationMarker, HiMail, HiPhone } from \"react-icons/hi\";\nimport { IoLogoWhatsapp } from \"react-icons/io\";\nimport Footer from \"../../components/Footer/Footer\";\nimport InputField from \"../../components/InputField/InputField\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport ScrollToTopOnMount from \"../../components/ScrollToTopOnMount/ScrollToTopOnMount\";\n\nconst ContactPage = ({ history }) => {\n  const { url } = useRouteMatch();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    subject: \"\",\n    message: \"\",\n  });\n\n  return (\n    <>\n      <ScrollToTopOnMount />\n      <NavBar history={history} location={url} />\n      <div className={styles.heroSection}>\n        <div className={styles.container}>\n          <h2>Contact Us</h2>\n        </div>\n        <div className={styles.bgOverlay}></div>\n      </div>\n      <div className={styles.mapSection}>\n        <div className={styles.container}>\n          <iframe\n            className={styles.map}\n            frameBorder={0}\n            scrolling=\"no\"\n            marginHeight={0}\n            marginWidth={0}\n            src=\"https://maps.google.com/maps?hl=en&amp;q=Landmark%20Towers,%205B%20Water%20Corporation%20Rd,Oniru%20Rd,%20Victoria%20Island%20101241,%20Lagos+(Gypsy%20Capital)&amp;t=&amp;z=15&amp;ie=UTF8&amp;iwloc=B&amp;output=embed\"\n          ></iframe>\n        </div>\n      </div>\n      <div className={styles.contactSection}>\n        <div className={styles.container}>\n          <Row>\n            <Col sm={12} md={7} className=\"mb-5 mb-md-0\">\n              <div className={styles.contactForm}>\n                <h3>Send Us A Message</h3>\n                <Row className=\"mb-0 mb-md-4\">\n                  <Col sm={12} md={6} className=\"mb-3 mb-md-0\">\n                    <InputField\n                      type=\"text\"\n                      placeholder=\"Name\"\n                      nameAttr=\"name\"\n                      value={formData.name}\n                      changed={(val) => setFormData({ ...formData, name: val })}\n                    />\n                  </Col>\n                  <Col sm={12} md={6} className=\"mb-3 mb-md-0\">\n                    <InputField\n                      type=\"email\"\n                      placeholder=\"Email\"\n                      nameAttr=\"email\"\n                      value={formData.email}\n                      changed={(val) =>\n                        setFormData({ ...formData, email: val })\n                      }\n                    />\n                  </Col>\n                </Row>\n                <Row className=\"mb-0 mb-md-4\">\n                  <Col className=\"mb-3 mb-md-0\">\n                    <InputField\n                      type=\"text\"\n                      placeholder=\"Subject\"\n                      nameAttr=\"subject\"\n                      value={formData.subject}\n                      changed={(val) =>\n                        setFormData({ ...formData, subject: val })\n                      }\n                    />\n                  </Col>\n                </Row>\n                <Row className=\"mb-0 mb-md-4\">\n                  <Col className=\"mb-3 mb-md-0\">\n                    <InputField\n                      type=\"textarea\"\n                      placeholder=\"Message\"\n                      nameAttr=\"message\"\n                      value={formData.message}\n                      changed={(val) =>\n                        setFormData({ ...formData, message: val })\n                      }\n                    />\n                  </Col>\n                </Row>\n                <button>Submit</button>\n              </div>\n            </Col>\n            <Col sm={12} md={5} className=\"mb-5 mb-md-0\">\n              <div className={styles.addressBox}>\n                <h3>Get In Touch</h3>\n                <div className={styles.addressGroup}>\n                  <HiLocationMarker\n                    className={[styles.icon, styles.locator].join(\" \")}\n                    size=\"3.5em\"\n                  />\n                  <p>\n                    Landmark Towers, 5B Water Corporation Rd,Oniru Rd, Victoria\n                    Island 101241, Lagos\n                  </p>\n                </div>\n                <div className={styles.addressGroup}>\n                  <HiMail\n                    className={[styles.icon, styles.others].join(\" \")}\n                    size=\"1.8em\"\n                  />\n                  <p>hello@gypsycapital.com</p>\n                </div>\n                <div className={styles.addressGroup}>\n                  <HiPhone\n                    className={[styles.icon, styles.others].join(\" \")}\n                    size=\"1.8em\"\n                  />\n                  <p>08099907888</p>\n                </div>\n                <div className={styles.addressGroup}>\n                  <IoLogoWhatsapp\n                    className={[styles.icon, styles.others].join(\" \")}\n                    size=\"1.8em\"\n                  />\n                  <p>09041444888</p>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default ContactPage;\n","/home/tga/Desktop/gypsy-capital/src/pages/ClientListPage/ClientListPage.jsx",["337","338"],"import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport styles from './ClientListPage.module.scss';\nimport { routes } from '../../routes/sidebarRoutes';\nimport { useLocation,Link } from 'react-router-dom';\nimport moment from 'moment';\nimport  Button from '../../components/Button/Button';\nimport { Table, Pagination } from 'react-bootstrap';\nimport usePagination from '../../hooks/usePagination';\nimport ModalForm from '../../components/ModalForm/ModalForm';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { TiCancelOutline } from 'react-icons/ti';\nimport _ from 'lodash';\nimport Loader from '../../components/Loader/Loader';\n\n\nconst ClientListPage = () => {\n\n  const location = useLocation();\n  const salesRoute = routes[1];\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(5);\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const { state: { clientsForRole, loading }, getClientListForRole, clearErrors } = useContext(UserContext);\n  const { state: { user } } = useContext(AuthContext);\n\n  useEffect(() => {\n    clearErrors();\n    getClientListForRole();\n  }, []);\n\n  const salesClients = useMemo(() => {\n    if(clientsForRole && clientsForRole.length > 0) {\n      return clientsForRole.filter(client => client.addedBy === user.user_id )\n    } else {\n      return []\n    }\n  }, [clientsForRole]);\n\n  console.log(salesClients);\n\n  const { \n    currentList, \n    items, \n    goToNextPage, \n    goToPrevPage \n  } = usePagination(currentPage, postsPerPage, salesClients, setCurrentPage, styles);\n\n\n  const onboardStart = () => {\n    setModalOpen(true);\n  }\n\n  const closeModal = () => {\n    getClientListForRole();\n    setModalOpen(false);\n  }\n\n\n  return (\n    <Dashboard sidebarRoutes={salesRoute} location={location}>\n      <div className={styles.welcomeGroup}>\n        <div>\n          <h2>Clients</h2>\n          <p className={styles.currentDate}>Today is {moment().format('dddd Do[,] MMMM')}.</p>\n        </div>\n        <Button\n          size=\"sm\" \n          bgColor=\"#741763\" \n          color=\"#fff\"\n          clicked={onboardStart}\n        >\n          Onboard New Client\n        </Button>\n      </div>\n      { !loading ? <div className={styles.overview}>\n        <div className={styles.overviewBox}>\n          <h3>Clients Overview</h3>\n          <Table className={styles.table}>\n            <thead>\n              <tr>\n                <th>Client Name</th>\n                <th>Client ID</th>\n                <th>Phone Number</th>\n                <th>BVN</th>\n                <th>Date Created</th>\n              </tr>\n            </thead>\n            { currentList && currentList.length > 0 ? <tbody>\n              { currentList.map((client, idx) => (\n                <tr>\n                  <td>{_.capitalize(client.firstName)} {_.capitalize(client.lastName)}</td>\n                  <td className={styles.loanId}>\n                    <Link to={`/sales-agent/client/${client._id}`}>{client._id.substr(0,6)}</Link>\n                  </td>\n                  <td>{client.phoneNumber.replace('234', '0')}</td>\n                  <td>{client.more_info[0]?.bioData?.BVN}</td>\n                  <td>{moment(client.createdAt).format('lll')}</td>\n                </tr>\n              ))}\n            </tbody> : null }\n          </Table>\n          { currentList && currentList.length === 0 ? <div className={styles.nullList}>\n            <TiCancelOutline size=\"6em\" color=\"rgba(116, 23, 99, 0.6)\" />\n          </div> : null }\n          { currentList && currentList.length > 0 ? <div className={styles.tableFooter}>\n            <div className={styles.rowsInput}>\n              <p>Rows per page: </p>\n              <select onChange={(e) => setPostsPerPage(Number(e.currentTarget.value))}>\n                <option value={5} selected>5</option>\n                <option value={10}>10</option>\n                <option value={15}>15</option>\n                <option value={20}>20</option>\n                <option value={10}>25</option>\n                <option value={30}>30</option>\n              </select>\n            </div>\n            <Pagination className={styles.pagination}>\n              <Pagination.Prev onClick={goToPrevPage}/>\n              {items}\n              <Pagination.Next onClick={goToNextPage} />\n            </Pagination>\n          </div> : null }\n        </div>\n      </div> : <Loader /> }\n      <ModalForm openState={modalOpen} closeHandler={closeModal} />\n    </Dashboard>\n  )\n}\n\n\nexport default ClientListPage;","/home/tga/Desktop/gypsy-capital/src/pages/ClientDetails/ClientDetails.jsx",["339","340","341","342","343","344","345"],"/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerLoanDetails/AuthorizerLoanDetails.jsx",["346","347","348","349","350"],"import React, { useContext, useEffect, useState } from \"react\";\nimport Dashboard from \"../../components/Dashboard/Dashboard\";\nimport styles from \"./AuthorizerLoanDetails.module.scss\";\nimport { routes } from \"../../routes/sidebarRoutes\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport NavTabs from \"../../components/NavTabs/NavTabs\";\nimport { BasicInfo } from \"../LoanDetail/LoanDetail\";\nimport { Context as LoanContext } from \"../../context/LoanContext\";\nimport { Context as AuthContext } from \"../../context/AuthContext\";\nimport { Context as ApprovalContext } from \"../../context/ApprovalContext\";\nimport { Context as BankContext } from \"../../context/BankCotext\";\nimport { Row, Col } from \"react-bootstrap\";\nimport InputField from \"../../components/InputField/InputField\";\nimport Button from \"../../components/Button/Button\";\nimport Loader from \"../../components/Loader/Loader\";\nimport {\n  RepayPlusApprove,\n  MonoTab,\n} from \"../ProcessorLoanDetails/ProcessorLoanDetails\";\nimport { RepaymentSchedule } from \"../LoanDetail/LoanDetail\";\nimport _ from \"lodash\";\nimport { numberWithCommas } from \"../../utils/nigeriaStates\";\nimport { toast, ToastContainer } from \"react-toastify\";\n\nconst Disbursal = ({ loanId, disburseBank, loanData }) => {\n  const {\n    state: { loading, error, disbursedStatus },\n    disburseLoan,\n    clearError,\n    resetDisburseStatus,\n  } = useContext(ApprovalContext);\n\n  const {\n    state: { bankList },\n    getBankList,\n  } = useContext(BankContext);\n\n  const [disburseData, setDisburseData] = useState({\n    bankName: \"\",\n    accountNumber: \"\",\n    amount: \"\",\n  });\n\n  useEffect(() => {\n    (async () => {\n      await getBankList();\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (disburseBank && disburseBank.isDisbursement) {\n      setDisburseData({\n        ...disburseData,\n        bankName: _.startCase(disburseBank.bank),\n        accountNumber: disburseBank.accountNumber,\n        amount: numberWithCommas(loanData.amount),\n      });\n    }\n  }, [disburseBank]);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(error);\n      clearError();\n    }\n  }, [error]);\n\n  useEffect(() => {\n    if (disbursedStatus) {\n      toast.success(\"Loan was disbursed successfully!\");\n      resetDisburseStatus();\n    }\n  }, [disbursedStatus]);\n\n  const transferPaymentToClient = () => {\n    const bankInfo = bankList.filter(\n      (bank) => bank.name.toLowerCase() === disburseBank.bank.toLowerCase()\n    );\n    // console.log(bankInfo[0].code);\n    const paymentData = {\n      account_bank: bankInfo[0].code,\n      account_number: disburseBank.accountNumber,\n      amount: loanData.amount,\n    };\n    disburseLoan(loanId, paymentData);\n  };\n\n  if (!bankList) {\n    return null;\n  }\n\n  return (\n    <>\n      <ToastContainer position=\"top-center\" />\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField\n            type=\"text\"\n            label=\"Bank Name\"\n            nameAttr=\"bankName\"\n            value={disburseData.bankName}\n            disable={true}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField\n            type=\"text\"\n            label=\"Account Number\"\n            nameAttr=\"accNumber\"\n            value={disburseData.accountNumber}\n            disable={true}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField\n            type=\"text\"\n            label=\"Amount\"\n            nameAttr=\"amount\"\n            value={disburseData.amount}\n            disable={true}\n          />\n        </Col>\n      </Row>\n      <Button\n        className=\"mt-4\"\n        fullWidth\n        clicked={transferPaymentToClient}\n        bgColor=\"#741763\"\n        size=\"lg\"\n        color=\"#EBEBEB\"\n        disabled={loading || loanData?.adminDecision !== \"approve\"}\n        loading={loading}\n      >\n        Disburse\n      </Button>\n    </>\n  );\n};\n\nconst AuthorizerLoanDetails = () => {\n  const [visibleSection, setVisibleSection] = useState(\"basic\");\n\n  const location = useLocation();\n  const authorizerRoutes = routes[3];\n  const { loanId } = useParams();\n\n  const {\n    state: { loanDetails },\n    retrieveLoan,\n  } = useContext(LoanContext);\n  const {\n    state: { user },\n  } = useContext(AuthContext);\n\n  useEffect(() => {\n    retrieveLoan(loanId);\n  }, []);\n\n  const navArray = [\n    {\n      title: \"Basic Info\",\n      shortlink: \"basic\",\n    },\n    {\n      title: \"Decision & Approval\",\n      shortlink: \"decision\",\n    },\n    // {\n    //   title: \"Repayment Setup\",\n    //   shortlink: \"setup\",\n    // },\n    {\n      title: \"Repayment Schedule\",\n      shortlink: \"repay\",\n    },\n    {\n      title: \"Mono\",\n      shortlink: \"mono\",\n    },\n    {\n      title: \"Disbursal\",\n      shortlink: \"disburse\",\n    },\n  ];\n\n  const setActiveTab = (link) => {\n    setVisibleSection(link);\n  };\n\n  console.log(loanDetails);\n\n  return (\n    <Dashboard sidebarRoutes={authorizerRoutes} location={location}>\n      <NavTabs\n        navs={navArray}\n        setActive={setActiveTab}\n        currentTab={visibleSection}\n      />\n      {loanDetails ? (\n        <div className={styles.detailFields}>\n          {visibleSection === \"basic\" && (\n            <BasicInfo\n              data={\n                loanDetails\n                  ? {\n                      client: { ...loanDetails.client[0]?.bioData },\n                      ...loanDetails.loan,\n                      dti: loanDetails[0]?.DTI,\n                    }\n                  : null\n              }\n              userRole={user.role}\n            />\n          )}\n          {visibleSection === \"decision\" && (\n            <RepayPlusApprove\n              loanId={loanId}\n              loanData={loanDetails?.loan}\n              userRole={user?.role}\n              setActiveTab={setActiveTab}\n            />\n          )}\n          {/* {visibleSection === \"setup\" && (\n            <RepaySetup loanData={loanDetails.loan} loanId={loanId} />\n          )} */}\n          {visibleSection === \"repay\" && (\n            <RepaymentSchedule\n              data={\n                loanDetails\n                  ? {\n                      ...loanDetails?.loan,\n                      payments: loanDetails?.payments,\n                    }\n                  : null\n              }\n              userRole={user.role}\n              loanId={loanId}\n            />\n          )}\n          {visibleSection === \"mono\" && (\n            <MonoTab clientId={loanDetails?.client[0]?.clientId} />\n          )}\n          {visibleSection === \"disburse\" && (\n            <Disbursal\n              loanData={loanDetails.loan}\n              loanId={loanId}\n              disburseBank={loanDetails?.bank[0]}\n            />\n          )}\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </Dashboard>\n  );\n};\n\nexport default AuthorizerLoanDetails;\n","/home/tga/Desktop/gypsy-capital/src/routes/sidebarRoutes.js",["351"],"import pageUrl from './pageUrl';\nimport { FiLayers } from 'react-icons/fi';\nimport { BiCreditCard } from 'react-icons/bi';\nimport { AiOutlineUser } from 'react-icons/ai';\nimport { GiTakeMyMoney, GiMoneyStack } from 'react-icons/gi';\nimport { FaUser } from 'react-icons/fa';\nimport { BiSupport } from 'react-icons/bi';\nimport { RiUser3Fill } from 'react-icons/ri';\n\n\nexport const clientRoutes = [\n  {\n      label: \"Dashboard\",\n      link: pageUrl.DASHBOARD_HOMEPAGE,\n      rootLink: pageUrl.DASHBOARD_HOMEPAGE,\n      icon: FiLayers\n    },\n    {\n      label: \"Consumer Credit\",\n      link: '/dashboard/consumer-credit/history',\n      rootLink: pageUrl.CONSUMER_CREDIT_PAGE,\n      icon: GiTakeMyMoney\n    },\n    {\n      label: \"Credit Report\",\n      link: pageUrl.CREDIT_REPORT_PAGE,\n      rootLink: pageUrl.CREDIT_REPORT_PAGE,\n      icon: BiCreditCard\n    },\n    {\n      label: \"Profile\",\n      link: pageUrl.PROFILE_PAGE,\n      rootLink: pageUrl.PROFILE_PAGE,\n      icon: AiOutlineUser\n    },\n]\n\n\nconst salesRoutes = [\n  {\n    label: \"Dashboard\",\n    link: pageUrl.SALES_AGENT_OVERVIEW,\n    rootLink: pageUrl.SALES_AGENT_OVERVIEW,\n    icon: FiLayers\n  },\n  {\n    label: \"Clients\",\n    link: pageUrl.CLIENT_LIST_PAGE,\n    rootLink: '/sales-agent/client',\n    icon: FaUser\n  },\n  {\n    label: \"Loans\",\n    link: pageUrl.LOAN_LIST_PAGE,\n    rootLink: '/sales-agent/loan',\n    icon: GiMoneyStack\n  }, \n  {\n    label: \"Support\",\n    link: pageUrl.SUPPORT_PAGE,\n    rootLink: pageUrl.SUPPORT_PAGE,\n    icon: BiSupport\n  }\n]\n\n\nconst processorRoutes = [\n  {\n    label: \"Dashboard\",\n    link: pageUrl.PROCESSORS_DASHBOARD,\n    rootLink: pageUrl.PROCESSORS_DASHBOARD,\n    icon: FiLayers\n  },\n  {\n    label: \"Clients\",\n    link: pageUrl.PROCESSORS_CLIENTS_PAGE,\n    rootLink: '/processor/client',\n    icon: FaUser\n  },\n  {\n    label: \"Loans\",\n    link: pageUrl.PROCESSORS_LOANS_PAGE,\n    rootLink: '/processor/loan',\n    icon: GiMoneyStack\n  }, \n  {\n    label: \"Support\",\n    link: pageUrl.SUPPORT_PAGE,\n    rootLink: pageUrl.SUPPORT_PAGE,\n    icon: BiSupport\n  }\n]\n\nconst authorizerRoutes = [\n  {\n    label: \"Dashboard\",\n    link: pageUrl.AUTHORIZER_OVERVIEW,\n    rootLink: pageUrl.AUTHORIZER_OVERVIEW,\n    icon: FiLayers\n  },\n  {\n    label: \"Clients\",\n    link: pageUrl.AUTHORIZER_CLIENTS,\n    rootLink: '/authorizer/client',\n    icon: FaUser\n  },\n  {\n    label: \"Loans\",\n    link: pageUrl.AUTHORIZER_LOANS,\n    rootLink: '/authorizer/loan',\n    icon: GiMoneyStack\n  }, \n  {\n    label: \"Support\",\n    link: pageUrl.SUPPORT_PAGE,\n    rootLink: pageUrl.SUPPORT_PAGE,\n    icon: BiSupport\n  }\n]\n\n\nexport const routes = [\n  clientRoutes,\n  salesRoutes,\n  processorRoutes,\n  authorizerRoutes\n]","/home/tga/Desktop/gypsy-capital/src/components/InputField/InputField.js",[],"/home/tga/Desktop/gypsy-capital/src/components/LoanContactForm/LoanContactForm.jsx",["352"],"import React, { useState, useRef, useEffect, useContext } from \"react\";\nimport styles from \"./LoanContactForm.module.scss\";\nimport { Row, Col } from \"react-bootstrap\";\nimport InputField from \"../InputField/InputField\";\nimport FileUploadButton from \"../FileUploadButton/FileUploadButton\";\nimport { FaCloudUploadAlt } from \"react-icons/fa\";\nimport Button from \"../Button/Button\";\nimport { validateInput } from \"../../utils/validateInput\";\nimport { nigeriaStates } from \"../../utils/nigeriaStates\";\nimport { lgaList } from \"../../utils/mappedLgas\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { Context as LoanContext } from \"../../context/LoanContext\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport _ from \"lodash\";\n\nconst LoanContactForm = ({ submitContact }) => {\n  // const { state: { user } } = useContext(AuthContext);\n  const {\n    state: { loading },\n  } = useContext(LoanContext);\n\n  const [contactAddress, setContactAddress] = useState({\n    streetAddress: \"\",\n    city: \"\",\n    state: null,\n    lga: null,\n    residentialStatus: null,\n  });\n\n  const [contactErrors, setContactErrors] = useState({\n    streetAddress: null,\n    city: null,\n    state: null,\n    lga: null,\n    residentialStatus: null,\n  });\n\n  const [lgaOptions, setLgaOptions] = useState([]);\n  const [lgaLoading, setLgaLoading] = useState(false);\n\n  useEffect(() => {\n    if (contactAddress.state?.length > 0) {\n      setLgaOptions(lgaList[_.capitalize(contactAddress.state)]);\n    }\n  }, [contactAddress.state]);\n\n  const proofofAddressRef = useRef(null);\n\n  const updateContactInfo = () => {\n    if (proofofAddressRef.current.files.length > 0) {\n      console.log(proofofAddressRef);\n      const proofofAddress = proofofAddressRef.current.files[0];\n      console.log(proofofAddress);\n      const validated = validateInput(contactAddress, setContactErrors);\n      console.log(validated);\n      if (validated) {\n        const data = new FormData();\n        data.append(\"city\", contactAddress.city);\n        data.append(\"street\", contactAddress.streetAddress);\n        data.append(\"state\", contactAddress.state);\n        data.append(\"local_government\", contactAddress.lga);\n        data.append(\"residential_status\", contactAddress.residentialStatus);\n        data.append(\"image\", proofofAddress);\n        submitContact(data);\n        // addAddressForLoan(data, user.user_id);\n      }\n    } else {\n      toast.error(\"You need to upload a proof of address document to proceed\");\n    }\n  };\n\n  return (\n    <div className={styles.contactForm}>\n      <ToastContainer position=\"top-center\" />\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField\n            label=\"Address\"\n            nameAttr=\"address\"\n            type=\"text\"\n            value={contactAddress.streetAddress}\n            changed={(val) => {\n              setContactErrors({ ...contactErrors, streetAddress: null });\n              setContactAddress({ ...contactAddress, streetAddress: val });\n            }}\n            error={contactErrors.streetAddress && contactErrors.streetAddress}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField\n            type=\"text\"\n            nameAttr=\"city\"\n            label=\"City\"\n            value={contactAddress.city}\n            changed={(val) => {\n              setContactErrors({ ...contactErrors, city: null });\n              setContactAddress({ ...contactAddress, city: val });\n            }}\n            error={contactErrors.city && contactErrors.city}\n          />\n        </Col>\n        <Col>\n          <InputField\n            type=\"select\"\n            nameAttr=\"state\"\n            label=\"State\"\n            options={nigeriaStates}\n            value={contactAddress.state}\n            changed={(val) => {\n              setContactErrors({ ...contactErrors, state: null });\n              setContactAddress({ ...contactAddress, state: val });\n            }}\n            error={contactErrors.state && contactErrors.state}\n          />\n        </Col>\n        <Col>\n          {!lgaLoading ? (\n            <InputField\n              type=\"select\"\n              nameAttr=\"localGovt\"\n              label=\"Local Govt. Area\"\n              options={lgaOptions}\n              value={contactAddress.lga}\n              changed={(val) => {\n                setContactErrors({ ...contactErrors, lga: null });\n                setContactAddress({ ...contactAddress, lga: val });\n              }}\n              error={contactErrors.lga && contactErrors.lga}\n            />\n          ) : (\n            <div className={styles.loaderWrapper}>\n              <BeatLoader color=\"#741763\" size={10} />\n            </div>\n          )}\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputField\n            type=\"select\"\n            label=\"Residential Status\"\n            nameAttr=\"residentialStatus\"\n            options={[\"Renting\", \"Owned\"]}\n            value={contactAddress.residentialStatus}\n            changed={(val) => {\n              setContactErrors({ ...contactErrors, residentialStatus: null });\n              setContactAddress({ ...contactAddress, residentialStatus: val });\n            }}\n            error={\n              contactErrors.residentialStatus && contactErrors.residentialStatus\n            }\n          />\n        </Col>\n        <Col>\n          <FileUploadButton\n            label=\"Choose File\"\n            icon={<FaCloudUploadAlt className=\"ml-3\" size=\"1.2em\" />}\n            id=\"address-upload\"\n            fileRef={proofofAddressRef}\n            visibleLabel=\"Proof of Address\"\n            fullwidth\n          />\n          <p className={styles.inputHint}>\n            Note: Proof of address could be your recent utility bill or any\n            other valid document containing your residential address.\n          </p>\n        </Col>\n      </Row>\n      <Button\n        className=\"mt-4\"\n        fullWidth\n        clicked={updateContactInfo}\n        bgColor=\"#741763\"\n        size=\"lg\"\n        color=\"#EBEBEB\"\n        disabled={loading}\n        loading={loading}\n      >\n        Continue\n      </Button>\n    </div>\n  );\n};\n\nexport default LoanContactForm;\n","/home/tga/Desktop/gypsy-capital/src/components/BankInfoForm/BankInfoForm.jsx",["353","354","355"],"/home/tga/Desktop/gypsy-capital/src/components/Loader/Loader.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/NavTabs/NavTabs.jsx",[],"/home/tga/Desktop/gypsy-capital/src/hooks/useLoanDetails.js",["356","357","358","359"],"/home/tga/Desktop/gypsy-capital/src/components/ModalForm/ModalForm.jsx",["360","361","362"],"/home/tga/Desktop/gypsy-capital/src/components/OfferLetter/OfferLetterForm.jsx",["363"],"/home/tga/Desktop/gypsy-capital/src/components/IdentityForm/IdentityForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/LoanCalculatorForm/LoanCalculatorForm.jsx",["364","365"],"/home/tga/Desktop/gypsy-capital/src/utils/convertInputType.js",[],"/home/tga/Desktop/gypsy-capital/src/context/RepaymentContext.js",["366"],"import createDataContext from \"./createDataContext\";\nimport gypsy from \"../api/gypsy-web\";\nimport resolveToken from \"../utils/resolveToken\";\n\nconst repaymentReducer = (state, action) => {\n  switch (action.type) {\n    case \"set_loading\":\n      return { ...state, loading: action.payload };\n    case \"set_error\":\n      return { ...state, error: action.payload };\n    case \"set_repayment_status\":\n      return { ...state, repaymentStatus: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst setupRepayment = (dispatch) => async (loanId, repayData, callback) => {\n  dispatch({ type: \"set_loading\", payload: true });\n  try {\n    const token = resolveToken();\n    const response = await gypsy.post(\n      `/user/loan/set_pay/${loanId}`,\n      repayData,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    console.log(response.data);\n    if (callback) {\n      await callback(loanId);\n    }\n    dispatch({ type: \"set_repayment_status\", payload: true });\n    dispatch({ type: \"set_loading\", payload: false });\n  } catch (err) {\n    if (err.response) {\n      console.log(err.response.data);\n      const errorMessage = err.response.data.error || err.response.data.message;\n      dispatch({\n        type: \"set_error\",\n        payload: errorMessage,\n      });\n      dispatch({ type: \"set_loading\", payload: false });\n    }\n  }\n};\n\nconst verifyRepaymentStatus = (dispatch) => async (loanId) => {\n  dispatch({ type: \"set_loading\", payload: true });\n  try {\n    const token = resolveToken();\n    const response = await gypsy.post(\n      `/paystack/verify/${loanId}`,\n      {},\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n\n    console.log(response.data);\n    dispatch({ type: \"set_loading\", payload: false });\n  } catch (err) {\n    if (err.response) {\n      console.log(err.response.data);\n      const errorMessage = err.response.data.error || err.response.data.message;\n      // dispatch({\n      //   type: \"set_error\",\n      //   payload: errorMessage,\n      // });\n      dispatch({ type: \"set_loading\", payload: false });\n    }\n  }\n};\n\nconst clearError = (dispatch) => () => {\n  dispatch({ type: \"set_error\", payload: null });\n};\n\nconst resetRepaymentStatus = (dispatch) => () => {\n  dispatch({ type: \"set_repayment_status\", payload: false });\n};\n\nexport const { Context, Provider } = createDataContext(\n  repaymentReducer,\n  { setupRepayment, verifyRepaymentStatus, clearError, resetRepaymentStatus },\n  { loading: false, error: null, repaymentStatus: false }\n);\n","/home/tga/Desktop/gypsy-capital/src/utils/nigeriaStates.js",[],"/home/tga/Desktop/gypsy-capital/src/context/LoanContext.js",[],"/home/tga/Desktop/gypsy-capital/src/utils/history.js",[],"/home/tga/Desktop/gypsy-capital/src/utils/resolveToken.js",["367"],"/home/tga/Desktop/gypsy-capital/src/pages/CreditReport/CreditReport.jsx",["368","369","370"],"/home/tga/Desktop/gypsy-capital/src/pages/AgentOverview/AgentOverview.jsx",["371"],"/home/tga/Desktop/gypsy-capital/src/pages/ProcessorDashboard/ProcessorDashboard.jsx",["372"],"/home/tga/Desktop/gypsy-capital/src/pages/Support/Support.jsx",["373"],"/home/tga/Desktop/gypsy-capital/src/pages/ForgotPassword/ForgotPassword.jsx",["374"],"/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerClientDetails/AuthorizerClientDetails.jsx",["375"],"/home/tga/Desktop/gypsy-capital/src/components/Button/Button.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/ScrollToTopOnMount/ScrollToTopOnMount.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/CustomDatePicker/CustomDatePicker.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/AccountSetupModal/AccountSetupModal.jsx",["376","377","378","379","380","381"],"/home/tga/Desktop/gypsy-capital/src/pages/HomePage/HomePage.jsx",[],{"ruleId":"382","replacedBy":"383"},{"ruleId":"384","replacedBy":"385"},{"ruleId":"382","replacedBy":"386"},{"ruleId":"384","replacedBy":"387"},{"ruleId":"388","severity":1,"message":"389","line":9,"column":30,"nodeType":"390","messageId":"391","endLine":9,"endColumn":34},{"ruleId":"392","severity":1,"message":"393","line":4,"column":1,"nodeType":"394","endLine":34,"endColumn":2},{"ruleId":"395","severity":1,"message":"396","line":49,"column":6,"nodeType":"397","endLine":49,"endColumn":8,"suggestions":"398"},{"ruleId":"395","severity":1,"message":"399","line":68,"column":6,"nodeType":"397","endLine":68,"endColumn":19,"suggestions":"400"},{"ruleId":"395","severity":1,"message":"401","line":75,"column":6,"nodeType":"397","endLine":75,"endColumn":13,"suggestions":"402"},{"ruleId":"388","severity":1,"message":"403","line":18,"column":11,"nodeType":"390","messageId":"391","endLine":18,"endColumn":15},{"ruleId":"395","severity":1,"message":"404","line":28,"column":6,"nodeType":"397","endLine":28,"endColumn":8,"suggestions":"405"},{"ruleId":"406","severity":1,"message":"407","line":56,"column":15,"nodeType":"408","endLine":56,"endColumn":26},{"ruleId":"406","severity":1,"message":"407","line":59,"column":15,"nodeType":"408","endLine":59,"endColumn":26},{"ruleId":"406","severity":1,"message":"407","line":62,"column":15,"nodeType":"408","endLine":62,"endColumn":26},{"ruleId":"395","severity":1,"message":"404","line":23,"column":6,"nodeType":"397","endLine":23,"endColumn":8,"suggestions":"409"},{"ruleId":"395","severity":1,"message":"410","line":47,"column":6,"nodeType":"397","endLine":47,"endColumn":12,"suggestions":"411"},{"ruleId":"388","severity":1,"message":"412","line":205,"column":14,"nodeType":"390","messageId":"391","endLine":205,"endColumn":21},{"ruleId":"395","severity":1,"message":"413","line":217,"column":6,"nodeType":"397","endLine":217,"endColumn":8,"suggestions":"414"},{"ruleId":"395","severity":1,"message":"415","line":324,"column":6,"nodeType":"397","endLine":324,"endColumn":8,"suggestions":"416"},{"ruleId":"388","severity":1,"message":"417","line":3,"column":8,"nodeType":"390","messageId":"391","endLine":3,"endColumn":14},{"ruleId":"395","severity":1,"message":"404","line":22,"column":6,"nodeType":"397","endLine":22,"endColumn":8,"suggestions":"418"},{"ruleId":"395","severity":1,"message":"419","line":43,"column":6,"nodeType":"397","endLine":43,"endColumn":16,"suggestions":"420"},{"ruleId":"395","severity":1,"message":"419","line":69,"column":6,"nodeType":"397","endLine":69,"endColumn":55,"suggestions":"421"},{"ruleId":"422","severity":1,"message":"423","line":44,"column":11,"nodeType":"408","endLine":44,"endColumn":45},{"ruleId":"395","severity":1,"message":"424","line":89,"column":6,"nodeType":"397","endLine":89,"endColumn":8,"suggestions":"425"},{"ruleId":"388","severity":1,"message":"417","line":6,"column":8,"nodeType":"390","messageId":"391","endLine":6,"endColumn":14},{"ruleId":"395","severity":1,"message":"426","line":22,"column":6,"nodeType":"397","endLine":22,"endColumn":8,"suggestions":"427"},{"ruleId":"388","severity":1,"message":"428","line":40,"column":30,"nodeType":"390","messageId":"391","endLine":40,"endColumn":44},{"ruleId":"388","severity":1,"message":"429","line":44,"column":5,"nodeType":"390","messageId":"391","endLine":44,"endColumn":24},{"ruleId":"395","severity":1,"message":"430","line":53,"column":6,"nodeType":"397","endLine":53,"endColumn":13,"suggestions":"431"},{"ruleId":"395","severity":1,"message":"432","line":91,"column":6,"nodeType":"397","endLine":91,"endColumn":8,"suggestions":"433"},{"ruleId":"395","severity":1,"message":"434","line":106,"column":6,"nodeType":"397","endLine":106,"endColumn":16,"suggestions":"435"},{"ruleId":"395","severity":1,"message":"436","line":187,"column":8,"nodeType":"397","endLine":187,"endColumn":22,"suggestions":"437"},{"ruleId":"395","severity":1,"message":"438","line":408,"column":6,"nodeType":"397","endLine":408,"endColumn":16,"suggestions":"439"},{"ruleId":"388","severity":1,"message":"440","line":648,"column":14,"nodeType":"390","messageId":"391","endLine":648,"endColumn":30},{"ruleId":"388","severity":1,"message":"441","line":652,"column":5,"nodeType":"390","messageId":"391","endLine":652,"endColumn":17},{"ruleId":"395","severity":1,"message":"442","line":724,"column":6,"nodeType":"397","endLine":724,"endColumn":8,"suggestions":"443"},{"ruleId":"395","severity":1,"message":"442","line":728,"column":6,"nodeType":"397","endLine":728,"endColumn":17,"suggestions":"444"},{"ruleId":"395","severity":1,"message":"445","line":735,"column":6,"nodeType":"397","endLine":735,"endColumn":23,"suggestions":"446"},{"ruleId":"395","severity":1,"message":"447","line":742,"column":6,"nodeType":"397","endLine":742,"endColumn":22,"suggestions":"448"},{"ruleId":"395","severity":1,"message":"430","line":749,"column":6,"nodeType":"397","endLine":749,"endColumn":13,"suggestions":"449"},{"ruleId":"395","severity":1,"message":"450","line":756,"column":6,"nodeType":"397","endLine":756,"endColumn":21,"suggestions":"451"},{"ruleId":"395","severity":1,"message":"452","line":791,"column":6,"nodeType":"397","endLine":791,"endColumn":26,"suggestions":"453"},{"ruleId":"395","severity":1,"message":"454","line":820,"column":6,"nodeType":"397","endLine":826,"endColumn":4,"suggestions":"455"},{"ruleId":"395","severity":1,"message":"415","line":1228,"column":6,"nodeType":"397","endLine":1228,"endColumn":8,"suggestions":"456"},{"ruleId":"392","severity":1,"message":"393","line":7,"column":1,"nodeType":"394","endLine":29,"endColumn":2},{"ruleId":"395","severity":1,"message":"457","line":32,"column":6,"nodeType":"397","endLine":32,"endColumn":8,"suggestions":"458"},{"ruleId":"395","severity":1,"message":"459","line":102,"column":6,"nodeType":"397","endLine":102,"endColumn":49,"suggestions":"460"},{"ruleId":"395","severity":1,"message":"461","line":109,"column":6,"nodeType":"397","endLine":109,"endColumn":23,"suggestions":"462"},{"ruleId":"395","severity":1,"message":"463","line":141,"column":6,"nodeType":"397","endLine":141,"endColumn":25,"suggestions":"464"},{"ruleId":"395","severity":1,"message":"396","line":38,"column":6,"nodeType":"397","endLine":38,"endColumn":8,"suggestions":"465"},{"ruleId":"466","severity":1,"message":"467","line":103,"column":29,"nodeType":"408","endLine":103,"endColumn":72},{"ruleId":"406","severity":1,"message":"407","line":19,"column":11,"nodeType":"408","endLine":19,"endColumn":23},{"ruleId":"388","severity":1,"message":"468","line":13,"column":5,"nodeType":"390","messageId":"391","endLine":13,"endColumn":21},{"ruleId":"395","severity":1,"message":"469","line":33,"column":6,"nodeType":"397","endLine":33,"endColumn":8,"suggestions":"470"},{"ruleId":"395","severity":1,"message":"401","line":47,"column":6,"nodeType":"397","endLine":47,"endColumn":13,"suggestions":"471"},{"ruleId":"395","severity":1,"message":"404","line":48,"column":6,"nodeType":"397","endLine":48,"endColumn":8,"suggestions":"472"},{"ruleId":"395","severity":1,"message":"430","line":56,"column":6,"nodeType":"397","endLine":56,"endColumn":13,"suggestions":"473"},{"ruleId":"395","severity":1,"message":"401","line":29,"column":6,"nodeType":"397","endLine":29,"endColumn":13,"suggestions":"474"},{"ruleId":"475","severity":1,"message":"476","line":33,"column":11,"nodeType":"408","endLine":40,"endColumn":12},{"ruleId":"395","severity":1,"message":"477","line":33,"column":6,"nodeType":"397","endLine":33,"endColumn":8,"suggestions":"478"},{"ruleId":"395","severity":1,"message":"479","line":41,"column":6,"nodeType":"397","endLine":41,"endColumn":22,"suggestions":"480"},{"ruleId":"395","severity":1,"message":"463","line":54,"column":6,"nodeType":"397","endLine":54,"endColumn":12,"suggestions":"481"},{"ruleId":"395","severity":1,"message":"482","line":184,"column":6,"nodeType":"397","endLine":184,"endColumn":12,"suggestions":"483"},{"ruleId":"395","severity":1,"message":"484","line":273,"column":6,"nodeType":"397","endLine":273,"endColumn":12,"suggestions":"485"},{"ruleId":"395","severity":1,"message":"486","line":285,"column":6,"nodeType":"397","endLine":285,"endColumn":17,"suggestions":"487"},{"ruleId":"395","severity":1,"message":"488","line":417,"column":6,"nodeType":"397","endLine":417,"endColumn":17,"suggestions":"489"},{"ruleId":"395","severity":1,"message":"404","line":534,"column":6,"nodeType":"397","endLine":534,"endColumn":8,"suggestions":"490"},{"ruleId":"395","severity":1,"message":"491","line":647,"column":6,"nodeType":"397","endLine":647,"endColumn":8,"suggestions":"492"},{"ruleId":"395","severity":1,"message":"432","line":48,"column":6,"nodeType":"397","endLine":48,"endColumn":8,"suggestions":"493"},{"ruleId":"395","severity":1,"message":"494","line":59,"column":6,"nodeType":"397","endLine":59,"endColumn":20,"suggestions":"495"},{"ruleId":"395","severity":1,"message":"430","line":66,"column":6,"nodeType":"397","endLine":66,"endColumn":13,"suggestions":"496"},{"ruleId":"395","severity":1,"message":"497","line":73,"column":6,"nodeType":"397","endLine":73,"endColumn":23,"suggestions":"498"},{"ruleId":"395","severity":1,"message":"415","line":161,"column":6,"nodeType":"397","endLine":161,"endColumn":8,"suggestions":"499"},{"ruleId":"388","severity":1,"message":"500","line":8,"column":10,"nodeType":"390","messageId":"391","endLine":8,"endColumn":21},{"ruleId":"388","severity":1,"message":"501","line":39,"column":22,"nodeType":"390","messageId":"391","endLine":39,"endColumn":35},{"ruleId":"395","severity":1,"message":"432","line":42,"column":6,"nodeType":"397","endLine":42,"endColumn":8,"suggestions":"502"},{"ruleId":"395","severity":1,"message":"459","line":82,"column":6,"nodeType":"397","endLine":82,"endColumn":49,"suggestions":"503"},{"ruleId":"395","severity":1,"message":"461","line":89,"column":6,"nodeType":"397","endLine":89,"endColumn":23,"suggestions":"504"},{"ruleId":"392","severity":1,"message":"393","line":4,"column":1,"nodeType":"394","endLine":28,"endColumn":2},{"ruleId":"395","severity":1,"message":"404","line":11,"column":7,"nodeType":"397","endLine":11,"endColumn":9,"suggestions":"505"},{"ruleId":"395","severity":1,"message":"506","line":15,"column":6,"nodeType":"397","endLine":15,"endColumn":13,"suggestions":"507"},{"ruleId":"395","severity":1,"message":"508","line":19,"column":6,"nodeType":"397","endLine":19,"endColumn":17,"suggestions":"509"},{"ruleId":"388","severity":1,"message":"510","line":77,"column":9,"nodeType":"390","messageId":"391","endLine":77,"endColumn":19},{"ruleId":"395","severity":1,"message":"401","line":375,"column":6,"nodeType":"397","endLine":375,"endColumn":13,"suggestions":"511"},{"ruleId":"395","severity":1,"message":"512","line":387,"column":6,"nodeType":"397","endLine":387,"endColumn":17,"suggestions":"513"},{"ruleId":"395","severity":1,"message":"514","line":72,"column":6,"nodeType":"397","endLine":72,"endColumn":8,"suggestions":"515"},{"ruleId":"388","severity":1,"message":"516","line":34,"column":5,"nodeType":"390","messageId":"391","endLine":34,"endColumn":14},{"ruleId":"395","severity":1,"message":"517","line":107,"column":6,"nodeType":"397","endLine":107,"endColumn":70,"suggestions":"518"},{"ruleId":"388","severity":1,"message":"519","line":69,"column":13,"nodeType":"390","messageId":"391","endLine":69,"endColumn":25},{"ruleId":"392","severity":1,"message":"393","line":1,"column":1,"nodeType":"394","endLine":7,"endColumn":2},{"ruleId":"388","severity":1,"message":"417","line":2,"column":8,"nodeType":"390","messageId":"391","endLine":2,"endColumn":14},{"ruleId":"388","severity":1,"message":"520","line":5,"column":25,"nodeType":"390","messageId":"391","endLine":5,"endColumn":29},{"ruleId":"388","severity":1,"message":"521","line":10,"column":11,"nodeType":"390","messageId":"391","endLine":10,"endColumn":14},{"ruleId":"395","severity":1,"message":"522","line":36,"column":6,"nodeType":"397","endLine":36,"endColumn":8,"suggestions":"523"},{"ruleId":"395","severity":1,"message":"522","line":39,"column":6,"nodeType":"397","endLine":39,"endColumn":8,"suggestions":"524"},{"ruleId":"388","severity":1,"message":"417","line":5,"column":8,"nodeType":"390","messageId":"391","endLine":5,"endColumn":14},{"ruleId":"395","severity":1,"message":"401","line":20,"column":6,"nodeType":"397","endLine":20,"endColumn":13,"suggestions":"525"},{"ruleId":"395","severity":1,"message":"424","line":36,"column":6,"nodeType":"397","endLine":36,"endColumn":8,"suggestions":"526"},{"ruleId":"395","severity":1,"message":"527","line":103,"column":6,"nodeType":"397","endLine":103,"endColumn":8,"suggestions":"528"},{"ruleId":"395","severity":1,"message":"463","line":116,"column":6,"nodeType":"397","endLine":116,"endColumn":37,"suggestions":"529"},{"ruleId":"395","severity":1,"message":"432","line":500,"column":6,"nodeType":"397","endLine":500,"endColumn":8,"suggestions":"530"},{"ruleId":"395","severity":1,"message":"459","line":515,"column":6,"nodeType":"397","endLine":515,"endColumn":49,"suggestions":"531"},{"ruleId":"395","severity":1,"message":"461","line":523,"column":6,"nodeType":"397","endLine":523,"endColumn":23,"suggestions":"532"},{"ruleId":"395","severity":1,"message":"533","line":713,"column":6,"nodeType":"397","endLine":713,"endColumn":8,"suggestions":"534"},"no-native-reassign",["535"],"no-negated-in-lhs",["536"],["535"],["536"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getClientDetails' and 'user.user_id'. Either include them or remove the dependency array.","ArrayExpression",["537"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["538"],"React Hook useEffect has a missing dependency: 'clearErrors'. Either include it or remove the dependency array.",["539"],"'path' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveClientLoans'. Either include it or remove the dependency array.",["540"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["541"],"React Hook useEffect has a missing dependency: 'basicInfo'. Either include it or remove the dependency array. You can also do a functional update 'setBasicInfo(b => ...)' if you only need 'basicInfo' in the 'setBasicInfo' call.",["542"],"'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clearError', 'loanId', and 'verifyRepaymentStatus'. Either include them or remove the dependency array.",["543"],"React Hook useEffect has missing dependencies: 'loanId' and 'retrieveLoan'. Either include them or remove the dependency array.",["544"],"'styles' is defined but never used.",["545"],"React Hook useEffect has a missing dependency: 'loanData'. Either include it or remove the dependency array. You can also do a functional update 'setLoanData(l => ...)' if you only need 'loanData' in the 'setLoanData' call.",["546"],["547"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'clientId' and 'getClientDetails'. Either include them or remove the dependency array.",["548"],"React Hook useEffect has a missing dependency: 'getClientListForRole'. Either include it or remove the dependency array.",["549"],"'approvedStatus' is assigned a value but never used.","'resetApprovalStatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'clearError'. Either include it or remove the dependency array.",["550"],"React Hook useEffect has a missing dependency: 'getBankList'. Either include it or remove the dependency array.",["551"],"React Hook useEffect has a missing dependency: 'approvalData'. Either include it or remove the dependency array. You can also do a functional update 'setApprovalData(a => ...)' if you only need 'approvalData' in the 'setApprovalData' call.",["552"],"React Hook useEffect has a missing dependency: 'clientBank'. Either include it or remove the dependency array. Outer scope values like 'disburseBank' aren't valid dependencies because mutating them doesn't re-render the component.",["553"],"React Hook useEffect has a missing dependency: 'repayData'. Either include it or remove the dependency array. You can also do a functional update 'setRepayData(r => ...)' if you only need 'repayData' in the 'setRepayData' call.",["554"],"'approveLoanError' is assigned a value but never used.","'disburseLoan' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loanId'. Either include it or remove the dependency array.",["555"],["556"],"React Hook useEffect has a missing dependency: 'resetRepaymentStatus'. Either include it or remove the dependency array.",["557"],"React Hook useEffect has a missing dependency: 'resetApprovalStatus'. Either include it or remove the dependency array.",["558"],["559"],"React Hook useEffect has a missing dependency: 'clearApprovalError'. Either include it or remove the dependency array.",["560"],"React Hook useEffect has a missing dependency: 'setupData'. Either include it or remove the dependency array. You can also do a functional update 'setSetupData(s => ...)' if you only need 'setupData' in the 'setSetupData' call.",["561"],"React Hook useEffect has missing dependencies: 'loanData?.monthlySalary' and 'setupData'. Either include them or remove the dependency array. You can also do a functional update 'setSetupData(s => ...)' if you only need 'setupData' in the 'setSetupData' call.",["562"],["563"],"React Hook useEffect has missing dependencies: 'getBankList', 'getClientDetails', and 'user.user_id'. Either include them or remove the dependency array.",["564"],"React Hook useEffect has missing dependencies: 'bankList' and 'verifyBankInfo'. Either include them or remove the dependency array.",["565"],"React Hook useEffect has a missing dependency: 'bankInfo'. Either include it or remove the dependency array. You can also do a functional update 'setBankInfo(b => ...)' if you only need 'bankInfo' in the 'setBankInfo' call.",["566"],"React Hook useEffect has a missing dependency: 'biodata'. Either include it or remove the dependency array. You can also do a functional update 'setBiodata(b => ...)' if you only need 'biodata' in the 'setBiodata' call.",["567"],["568"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'resetLinkSuccess' is assigned a value but never used.","React Hook React.useMemo has missing dependencies: 'authenticateUser' and 'user.user_id'. Either include them or remove the dependency array.",["569"],["570"],["571"],["572"],["573"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook useEffect has missing dependencies: 'clearErrors' and 'getClientListForRole'. Either include them or remove the dependency array.",["574"],"React Hook useMemo has a missing dependency: 'user.user_id'. Either include it or remove the dependency array.",["575"],["576"],"React Hook useEffect has a missing dependency: 'nextOfKin'. Either include it or remove the dependency array. You can also do a functional update 'setNextOfKin(n => ...)' if you only need 'nextOfKin' in the 'setNextOfKin' call.",["577"],"React Hook useEffect has a missing dependency: 'disburseBank'. Either include it or remove the dependency array. You can also do a functional update 'setDisburseBank(d => ...)' if you only need 'disburseBank' in the 'setDisburseBank' call.",["578"],"React Hook useEffect has a missing dependency: 'salaryBank'. Either include it or remove the dependency array. You can also do a functional update 'setSalaryBank(s => ...)' if you only need 'salaryBank' in the 'setSalaryBank' call.",["579"],"React Hook useEffect has missing dependencies: 'OfficeAddress' and 'employerInfo'. Either include them or remove the dependency array. You can also do a functional update 'setEmployerInfo(e => ...)' if you only need 'employerInfo' in the 'setEmployerInfo' call.",["580"],["581"],"React Hook useEffect has missing dependencies: 'clearErrors', 'clientId', and 'getClientDetails'. Either include them or remove the dependency array.",["582"],["583"],"React Hook useEffect has missing dependencies: 'disburseData' and 'loanData.amount'. Either include them or remove the dependency array. You can also do a functional update 'setDisburseData(d => ...)' if you only need 'disburseData' in the 'setDisburseData' call.",["584"],["585"],"React Hook useEffect has a missing dependency: 'resetDisburseStatus'. Either include it or remove the dependency array.",["586"],["587"],"'RiUser3Fill' is defined but never used.","'setLgaLoading' is assigned a value but never used.",["588"],["589"],["590"],["591"],"React Hook useMemo has a missing dependency: 'clientId'. Either include it or remove the dependency array.",["592"],"React Hook useEffect has a missing dependency: 'retrieveLoan'. Either include it or remove the dependency array.",["593"],"'emptyState' is assigned a value but never used.",["594"],"React Hook useEffect has a missing dependency: 'clearErr'. Either include it or remove the dependency array.",["595"],"React Hook useEffect has missing dependencies: 'loanData?.approvedAmount', 'loanData?.client?.firstName', 'loanData?.client?.lastName', 'loanData?.employment?.sector', 'loanData?.loanPurpose', 'loanData?.monthlyRepayment', 'loanData?.residence?.street', and 'offerFormData'. Either include them or remove the dependency array. You can also do a functional update 'setOfferFormData(o => ...)' if you only need 'offerFormData' in the 'setOfferFormData' call.",["596"],"'loanApply' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loanCalcData'. Either include it or remove the dependency array. You can also do a functional update 'setLoanCalcData(l => ...)' if you only need 'loanCalcData' in the 'setLoanCalcData' call.",["597"],"'errorMessage' is assigned a value but never used.","'Link' is defined but never used.","'url' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getClientListForRole' and 'retrieveClientLoans'. Either include them or remove the dependency array.",["598"],["599"],["600"],["601"],"React Hook useEffect has missing dependencies: 'currentAddedUser' and 'getClientDetails'. Either include them or remove the dependency array.",["602"],["603"],["604"],["605"],["606"],"React Hook useEffect has a missing dependency: 'close'. Either include it or remove the dependency array. If 'close' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["607"],"no-global-assign","no-unsafe-negation",{"desc":"608","fix":"609"},{"desc":"610","fix":"611"},{"desc":"612","fix":"613"},{"desc":"614","fix":"615"},{"desc":"614","fix":"616"},{"desc":"617","fix":"618"},{"desc":"619","fix":"620"},{"desc":"621","fix":"622"},{"desc":"614","fix":"623"},{"desc":"624","fix":"625"},{"desc":"626","fix":"627"},{"desc":"628","fix":"629"},{"desc":"630","fix":"631"},{"desc":"632","fix":"633"},{"desc":"634","fix":"635"},{"desc":"636","fix":"637"},{"desc":"638","fix":"639"},{"desc":"640","fix":"641"},{"desc":"642","fix":"643"},{"desc":"644","fix":"645"},{"desc":"646","fix":"647"},{"desc":"648","fix":"649"},{"desc":"632","fix":"650"},{"desc":"651","fix":"652"},{"desc":"653","fix":"654"},{"desc":"655","fix":"656"},{"desc":"621","fix":"657"},{"desc":"658","fix":"659"},{"desc":"660","fix":"661"},{"desc":"662","fix":"663"},{"desc":"664","fix":"665"},{"desc":"608","fix":"666"},{"desc":"667","fix":"668"},{"desc":"612","fix":"669"},{"desc":"614","fix":"670"},{"desc":"632","fix":"671"},{"desc":"612","fix":"672"},{"desc":"673","fix":"674"},{"desc":"675","fix":"676"},{"desc":"677","fix":"678"},{"desc":"679","fix":"680"},{"desc":"681","fix":"682"},{"desc":"683","fix":"684"},{"desc":"685","fix":"686"},{"desc":"614","fix":"687"},{"desc":"688","fix":"689"},{"desc":"634","fix":"690"},{"desc":"691","fix":"692"},{"desc":"632","fix":"693"},{"desc":"694","fix":"695"},{"desc":"621","fix":"696"},{"desc":"634","fix":"697"},{"desc":"660","fix":"698"},{"desc":"662","fix":"699"},{"desc":"614","fix":"700"},{"desc":"701","fix":"702"},{"desc":"703","fix":"704"},{"desc":"612","fix":"705"},{"desc":"706","fix":"707"},{"desc":"708","fix":"709"},{"desc":"710","fix":"711"},{"desc":"712","fix":"713"},{"desc":"712","fix":"714"},{"desc":"612","fix":"715"},{"desc":"628","fix":"716"},{"desc":"717","fix":"718"},{"desc":"719","fix":"720"},{"desc":"634","fix":"721"},{"desc":"660","fix":"722"},{"desc":"662","fix":"723"},{"desc":"724","fix":"725"},"Update the dependencies array to be: [getClientDetails, user.user_id]",{"range":"726","text":"727"},"Update the dependencies array to be: [history, userDetails]",{"range":"728","text":"729"},"Update the dependencies array to be: [clearErrors, error]",{"range":"730","text":"731"},"Update the dependencies array to be: [retrieveClientLoans]",{"range":"732","text":"733"},{"range":"734","text":"733"},"Update the dependencies array to be: [basicInfo, data]",{"range":"735","text":"736"},"Update the dependencies array to be: [clearError, loanId, verifyRepaymentStatus]",{"range":"737","text":"738"},"Update the dependencies array to be: [loanId, retrieveLoan]",{"range":"739","text":"740"},{"range":"741","text":"733"},"Update the dependencies array to be: [loanData, location]",{"range":"742","text":"743"},"Update the dependencies array to be: [proposedAmount, proposedDuration, monthlyIncome, loanData]",{"range":"744","text":"745"},"Update the dependencies array to be: [clientId, getClientDetails]",{"range":"746","text":"747"},"Update the dependencies array to be: [getClientListForRole]",{"range":"748","text":"749"},"Update the dependencies array to be: [clearError, error]",{"range":"750","text":"751"},"Update the dependencies array to be: [getBankList]",{"range":"752","text":"753"},"Update the dependencies array to be: [approvalData, loanData]",{"range":"754","text":"755"},"Update the dependencies array to be: [clientBank]",{"range":"756","text":"757"},"Update the dependencies array to be: [loanData, repayData]",{"range":"758","text":"759"},"Update the dependencies array to be: [loanId]",{"range":"760","text":"761"},"Update the dependencies array to be: [loanId, setupData]",{"range":"762","text":"763"},"Update the dependencies array to be: [repaymentStatus, resetRepaymentStatus]",{"range":"764","text":"765"},"Update the dependencies array to be: [approvedStatus, resetApprovalStatus]",{"range":"766","text":"767"},{"range":"768","text":"751"},"Update the dependencies array to be: [approvalError, clearApprovalError]",{"range":"769","text":"770"},"Update the dependencies array to be: [loanData, setupData, userRole]",{"range":"771","text":"772"},"Update the dependencies array to be: [approvedInterest, approvedLoanAmount, approvedTenure, adminFee, setupData.approvedDti, setupData, loanData?.monthlySalary]",{"range":"773","text":"774"},{"range":"775","text":"740"},"Update the dependencies array to be: [getBankList, getClientDetails, user.user_id]",{"range":"776","text":"777"},"Update the dependencies array to be: [bankInfo.accountNumber, bankInfo.bankName, bankList, verifyBankInfo]",{"range":"778","text":"779"},"Update the dependencies array to be: [bankInfo, userBankDetails]",{"range":"780","text":"781"},"Update the dependencies array to be: [biodata, user, userDetails]",{"range":"782","text":"783"},{"range":"784","text":"727"},"Update the dependencies array to be: [authenticateUser, user.user_id]",{"range":"785","text":"786"},{"range":"787","text":"731"},{"range":"788","text":"733"},{"range":"789","text":"751"},{"range":"790","text":"731"},"Update the dependencies array to be: [clearErrors, getClientListForRole]",{"range":"791","text":"792"},"Update the dependencies array to be: [clientsForRole, user.user_id]",{"range":"793","text":"794"},"Update the dependencies array to be: [biodata, data]",{"range":"795","text":"796"},"Update the dependencies array to be: [data, nextOfKin]",{"range":"797","text":"798"},"Update the dependencies array to be: [data, disburseBank]",{"range":"799","text":"800"},"Update the dependencies array to be: [loanDeets, salaryBank]",{"range":"801","text":"802"},"Update the dependencies array to be: [OfficeAddress, employerInfo, loanDeets]",{"range":"803","text":"804"},{"range":"805","text":"733"},"Update the dependencies array to be: [clearErrors, clientId, getClientDetails]",{"range":"806","text":"807"},{"range":"808","text":"753"},"Update the dependencies array to be: [disburseBank, disburseData, loanData.amount]",{"range":"809","text":"810"},{"range":"811","text":"751"},"Update the dependencies array to be: [disbursedStatus, resetDisburseStatus]",{"range":"812","text":"813"},{"range":"814","text":"740"},{"range":"815","text":"753"},{"range":"816","text":"779"},{"range":"817","text":"781"},{"range":"818","text":"733"},"Update the dependencies array to be: [clientId, loans]",{"range":"819","text":"820"},"Update the dependencies array to be: [retrieveLoan, userLoans]",{"range":"821","text":"822"},{"range":"823","text":"731"},"Update the dependencies array to be: [clearErr, userError]",{"range":"824","text":"825"},"Update the dependencies array to be: [loanData?.approvedAmount, loanData?.client?.firstName, loanData?.client?.lastName, loanData?.employment?.sector, loanData?.loanPurpose, loanData?.monthlyRepayment, loanData?.residence?.street, offerFormData]",{"range":"826","text":"827"},"Update the dependencies array to be: [monthlySalary, loanAmount, installmentPeriod, loanCalcData.dti, loanCalcData]",{"range":"828","text":"829"},"Update the dependencies array to be: [getClientListForRole, retrieveClientLoans]",{"range":"830","text":"831"},{"range":"832","text":"831"},{"range":"833","text":"731"},{"range":"834","text":"747"},"Update the dependencies array to be: [currentAddedUser, getClientDetails]",{"range":"835","text":"836"},"Update the dependencies array to be: [biodata, currentAddedUser, userDetails]",{"range":"837","text":"838"},{"range":"839","text":"753"},{"range":"840","text":"779"},{"range":"841","text":"781"},"Update the dependencies array to be: [close]",{"range":"842","text":"843"},[1704,1706],"[getClientDetails, user.user_id]",[2253,2266],"[history, userDetails]",[2363,2370],"[clearErrors, error]",[1105,1107],"[retrieveClientLoans]",[904,906],[1718,1724],"[basicInfo, data]",[6103,6105],"[clearError, loanId, verifyRepaymentStatus]",[9061,9063],"[loanId, retrieveLoan]",[812,814],[1402,1412],"[loanData, location]",[2253,2302],"[proposedAmount, proposedDuration, monthlyIncome, loanData]",[2829,2831],"[clientId, getClientDetails]",[837,839],"[getClientListForRole]",[2170,2177],"[clearError, error]",[2938,2940],"[getBankList]",[3413,3423],"[approvalData, loanData]",[6215,6229],"[clientBank]",[12831,12841],"[loanData, repayData]",[21791,21793],"[loanId]",[21896,21907],"[loanId, setupData]",[22076,22093],"[repaymentStatus, resetRepaymentStatus]",[22248,22264],"[approvedStatus, resetApprovalStatus]",[22362,22369],[22491,22506],"[approvalError, clearApprovalError]",[23727,23747],"[loanData, setupData, userRole]",[24751,24863],"[approvedInterest, approvedLoanAmount, approvedTenure, adminFee, setupData.approvedDti, setupData, loanData?.monthlySalary]",[36975,36977],[1099,1101],"[getBankList, getClientDetails, user.user_id]",[2739,2782],"[bankInfo.accountNumber, bankInfo.bankName, bankList, verifyBankInfo]",[2957,2974],"[bankInfo, userBankDetails]",[3882,3901],"[biodata, user, userDetails]",[1193,1195],[1060,1062],"[authenticateUser, user.user_id]",[1332,1339],[1840,1842],[1939,1946],[868,875],[1308,1310],"[clearErrors, getClientListForRole]",[1526,1542],"[clientsForRole, user.user_id]",[1984,1990],"[biodata, data]",[4959,4965],"[data, nextOfKin]",[6937,6943],"[data, disburseBank]",[7287,7298],"[loanDeets, salaryBank]",[10781,10792],"[OfficeAddress, employerInfo, loanDeets]",[13630,13632],[17010,17012],"[clearErrors, clientId, getClientDetails]",[1695,1697],[1998,2012],"[disburseBank, disburseData, loanData.amount]",[2110,2117],[2265,2282],"[disbursedStatus, resetDisburseStatus]",[4308,4310],[1278,1280],[2585,2628],[2803,2820],[375,377],[493,500],"[clientId, loans]",[564,575],"[retrieveLoan, userLoans]",[10218,10225],[10372,10383],"[clearErr, userError]",[2253,2255],"[loanData?.approvedAmount, loanData?.client?.firstName, loanData?.client?.lastName, loanData?.employment?.sector, loanData?.loanPurpose, loanData?.monthlyRepayment, loanData?.residence?.street, offerFormData]",[3140,3204],"[monthlySalary, loanAmount, installmentPeriod, loanCalcData.dti, loanCalcData]",[1596,1598],"[getClientListForRole, retrieveClientLoans]",[1811,1813],[664,671],[1155,1157],[2818,2820],"[currentAddedUser, getClientDetails]",[3184,3215],"[biodata, currentAddedUser, userDetails]",[14599,14601],[15039,15082],[15255,15272],[21241,21243],"[close]"]