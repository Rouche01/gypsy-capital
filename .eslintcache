[{"/home/tga/Desktop/gypsy-capital/src/reportWebVitals.js":"1","/home/tga/Desktop/gypsy-capital/src/routes/protectedroute/ProtectedRoute.js":"2","/home/tga/Desktop/gypsy-capital/src/utils/history.js":"3","/home/tga/Desktop/gypsy-capital/src/routes/pageUrl.js":"4","/home/tga/Desktop/gypsy-capital/src/pages/SignIn/SignIn.jsx":"5","/home/tga/Desktop/gypsy-capital/src/pages/CreditReport/CreditReport.jsx":"6","/home/tga/Desktop/gypsy-capital/src/pages/SignUp/SignUp.jsx":"7","/home/tga/Desktop/gypsy-capital/src/pages/Overview/Overview.jsx":"8","/home/tga/Desktop/gypsy-capital/src/components/InputField/InputField.js":"9","/home/tga/Desktop/gypsy-capital/src/components/Dashboard/Dashboard.jsx":"10","/home/tga/Desktop/gypsy-capital/src/App.js":"11","/home/tga/Desktop/gypsy-capital/src/pages/pages.js":"12","/home/tga/Desktop/gypsy-capital/src/pages/ConsumerCredit/ConsumerCredit.jsx":"13","/home/tga/Desktop/gypsy-capital/src/components/FileUploadButton/FileUploadButton.js":"14","/home/tga/Desktop/gypsy-capital/src/components/ProgressBar/ProgressBar.jsx":"15","/home/tga/Desktop/gypsy-capital/src/api/gypsy-web.js":"16","/home/tga/Desktop/gypsy-capital/src/pages/OtpVerify/OtpVerify.jsx":"17","/home/tga/Desktop/gypsy-capital/src/index.js":"18","/home/tga/Desktop/gypsy-capital/src/pages/Profile/Profile.jsx":"19","/home/tga/Desktop/gypsy-capital/src/components/Button/Button.jsx":"20","/home/tga/Desktop/gypsy-capital/src/components/NavBar/NavBar.jsx":"21","/home/tga/Desktop/gypsy-capital/src/pages/HomePage/HomePage.jsx":"22","/home/tga/Desktop/gypsy-capital/src/context/AuthContext.js":"23","/home/tga/Desktop/gypsy-capital/src/components/FaqSection/FaqSection.jsx":"24","/home/tga/Desktop/gypsy-capital/src/components/Footer/Footer.jsx":"25","/home/tga/Desktop/gypsy-capital/src/pages/Products/Products.jsx":"26"},{"size":362,"mtime":1611009045300,"results":"27","hashOfConfig":"28"},{"size":837,"mtime":1611816481484,"results":"29","hashOfConfig":"28"},{"size":84,"mtime":1611990348110,"results":"30","hashOfConfig":"28"},{"size":830,"mtime":1611990348110,"results":"31","hashOfConfig":"28"},{"size":2141,"mtime":1611816481480,"results":"32","hashOfConfig":"28"},{"size":992,"mtime":1611281322795,"results":"33","hashOfConfig":"28"},{"size":7514,"mtime":1611990348110,"results":"34","hashOfConfig":"28"},{"size":4748,"mtime":1611816481432,"results":"35","hashOfConfig":"28"},{"size":2349,"mtime":1612099100962,"results":"36","hashOfConfig":"28"},{"size":1944,"mtime":1611561430142,"results":"37","hashOfConfig":"28"},{"size":1396,"mtime":1612104681664,"results":"38","hashOfConfig":"28"},{"size":483,"mtime":1611990348110,"results":"39","hashOfConfig":"28"},{"size":22062,"mtime":1611816481408,"results":"40","hashOfConfig":"28"},{"size":665,"mtime":1611816481368,"results":"41","hashOfConfig":"28"},{"size":1565,"mtime":1611429643367,"results":"42","hashOfConfig":"28"},{"size":137,"mtime":1611990348086,"results":"43","hashOfConfig":"28"},{"size":2120,"mtime":1611990348110,"results":"44","hashOfConfig":"28"},{"size":548,"mtime":1611990348106,"results":"45","hashOfConfig":"28"},{"size":16800,"mtime":1611816481464,"results":"46","hashOfConfig":"28"},{"size":605,"mtime":1611113277831,"results":"47","hashOfConfig":"28"},{"size":2025,"mtime":1612001546349,"results":"48","hashOfConfig":"28"},{"size":12850,"mtime":1612102649255,"results":"49","hashOfConfig":"28"},{"size":3284,"mtime":1611990348086,"results":"50","hashOfConfig":"28"},{"size":2704,"mtime":1612099926099,"results":"51","hashOfConfig":"28"},{"size":1152,"mtime":1612102534435,"results":"52","hashOfConfig":"28"},{"size":5865,"mtime":1612125998193,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"t9s37o",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"65"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/tga/Desktop/gypsy-capital/src/reportWebVitals.js",[],["115","116"],"/home/tga/Desktop/gypsy-capital/src/routes/protectedroute/ProtectedRoute.js",["117"],"import React, { useContext } from 'react';\nimport { Route, withRouter, Redirect } from 'react-router-dom';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport pageUrl from '../pageUrl';\n\nconst renderPage = (Component, props) => {\n  return <Route render={() => <Component {...props}/>} />\n}\n\n\nconst ProtectedRoute = ({component: Component, history, ...rest}) => {\n\n  const { state: { loggedIn, user } } = useContext(AuthContext);\n\n  console.log(loggedIn);\n\n  return (\n    <Route \n      {...rest}\n      render={(props) => {\n        return loggedIn ? \n          renderPage(Component, props) :\n          <Redirect \n            to={{\n              pathname: pageUrl.SIGNIN_PAGE,\n              state: { from: props.location }\n            }}\n          />\n      }}\n    />\n  )\n}\n\n\nexport default withRouter(ProtectedRoute);",["118","119"],"/home/tga/Desktop/gypsy-capital/src/utils/history.js",[],"/home/tga/Desktop/gypsy-capital/src/routes/pageUrl.js",[],["120","121"],"/home/tga/Desktop/gypsy-capital/src/pages/SignIn/SignIn.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/CreditReport/CreditReport.jsx",["122"],"import React from 'react';\nimport styles from './CreditReport.module.scss';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport pageUrl from '../../routes/pageUrl';\nimport { FiLayers } from 'react-icons/fi';\nimport { BiCreditCard } from 'react-icons/bi';\nimport { AiOutlineUser } from 'react-icons/ai';\nimport { GiTakeMyMoney } from 'react-icons/gi';\n\n\nconst CreditReport = ({ location }) => {\n\n  const sidebarRoutes = [\n    {\n      label: \"Dashboard\",\n      link: pageUrl.DASHBOARD_HOMEPAGE,\n      icon: FiLayers\n    },\n    {\n      label: \"Consumer Credit\",\n      link: pageUrl.CONSUMER_CREDIT_PAGE,\n      icon: GiTakeMyMoney\n    },\n    {\n      label: \"Credit Report\",\n      link: pageUrl.CREDIT_REPORT_PAGE,\n      icon: BiCreditCard\n    },\n    {\n      label: \"Profile\",\n      link: pageUrl.PROFILE_PAGE,\n      icon: AiOutlineUser\n    },\n  ]\n\n  return (\n    <Dashboard sidebarRoutes={sidebarRoutes} location={location}>\n\n    </Dashboard>\n  )\n}\n\n\nexport default CreditReport;",["123","124"],"/home/tga/Desktop/gypsy-capital/src/pages/SignUp/SignUp.jsx",["125","126"],"import React, { useContext, useEffect, useState } from 'react';\nimport Logo from '../../assets/logo.png';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport styles from './SignUp.module.scss';\nimport { Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport pageUrl from '../../routes/pageUrl';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\nconst SignUp = () => {\n\n  const { state: { loading, error }, registerUser, getActiveUser } = useContext(AuthContext);\n\n  const [signUpValues, setSignUpvalues] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    mobileNumber: '',\n    password: '',\n    confirmPassword: '',\n    referralChoice: ''\n  });\n\n  const [validationErrors, setValidationErrors] = useState({\n    firstName: null,\n    lastName: null,\n    email: null,\n    mobileNumber: null,\n    password: null,\n    confirmPassword: null,\n    referralChoice: null\n  })\n\n  useEffect(() => {\n    if(error) {\n      toast.error(\"An error ocurred, try signing in again\");\n    }\n  }, [error])\n\n  const referralOptions = [\n    'Search Engine', \n    'Google Ads', \n    'Email', \n    'Radio', \n    'TV', \n    'Newspaper', \n    'Word of mouth',\n    'Facebook',\n    'Instagram',\n    'Other'\n  ]\n\n  const validateInput = () => {\n\n    const validMail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    let validPhoneNumber = /^[0]\\d{10}$/;\n\n    const errorsInit = {};\n    let fields = { ...signUpValues }\n\n    for(const key in fields) {\n      if(!fields[key]) {\n        errorsInit[key] = \"This field is required\";\n      } \n      if(fields.email && !fields.email.match(validMail)) {\n        errorsInit.email = \"Please enter a valid email address\"\n      } \n      if(fields.mobileNumber && !fields.mobileNumber.match(validPhoneNumber)) {\n        errorsInit.mobileNumber = \"Please enter a valid phone number\"\n      } \n      if(fields.password && fields.password.length < 8) {\n        errorsInit.password = \"Password must be at least 8 characters\";\n      }\n      if(fields.confirmPassword && fields.confirmPassword !== fields.password) {\n        errorsInit.confirmPassword = \"Your password does not match\"\n      }\n    }\n\n    setValidationErrors(errorsInit);\n\n    if(Object.entries(errorsInit).length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n\n  }\n\n  const handleSubmit = () => {\n    console.log(signUpValues);\n    const validated = validateInput();\n    const signUpData = {\n      email: signUpValues.email,\n      firstName: signUpValues.firstName,\n      lastName: signUpValues.lastName,\n      phoneNumber: signUpValues.mobileNumber,\n      password: signUpValues.password,\n      hearAboutUs: signUpValues.referralChoice,\n      city: \"Lagos\"\n    }\n    if(validated) {\n      registerUser(signUpData, getActiveUser);\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <img src={Logo} alt=\"Gypsy Logo\" />\n      <h1>Create your account</h1>\n      <p className={styles.subtitle}>Hey there, let's setup your Gypsy Capital account</p>\n      <div className={styles.registerBox}>\n        <ToastContainer position=\"top-center\" />\n        <Row>\n          <Col>\n            <InputField type=\"text\" \n              nameAttr=\"firstName\" \n              label=\"First Name\" \n              value={signUpValues.firstName} \n              changed={(val) => {\n                setValidationErrors({ ...validationErrors, firstName: null })\n                setSignUpvalues({...signUpValues, firstName: val})\n              }}\n              error={validationErrors.firstName && validationErrors.firstName}\n            />\n          </Col>\n          <Col>\n            <InputField type=\"text\" \n              nameAttr=\"lastName\" \n              label=\"Last Name\" \n              value={signUpValues.lastName}\n              changed={(val) => {\n                setValidationErrors({ ...validationErrors, lastName: null })\n                setSignUpvalues({...signUpValues, lastName: val})\n              }}\n              error={validationErrors.lastName && validationErrors.lastName}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mt-4\">\n          <Col>\n            <InputField type=\"email\" \n              nameAttr=\"email\" \n              label=\"Email\" \n              value={signUpValues.email}\n              changed={(val) => {\n                setValidationErrors({ ...validationErrors, email: null })\n                setSignUpvalues({...signUpValues, email: val})\n              }}\n              error={validationErrors.email && validationErrors.email}\n            />\n          </Col>\n          <Col>\n            <InputField type=\"phone\" \n              nameAttr=\"mobileNo\" \n              label=\"Mobile Number\" \n              value={signUpValues.mobileNumber}\n              changed={(val) => {\n                setValidationErrors({...validationErrors, mobileNumber: null})\n                setSignUpvalues({...signUpValues, mobileNumber: val})\n              }}\n              error={validationErrors.mobileNumber && validationErrors.mobileNumber}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mt-4\">\n          <Col>\n            <InputField type=\"password\" \n              nameAttr=\"password\" \n              label=\"Password\" \n              value={signUpValues.password}\n              changed={(val) => {\n                setValidationErrors({...validationErrors, password: null})\n                setSignUpvalues({...signUpValues, password: val})\n              }}\n              error={validationErrors.password && validationErrors.password}\n            />\n          </Col>\n          <Col>\n            <InputField type=\"password\" \n              nameAttr=\"confirmPassword\" \n              label=\"Confirm Password\" \n              value={signUpValues.confirmPassword}\n              changed={(val) => {\n                setValidationErrors({...validationErrors, confirmPassword: null})\n                setSignUpvalues({...signUpValues, confirmPassword: val})\n              }}\n              error={validationErrors.confirmPassword && validationErrors.confirmPassword}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mt-4\">\n          <Col>\n            <InputField type=\"select\" \n              label=\"How did you hear about us?\" \n              options={referralOptions} \n              nameAttr=\"publicity\"\n              changed={(val) => {\n                setValidationErrors({...validationErrors, referralChoice: null})\n                setSignUpvalues({...signUpValues, referralChoice: val})\n              }}\n              error={validationErrors.referralChoice && validationErrors.referralChoice}\n            />\n          </Col>\n        </Row>\n        <Button className=\"mt-5\" fullWidth clicked={handleSubmit} bgColor=\"#741763\" size=\"lg\" color=\"#EBEBEB\">\n          { loading ? 'Loading...' : 'Sign Up' }\n        </Button>\n        <p className={[styles.authLink, 'mt-3'].join(' ')}>\n          Already have an account? <Link to={pageUrl.SIGNIN_PAGE}>Log in</Link>\n        </p>\n        <p className={styles.legalLink}>\n          By continuing, you agree to our <Link to={pageUrl.TERMS_CONDITIONS_PAGE}>Terms and Conditions</Link> of service and <Link to={pageUrl.PRIVACY_POLICY_PAGE}>Privacy Policy.</Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n\n\nexport default SignUp;","/home/tga/Desktop/gypsy-capital/src/pages/Overview/Overview.jsx",["127"],"import React, { useState } from 'react';\nimport styles from './Overview.module.scss';\nimport pageUrl from '../../routes/pageUrl';\nimport { FiLayers } from 'react-icons/fi';\nimport { BiCreditCard } from 'react-icons/bi';\nimport { AiOutlineUser } from 'react-icons/ai';\nimport { GiTakeMyMoney } from 'react-icons/gi';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport Button from '../../components/Button/Button';\nimport gypsyNote from '../../assets/icons/gypsyNotes.svg';\nimport altInvestment from '../../assets/icons/alternative.svg';\nimport { Col, Row } from 'react-bootstrap';\nimport noLoan from '../../assets/no-loan.png';\nimport moment from 'moment';\n\n\nconst Overview = ({ location }) => {\n\n  const [loanStatus, setLoanStatus] = useState('pending_approval');\n\n  const sidebarRoutes = [\n    {\n      label: \"Dashboard\",\n      link: pageUrl.DASHBOARD_HOMEPAGE,\n      icon: FiLayers\n    },\n    {\n      label: \"Consumer Credit\",\n      link: pageUrl.CONSUMER_CREDIT_PAGE,\n      icon: GiTakeMyMoney\n    },\n    {\n      label: \"Credit Report\",\n      link: pageUrl.CREDIT_REPORT_PAGE,\n      icon: BiCreditCard\n    },\n    {\n      label: \"Profile\",\n      link: pageUrl.PROFILE_PAGE,\n      icon: AiOutlineUser\n    },\n  ]\n\n  return (\n    <Dashboard sidebarRoutes={sidebarRoutes} location={location}>\n      <div className={styles.welcomeGroup}>\n        <h2>Hey, Daniel</h2>\n        <p className={styles.currentDate}>Today is {moment().format('dddd Do[,] MMMM')}.</p>\n      </div>\n      <div className={styles.loanStatus} style={{padding: '30px 40px'}}>\n        { loanStatus === \"inactive\" && <div className={styles.innerContainer}>\n          <div className={styles.mainContent}>\n            <h3>Active Loan</h3>\n            <p>Sorry you currently have no active loan</p>\n            <Button\n              bgColor=\"#741763\"\n              size=\"sm\"\n              color=\"#fff\"\n              className=\"mt-4\"\n            >\n              Apply for loan\n            </Button>\n          </div>\n          <img src={noLoan} alt=\"No active loan\" height=\"280\" />\n        </div> } \n        { loanStatus !== \"inactive\" && <div className={styles.activeStyle}>\n          <div className={styles.mainContent}>\n            <h3>Active Loan <span>{loanStatus.replace('_', ' ')}</span></h3>\n            <div className={styles.statusBoard}>\n              <Row>\n                <Col className={styles.borderClass}>\n                  <div className={styles.loanData}>\n                    <div>\n                      <h6>Loan amount</h6>\n                      <h1>N150,000</h1>\n                    </div>\n                  </div>\n                </Col>\n                <Col className={styles.borderClass}>\n                  <div className={styles.loanData}>\n                    <div>\n                      <h6>Monthly Repayment</h6>\n                      <h1>N34,758</h1>\n                    </div>\n                  </div>\n                </Col>\n                <Col>\n                  <div className={styles.loanData}>\n                    <div>\n                      <h6>Tenure</h6>\n                      <h1>3 months</h1>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </div>}\n      </div>\n      <div className={styles.otherProducts}>\n        <Row>\n          <Col sm={12} md={6}>\n            <div className={[styles.product, styles.borderClass].join(' ')}>\n              <div className={styles.productIcon}>\n                <img src={gypsyNote} alt=\"Gypsy Notes\" width=\"25\" />\n              </div>\n              <h3 className={styles.productTitle}>Gypsy Notes</h3>\n              <p className=\"mt-2\">Let your money work for you and enjoy high interest rates on your money. Start a Gypsy Fixed Income Note today and earn more.</p>\n              <button className={[styles.productBtn, \"mt-3\"].join(' ')}>\n                Be the first to know when we launch\n              </button>\n            </div>\n          </Col>\n          <Col sm={12} md={6}>\n            <div className={[styles.product, styles.border2Class].join(' ')}>\n              <div className={styles.productIcon}>\n                <img src={altInvestment} alt=\"Alternative Investment\" width=\"40\" />\n              </div>\n              <h3 className={styles.productTitle}>Alternative Investment</h3>\n              <p className=\"mt-2\">Are you an investor who seek greater rewards? Our Alternative Investment service is here to help you earn more.</p>\n              <button className={[styles.productBtn, \"mt-3\"].join(' ')}>\n                Be the first to know when we launch\n              </button>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </Dashboard>\n  )\n}\n\n\nexport default Overview;","/home/tga/Desktop/gypsy-capital/src/components/InputField/InputField.js",[],"/home/tga/Desktop/gypsy-capital/src/components/Dashboard/Dashboard.jsx",[],"/home/tga/Desktop/gypsy-capital/src/App.js",["128"],"/home/tga/Desktop/gypsy-capital/src/pages/pages.js",[],"/home/tga/Desktop/gypsy-capital/src/pages/ConsumerCredit/ConsumerCredit.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/FileUploadButton/FileUploadButton.js",[],"/home/tga/Desktop/gypsy-capital/src/components/ProgressBar/ProgressBar.jsx",[],"/home/tga/Desktop/gypsy-capital/src/api/gypsy-web.js",[],"/home/tga/Desktop/gypsy-capital/src/pages/OtpVerify/OtpVerify.jsx",[],"/home/tga/Desktop/gypsy-capital/src/index.js",[],"/home/tga/Desktop/gypsy-capital/src/pages/Profile/Profile.jsx",["129","130"],"import React, { useMemo, useRef, useState } from 'react';\nimport styles from './Profile.module.scss';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport pageUrl from '../../routes/pageUrl';\nimport { FiLayers } from 'react-icons/fi';\nimport { BiCreditCard } from 'react-icons/bi';\nimport { AiOutlineUser } from 'react-icons/ai';\nimport { GiTakeMyMoney } from 'react-icons/gi';\nimport { FaCloudUploadAlt, FaCheckCircle } from 'react-icons/fa';\nimport ProgressBar from '../../components/ProgressBar/ProgressBar';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport { Row, Col } from 'react-bootstrap';\nimport FileUploadButton from '../../components/FileUploadButton/FileUploadButton';\n\n\nconst Profile = ({ location }) => {\n\n  const stages = {\n    0: \"bvnVerification\",\n    1: \"personalInformation\",\n    2: \"identity\",\n    3: \"complete\"\n  }\n  const [setupStage, setSetupStage] = useState(0);\n  const [setupComplete, setSetupComplete] = useState(false);\n\n  const sidebarRoutes = [\n    {\n      label: \"Dashboard\",\n      link: pageUrl.DASHBOARD_HOMEPAGE,\n      icon: FiLayers\n    },\n    {\n      label: \"Consumer Credit\",\n      link: pageUrl.CONSUMER_CREDIT_PAGE,\n      icon: GiTakeMyMoney\n    },\n    {\n      label: \"Credit Report\",\n      link: pageUrl.CREDIT_REPORT_PAGE,\n      icon: BiCreditCard\n    },\n    {\n      label: \"Profile\",\n      link: pageUrl.PROFILE_PAGE,\n      icon: AiOutlineUser\n    },\n  ]\n\n\n\n  const handleSubmit = () => {\n    setSetupStage(setupStage + 1);\n  }\n\n  const BvnForm = () => {\n    const [userBvn, setUserBvn] = useState(''); \n\n    return (\n      <div className={styles.bvnFormBox}>\n        <p>Your BVN helps us verify your identity in line with CBN’s Know-Your-Customer (KYC) requirements.</p>\n        <InputField \n          label=\"What's your BVN?\" \n          nameAttr=\"bvn\"\n          type=\"text\"\n          value={userBvn}\n          changed={(val) => setUserBvn(val)}  \n        />\n        <Button className=\"mt-4\" fullWidth clicked={handleSubmit} bgColor=\"#741763\" size=\"lg\" color=\"#EBEBEB\">\n          Verify\n        </Button>\n        <p className={styles.extraTip}>To get your BVN, <span>Dial *565*0#</span></p>\n      </div>\n    )\n  }\n\n  const PersonalInfoForm = () => {\n\n    const [biodata, setBiodata] = useState({\n      fullName: '',\n      dateOfBirth: '',\n      bvnPhoneNo: '',\n      email: '',\n      phoneNo: '',\n      altPhone: '',\n      gender: ''\n    });\n    const [residentialInfo, setResidentialInfo] = useState({\n      street: '',\n      city: '',\n      state: ''\n    });\n    const [kinInfo, setKinInfo] = useState({\n      fullName: '',\n      relationship: '',\n      emailAddress: '',\n      phoneNo: '',\n      address: ''\n    });\n    const [bankInfo, setBankInfo] = useState({\n      bankName: '',\n      accountType: '',\n      accountNumber: '',\n      accountName: ''\n    });\n\n    return (\n      <div className={styles.personalInfo}>\n        <div className={styles.biodata}>\n          <h3>Biodata Information</h3>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Full name\"\n                type=\"text\"\n                nameAttr=\"fullname\"\n                value={biodata.fullName}\n                changed={(val) => setBiodata({...biodata, fullName: val})}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Date of Birth\"\n                type=\"text\"\n                nameAttr=\"dob\"\n                value={biodata.dateOfBirth}\n                changed={(val) => setBiodata({...biodata, dateOfBirth: val})}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"BVN-linked Phone Number\"\n                type=\"text\"\n                nameAttr=\"bvnPhoneNo\"\n                value={biodata.bvnPhoneNo}\n                changed={(val) => setBiodata({...biodata, bvnPhoneNo: val})}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Email\"\n                type=\"email\"\n                nameAttr=\"email\"\n                value={biodata.email}\n                changed={(val) => setBiodata({...biodata, email: val})}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Phone Number\"\n                type=\"text\"\n                nameAttr=\"PhoneNo\"\n                value={biodata.phoneNo}\n                changed={(val) => setBiodata({...biodata, phoneNo: val})}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Alternative Phone Number\"\n                type=\"text\"\n                nameAttr=\"altPhoneNo\"\n                value={biodata.altPhone}\n                changed={(val) => setBiodata({ ...biodata, altPhone: val})}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <InputField \n                label=\"Gender\"\n                type=\"select\"\n                options={['Female', 'Male', 'Other']}\n                nameAttr=\"gender\"\n                value={biodata.gender}\n                changed={(val) => setBiodata({...biodata, gender: val})}\n              />\n            </Col>\n          </Row>\n        </div>\n        <div className={styles.residentialInfo}>\n          <h3>Residential Address</h3>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Street\"\n                type=\"text\"\n                nameAttr=\"residentStreet\"\n                value={residentialInfo.street}\n                changed={(val) => setResidentialInfo({...residentialInfo, street: val})}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <InputField \n                label=\"City\"\n                type=\"text\"\n                nameAttr=\"city\"\n                value={residentialInfo.city}\n                changed={(val) => setResidentialInfo({...residentialInfo, city: val})}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"State\"\n                type=\"select\"\n                options={['Oyo', 'Lagos']}\n                nameAttr=\"state\"\n                value={residentialInfo.state}\n                changed={(val) => setResidentialInfo({...residentialInfo, state: val})}\n              />\n            </Col>\n          </Row>\n        </div>\n        <div className={styles.kinInfo}>\n          <h3>Next of Kin Information</h3>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Full name\"\n                type=\"text\"\n                nameAttr=\"kinFullname\"\n                value={kinInfo.fullName}\n                changed={(val) => setKinInfo({...kinInfo, fullName: val})}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Relationship\"\n                type=\"text\"\n                nameAttr=\"kinRelationship\"\n                value={kinInfo.relationship}\n                changed={(val) => setKinInfo({...kinInfo, relationship: val})}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Email Address\"\n                type=\"email\"\n                nameAttr=\"kinEmail\"\n                value={kinInfo.emailAddress}\n                changed={(val) => setKinInfo({...kinInfo, emailAddress: val})}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Phone Number\"\n                type=\"text\"\n                nameAttr=\"kinPhone\"\n                value={kinInfo.phoneNo}\n                changed={(val) => setKinInfo({...kinInfo, phoneNo: val})}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <InputField \n                label=\"Residential Address\"\n                type=\"text\"\n                nameAttr=\"kinAddress\"\n                placeholder=\"Street address to the nearest bus stop\"\n                value={kinInfo.address}\n                changed={(val) => setKinInfo({...kinInfo, address: val})}\n              />\n            </Col>\n          </Row>\n        </div>\n        <div className={styles.bankInfo}>\n          <h3>Bank Information</h3>\n          <p>Please provide a bank account where we can send your investment proceeds or loan requests to.</p>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"text\"\n                label=\"Bank\"\n                nameAttr=\"bank\"\n                value={bankInfo.bankName}\n                changed={(val) => setBankInfo({...bankInfo, bankName: val})}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Account Type\"\n                type=\"select\"\n                options={[\"Savings\", \"Current\"]}\n                nameAttr=\"acountType\"\n                value={bankInfo.accountType}\n                changed={(val) => setBankInfo({...bankInfo, accountType: val})}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"text\"\n                label=\"Account Number\"\n                nameAttr=\"accountNo\"\n                value={bankInfo.accountNumber}\n                changed={(val) => setBankInfo({...bankInfo, accountNumber: val})}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Account Name\"\n                type=\"text\"\n                nameAttr=\"accountName\"\n                value={bankInfo.accountName}\n                changed={(val) => setBankInfo({ ...bankInfo, accountName: val })}\n              />\n            </Col>\n          </Row>\n        </div>\n        <Button className=\"mt-4\" fullWidth clicked={handleSubmit} bgColor=\"#741763\" size=\"lg\" color=\"#EBEBEB\">\n          Save & Continue\n        </Button>\n      </div>\n    )\n  }\n\n  const IdentityForm = () => {\n\n    const idFileRef = useRef();\n    const passportFileRef= useRef();\n\n    const [idType, setIdType] = useState('');\n\n    return (\n      <div className={styles.identityForm}>\n        <div className={styles.identification}>\n          <h3>Identification</h3>\n          <p className={styles.validID}>Upload a valid government issued Identification</p>\n          <InputField \n            type=\"select\"\n            options={['International Passport', \"Driver's License\", 'Voters Card', 'National Identity Card']}\n            nameAttr=\"identityType\"\n            value={idType}\n            changed={(val) => setIdType(val)}\n          />\n          <FileUploadButton \n            label=\"Choose File\" \n            icon={<FaCloudUploadAlt className=\"ml-3\" size=\"1.1em\" />}\n            id=\"id-upload\" \n            className=\"mt-3\"\n            fileRef={idFileRef}\n          />\n        </div>\n        <div className={styles.passportVerify}>\n          <h3>Upload passport photograph</h3>\n          <p className={styles.passportImg}>Please upload a clear and resent passport photograph.</p>\n          <FileUploadButton \n            label=\"Choose File\" \n            icon={<FaCloudUploadAlt className=\"ml-3\" size=\"1.1em\" />}\n            id=\"passport-upload\"  \n            fileRef={passportFileRef}\n          />\n        </div>\n        <Button className=\"mt-4\" fullWidth clicked={handleSubmit} bgColor=\"#741763\" size=\"lg\" color=\"#EBEBEB\">\n          Save & Continue\n        </Button>\n        <p className={styles.extraTip}>Maximum file size accepted: <span>2mb</span></p>\n        <p className={styles.extraTip}>Accepted formats: <span>JPG & PNG</span></p>\n      </div>\n    )\n  }\n\n  const CompleteStage = () => {\n    return (\n      <div className={styles.stageComplete}>\n        <FaCheckCircle size=\"4em\" color=\"#741763\" />\n        <h2>Congratulations!</h2>\n        <p>Account setup completed.</p>\n        <p>Enjoy our amazing loan offer</p>\n      </div>\n    )\n  }\n\n  const ProfileView = () => {\n\n    const [visibleSection, setVisibleSection] = useState('personalInfo');\n\n    const goToProfileSection = (section) => {\n      console.log('works');\n      setVisibleSection(section);\n    }\n\n    return (\n      <div className={styles.profileBox}>\n        <div className={styles.header}>\n          <Row>\n            <Col \n              onClick={() => goToProfileSection('personalInfo')} \n              className={[styles.borderStyle, styles.tabCol].join(' ')}\n            >\n              <p \n                className={[styles.tabMenu, visibleSection === \"personalInfo\" && styles.activeTab1].join(' ')}\n              >\n                Personal Information\n              </p>\n            </Col>\n            <Col \n              onClick={() => goToProfileSection('security')} \n              className={[styles.borderStyle, styles.tabCol].join(' ')}\n            >\n              <p\n                className={[styles.tabMenu, visibleSection === \"security\" && styles.activeTab2].join(' ')}\n              >\n                Security\n              </p>\n            </Col>\n            <Col>\n              <p>Payment</p>\n            </Col>\n          </Row>\n        </div>\n        <div className={styles.body}>\n          {visibleSection === \"personalInfo\" && <div>\n            <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"First Name\"\n                type=\"text\"\n                nameAttr=\"firstName\"\n              />\n            </Col> \n            <Col>\n              <InputField \n                label=\"Last Name\"\n                type=\"text\"\n                nameAttr=\"lastName\"\n              />\n            </Col> \n            </Row> \n            <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Email\"\n                type=\"email\"\n                nameAttr=\"email\"\n              />\n            </Col> \n            <Col>\n              <InputField \n                label=\"Phone Number\"\n                type=\"text\"\n                nameAttr=\"phoneNumber\"\n              />\n            </Col> \n            </Row> \n            <Row>\n            <Col>\n              <InputField \n                label=\"BVN\"\n                type=\"text\"\n                nameAttr=\"bvn\"\n              />\n            </Col> \n            <Col>\n              <InputField \n                label=\"Residential Address\"\n                type=\"text\"\n                nameAttr=\"address\"\n              />\n            </Col> \n            </Row> \n            <Button className=\"mt-5\" fullWidth clicked={handleSubmit} bgColor=\"#741763\" size=\"lg\" color=\"#EBEBEB\">\n              Edit Info\n            </Button>\n          </div>}\n          { visibleSection === \"security\" &&\n            <div className={styles.security}>\n              <h2>CHANGE PASSWORD</h2>\n              <Row className=\"mb-4\">\n                <Col>\n                  <InputField \n                    type=\"password\"\n                    label=\"Current Password\"\n                    nameAttr=\"currPassword\"\n                  />\n                </Col>\n              </Row>\n              <Row className=\"mb-4\">\n                <Col>\n                  <InputField \n                    type=\"password\"\n                    label=\"Current Password\"\n                    nameAttr=\"currPassword\"\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <InputField \n                    type=\"password\"\n                    label=\"Current Password\"\n                    nameAttr=\"currPassword\"\n                  />\n                </Col>\n              </Row>\n            </div>\n          }\n          { visibleSection === \"payment\" && \n            <div>\n\n            </div>\n          }\n        </div>\n      </div>\n    )\n  }\n\n  const resolveStageView = useMemo(() => {\n    if(setupStage === 0) {\n      return <BvnForm />\n    } else if (setupStage === 1) {\n      return <PersonalInfoForm />\n    } else if(setupStage === 2) {\n      return <IdentityForm />\n    } else if(setupStage === 3) {\n      return <CompleteStage />\n    }\n  }, [setupStage])\n\n  return(\n    <Dashboard sidebarRoutes={sidebarRoutes} location={location}>\n      <div className={styles.container}>\n        { !setupComplete && <div>\n          <h1>Account Setup</h1>\n          <p className={styles.leadText}>Fill the field to complete your profile</p>\n          <ProgressBar stage={setupStage} className={styles.profileProgress} />\n          {resolveStageView}\n        </div>}\n        { setupComplete &&\n          <div>\n            <h2>Profile</h2>\n            <ProfileView />\n          </div> \n        }\n      </div>\n    </Dashboard>\n  );\n}\n\n\nexport default Profile;","/home/tga/Desktop/gypsy-capital/src/components/Button/Button.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/NavBar/NavBar.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/HomePage/HomePage.jsx",[],"/home/tga/Desktop/gypsy-capital/src/context/AuthContext.js",[],"/home/tga/Desktop/gypsy-capital/src/components/FaqSection/FaqSection.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/Footer/Footer.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/Products/Products.jsx",["131","132"],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":13,"column":30,"nodeType":"139","messageId":"140","endLine":13,"endColumn":34},{"ruleId":"133","replacedBy":"141"},{"ruleId":"135","replacedBy":"142"},{"ruleId":"133","replacedBy":"143"},{"ruleId":"135","replacedBy":"144"},{"ruleId":"137","severity":1,"message":"145","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":14},{"ruleId":"133","replacedBy":"146"},{"ruleId":"135","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":58,"column":33,"nodeType":"150","messageId":"151","endLine":58,"endColumn":34,"suggestions":"152"},{"ruleId":"148","severity":1,"message":"149","line":58,"column":58,"nodeType":"150","messageId":"151","endLine":58,"endColumn":59,"suggestions":"153"},{"ruleId":"137","severity":1,"message":"154","line":19,"column":22,"nodeType":"139","messageId":"140","endLine":19,"endColumn":35},{"ruleId":"137","severity":1,"message":"155","line":2,"column":18,"nodeType":"139","messageId":"140","endLine":2,"endColumn":24},{"ruleId":"137","severity":1,"message":"156","line":19,"column":9,"nodeType":"139","messageId":"140","endLine":19,"endColumn":15},{"ruleId":"137","severity":1,"message":"157","line":26,"column":25,"nodeType":"139","messageId":"140","endLine":26,"endColumn":41},{"ruleId":"137","severity":1,"message":"158","line":21,"column":10,"nodeType":"139","messageId":"140","endLine":21,"endColumn":19},{"ruleId":"137","severity":1,"message":"159","line":21,"column":21,"nodeType":"139","messageId":"140","endLine":21,"endColumn":33},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar",["160"],["161"],["160"],["161"],"'styles' is defined but never used.",["160"],["161"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["162","163"],["164","165"],"'setLoanStatus' is assigned a value but never used.","'Switch' is defined but never used.","'stages' is assigned a value but never used.","'setSetupComplete' is assigned a value but never used.","'menuState' is assigned a value but never used.","'setMenuState' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"166","fix":"167","desc":"168"},{"messageId":"169","fix":"170","desc":"171"},{"messageId":"166","fix":"172","desc":"168"},{"messageId":"169","fix":"173","desc":"171"},"removeEscape",{"range":"174","text":"175"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"176","text":"177"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"178","text":"175"},{"range":"179","text":"177"},[1442,1443],"",[1442,1442],"\\",[1467,1468],[1467,1467]]