[{"/home/tga/Desktop/gypsy-capital/src/index.js":"1","/home/tga/Desktop/gypsy-capital/src/pages/pages.js":"2","/home/tga/Desktop/gypsy-capital/src/context/AuthContext.js":"3","/home/tga/Desktop/gypsy-capital/src/context/BankCotext.js":"4","/home/tga/Desktop/gypsy-capital/src/routes/pageUrl.js":"5","/home/tga/Desktop/gypsy-capital/src/context/ApprovalContext.js":"6","/home/tga/Desktop/gypsy-capital/src/routes/protectedroute/ProtectedRoute.js":"7","/home/tga/Desktop/gypsy-capital/src/context/createPersistDataContext.js":"8","/home/tga/Desktop/gypsy-capital/src/pages/SignUp/SignUp.jsx":"9","/home/tga/Desktop/gypsy-capital/src/pages/OtpVerify/OtpVerify.jsx":"10","/home/tga/Desktop/gypsy-capital/src/pages/LoanCalculator/LoanCalculator.jsx":"11","/home/tga/Desktop/gypsy-capital/src/pages/Faqs/Faqs.jsx":"12","/home/tga/Desktop/gypsy-capital/src/pages/Support/Support.jsx":"13","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorClients/ProcessorClients.jsx":"14","/home/tga/Desktop/gypsy-capital/src/pages/ContactPage/ContactPage.jsx":"15","/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerClients/AuthorizerClients.jsx":"16","/home/tga/Desktop/gypsy-capital/src/pages/LoanList/LoanList.jsx":"17","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorLoanDetails/ProcessorLoanDetails.jsx":"18","/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerLoans/AuthorizerLoans.jsx":"19","/home/tga/Desktop/gypsy-capital/src/routes/sidebarRoutes.js":"20","/home/tga/Desktop/gypsy-capital/src/hooks/useLoanDetails.js":"21","/home/tga/Desktop/gypsy-capital/src/components/Dashboard/Dashboard.jsx":"22","/home/tga/Desktop/gypsy-capital/src/components/Loader/Loader.jsx":"23","/home/tga/Desktop/gypsy-capital/src/components/StatBox/StatBox.jsx":"24","/home/tga/Desktop/gypsy-capital/src/components/ProcessOffer/ProcessOffer.jsx":"25","/home/tga/Desktop/gypsy-capital/src/components/Footer/Footer.jsx":"26","/home/tga/Desktop/gypsy-capital/src/components/FaqSection/FaqSection.jsx":"27","/home/tga/Desktop/gypsy-capital/src/components/LoanCalculatorForm/LoanCalculatorForm.jsx":"28","/home/tga/Desktop/gypsy-capital/src/components/FileUploadButton/FileUploadButton.js":"29","/home/tga/Desktop/gypsy-capital/src/components/BvnForm/BvnForm.jsx":"30","/home/tga/Desktop/gypsy-capital/src/components/MonoWidget/MonoWidget.jsx":"31","/home/tga/Desktop/gypsy-capital/src/context/LoanContext.js":"32","/home/tga/Desktop/gypsy-capital/src/context/createDataContext.js":"33","/home/tga/Desktop/gypsy-capital/src/pages/CreditReport/CreditReport.jsx":"34","/home/tga/Desktop/gypsy-capital/src/pages/Overview/Overview.jsx":"35","/home/tga/Desktop/gypsy-capital/src/pages/ClientListPage/ClientListPage.jsx":"36","/home/tga/Desktop/gypsy-capital/src/pages/AgentOverview/AgentOverview.jsx":"37","/home/tga/Desktop/gypsy-capital/src/pages/AboutUs/AboutUs.jsx":"38","/home/tga/Desktop/gypsy-capital/src/pages/ResetSuccess/ResetSuccess.jsx":"39","/home/tga/Desktop/gypsy-capital/src/pages/ForgotPassword/ForgotPassword.jsx":"40","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorClientDetails/ProcessorClientDetails.jsx":"41","/home/tga/Desktop/gypsy-capital/src/pages/ResetPassword/ResetPassword.jsx":"42","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorLoans/ProcessorLoans.jsx":"43","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorDashboard/ProcessorDashboard.jsx":"44","/home/tga/Desktop/gypsy-capital/src/hooks/useNavigateAfterAuth.js":"45","/home/tga/Desktop/gypsy-capital/src/components/IdentityForm/IdentityForm.jsx":"46","/home/tga/Desktop/gypsy-capital/src/components/NavTabs/NavTabs.jsx":"47","/home/tga/Desktop/gypsy-capital/src/components/ClientList/ClientList.jsx":"48","/home/tga/Desktop/gypsy-capital/src/components/LoanList/LoanList.jsx":"49","/home/tga/Desktop/gypsy-capital/src/components/OfferLetter/OfferLetter.jsx":"50","/home/tga/Desktop/gypsy-capital/src/components/LoanContactForm/LoanContactForm.jsx":"51","/home/tga/Desktop/gypsy-capital/src/components/AccountSetupModal/AccountSetupModal.jsx":"52","/home/tga/Desktop/gypsy-capital/src/context/UserContext.js":"53","/home/tga/Desktop/gypsy-capital/src/api/gypsy-web.js":"54","/home/tga/Desktop/gypsy-capital/src/pages/SignIn/SignIn.jsx":"55","/home/tga/Desktop/gypsy-capital/src/pages/HomePage/HomePage.jsx":"56","/home/tga/Desktop/gypsy-capital/src/pages/Products/Products.jsx":"57","/home/tga/Desktop/gypsy-capital/src/utils/nigeriaStates.js":"58","/home/tga/Desktop/gypsy-capital/src/components/PersonalForm/PersonalForm.jsx":"59","/home/tga/Desktop/gypsy-capital/src/components/BankInfoForm/BankInfoForm.jsx":"60","/home/tga/Desktop/gypsy-capital/src/components/EmployerInfoForm/EmployerInfoForm.jsx":"61","/home/tga/Desktop/gypsy-capital/src/utils/mappedLgas.js":"62","/home/tga/Desktop/gypsy-capital/src/components/ModalForm/ModalForm.jsx":"63","/home/tga/Desktop/gypsy-capital/src/context/MonoContext.js":"64","/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerOverview/AuthorizerOverview.jsx":"65","/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerLoanDetails/AuthorizerLoanDetails.jsx":"66","/home/tga/Desktop/gypsy-capital/src/utils/validateInput.js":"67","/home/tga/Desktop/gypsy-capital/src/components/OfferLetter/OfferLetterForm.jsx":"68","/home/tga/Desktop/gypsy-capital/src/hooks/usePagination.js":"69","/home/tga/Desktop/gypsy-capital/src/components/LoanModal/LoanModal.jsx":"70","/home/tga/Desktop/gypsy-capital/src/components/NavBar/NavBar.jsx":"71","/home/tga/Desktop/gypsy-capital/src/components/ProgressBar/ProgressBar.jsx":"72","/home/tga/Desktop/gypsy-capital/src/context/RepaymentContext.js":"73","/home/tga/Desktop/gypsy-capital/src/pages/LoanDetail/LoanDetail.jsx":"74"},{"size":548,"mtime":1615186108001,"results":"75","hashOfConfig":"76"},{"size":2387,"mtime":1615165250184,"results":"77","hashOfConfig":"76"},{"size":8060,"mtime":1615162900026,"results":"78","hashOfConfig":"76"},{"size":1970,"mtime":1615411153492,"results":"79","hashOfConfig":"76"},{"size":2456,"mtime":1615165274533,"results":"80","hashOfConfig":"76"},{"size":2656,"mtime":1615411153492,"results":"81","hashOfConfig":"76"},{"size":601,"mtime":1613641026802,"results":"82","hashOfConfig":"76"},{"size":821,"mtime":1612688150601,"results":"83","hashOfConfig":"76"},{"size":8013,"mtime":1615162061114,"results":"84","hashOfConfig":"76"},{"size":2391,"mtime":1612574568451,"results":"85","hashOfConfig":"76"},{"size":4802,"mtime":1615168879214,"results":"86","hashOfConfig":"76"},{"size":737,"mtime":1613020227334,"results":"87","hashOfConfig":"76"},{"size":473,"mtime":1614546415965,"results":"88","hashOfConfig":"76"},{"size":1079,"mtime":1614757571893,"results":"89","hashOfConfig":"76"},{"size":4838,"mtime":1615138268265,"results":"90","hashOfConfig":"76"},{"size":1072,"mtime":1614757665510,"results":"91","hashOfConfig":"76"},{"size":4424,"mtime":1615230346385,"results":"92","hashOfConfig":"76"},{"size":21232,"mtime":1615476798834,"results":"93","hashOfConfig":"76"},{"size":1045,"mtime":1615363832954,"results":"94","hashOfConfig":"76"},{"size":2677,"mtime":1614724878260,"results":"95","hashOfConfig":"76"},{"size":701,"mtime":1615230346353,"results":"96","hashOfConfig":"76"},{"size":4301,"mtime":1614470843592,"results":"97","hashOfConfig":"76"},{"size":244,"mtime":1614263157725,"results":"98","hashOfConfig":"76"},{"size":359,"mtime":1613662172186,"results":"99","hashOfConfig":"76"},{"size":2095,"mtime":1615286488757,"results":"100","hashOfConfig":"76"},{"size":1152,"mtime":1612102534435,"results":"101","hashOfConfig":"76"},{"size":2175,"mtime":1613020166641,"results":"102","hashOfConfig":"76"},{"size":8352,"mtime":1615190374516,"results":"103","hashOfConfig":"76"},{"size":665,"mtime":1611816481368,"results":"104","hashOfConfig":"76"},{"size":1331,"mtime":1612592363525,"results":"105","hashOfConfig":"76"},{"size":1633,"mtime":1615286487857,"results":"106","hashOfConfig":"76"},{"size":7730,"mtime":1614756252067,"results":"107","hashOfConfig":"76"},{"size":533,"mtime":1612421501467,"results":"108","hashOfConfig":"76"},{"size":498,"mtime":1613049821733,"results":"109","hashOfConfig":"76"},{"size":5197,"mtime":1613938100761,"results":"110","hashOfConfig":"76"},{"size":4660,"mtime":1615230346369,"results":"111","hashOfConfig":"76"},{"size":5044,"mtime":1615450279629,"results":"112","hashOfConfig":"76"},{"size":6604,"mtime":1615131206015,"results":"113","hashOfConfig":"76"},{"size":606,"mtime":1613846570517,"results":"114","hashOfConfig":"76"},{"size":1549,"mtime":1613844663739,"results":"115","hashOfConfig":"76"},{"size":4749,"mtime":1615230346385,"results":"116","hashOfConfig":"76"},{"size":3453,"mtime":1613889706632,"results":"117","hashOfConfig":"76"},{"size":1038,"mtime":1614577544983,"results":"118","hashOfConfig":"76"},{"size":5721,"mtime":1615450279669,"results":"119","hashOfConfig":"76"},{"size":990,"mtime":1614729905905,"results":"120","hashOfConfig":"76"},{"size":2430,"mtime":1613916529415,"results":"121","hashOfConfig":"76"},{"size":504,"mtime":1613386895718,"results":"122","hashOfConfig":"76"},{"size":3204,"mtime":1615363832802,"results":"123","hashOfConfig":"76"},{"size":3592,"mtime":1614577812286,"results":"124","hashOfConfig":"76"},{"size":10657,"mtime":1614664395859,"results":"125","hashOfConfig":"76"},{"size":6013,"mtime":1614449713718,"results":"126","hashOfConfig":"76"},{"size":21688,"mtime":1614430258872,"results":"127","hashOfConfig":"76"},{"size":8357,"mtime":1615172320352,"results":"128","hashOfConfig":"76"},{"size":194,"mtime":1615450256428,"results":"129","hashOfConfig":"76"},{"size":3662,"mtime":1614846996299,"results":"130","hashOfConfig":"76"},{"size":13639,"mtime":1614861795770,"results":"131","hashOfConfig":"76"},{"size":12257,"mtime":1615039376564,"results":"132","hashOfConfig":"76"},{"size":6681,"mtime":1615332137598,"results":"133","hashOfConfig":"76"},{"size":14395,"mtime":1613915891204,"results":"134","hashOfConfig":"76"},{"size":5659,"mtime":1613933105810,"results":"135","hashOfConfig":"76"},{"size":9416,"mtime":1614451042975,"results":"136","hashOfConfig":"76"},{"size":14356,"mtime":1614449747162,"results":"137","hashOfConfig":"76"},{"size":11735,"mtime":1614471117577,"results":"138","hashOfConfig":"76"},{"size":3808,"mtime":1615411153492,"results":"139","hashOfConfig":"76"},{"size":5796,"mtime":1615450279629,"results":"140","hashOfConfig":"76"},{"size":2764,"mtime":1615411153504,"results":"141","hashOfConfig":"76"},{"size":1153,"mtime":1613889253169,"results":"142","hashOfConfig":"76"},{"size":10409,"mtime":1615286488453,"results":"143","hashOfConfig":"76"},{"size":1386,"mtime":1615363832846,"results":"144","hashOfConfig":"76"},{"size":4849,"mtime":1614451456706,"results":"145","hashOfConfig":"76"},{"size":2622,"mtime":1615037934979,"results":"146","hashOfConfig":"76"},{"size":1565,"mtime":1611429643367,"results":"147","hashOfConfig":"76"},{"size":1975,"mtime":1615476749873,"results":"148","hashOfConfig":"76"},{"size":9994,"mtime":1615476982317,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"t9s37o",{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"152"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"152"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"152"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"152"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"152"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"152"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"152"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"169"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"157"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"152"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"152"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"169"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"152"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"152"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"152"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"152"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"152"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"152"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/tga/Desktop/gypsy-capital/src/index.js",[],["321","322"],"/home/tga/Desktop/gypsy-capital/src/pages/pages.js",[],"/home/tga/Desktop/gypsy-capital/src/context/AuthContext.js",[],["323","324"],"/home/tga/Desktop/gypsy-capital/src/context/BankCotext.js",[],"/home/tga/Desktop/gypsy-capital/src/routes/pageUrl.js",[],"/home/tga/Desktop/gypsy-capital/src/context/ApprovalContext.js",[],"/home/tga/Desktop/gypsy-capital/src/routes/protectedroute/ProtectedRoute.js",["325"],"/home/tga/Desktop/gypsy-capital/src/context/createPersistDataContext.js",["326"],"import React, {createContext, useReducer, useEffect } from 'react';\n\n\nexport default (reducer, actions, initialState, persist, saveData) => {\n  const Context = createContext();\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState, () => {\n      if(persist) {\n        const localData = localStorage.getItem('gypsy');\n        return localData ? JSON.parse(localData) : {}\n      }\n    });\n\n    useEffect(() => {\n      if(persist) {\n        saveData(state);\n        // console.log(state);\n      }\n    }, [state])\n\n    const boundActions = {}\n\n    for(let key in actions) {\n      boundActions[key] = actions[key](dispatch);\n    }\n\n    return (\n      <Context.Provider value={{ state, ...boundActions }}>{children}</Context.Provider>\n    )\n  }\n\n  return { Context, Provider }\n}",["327","328"],"/home/tga/Desktop/gypsy-capital/src/pages/SignUp/SignUp.jsx",["329","330","331"],"import React, { useContext, useEffect, useState } from 'react';\nimport Logo from '../../assets/logo.png';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport styles from './SignUp.module.scss';\nimport { Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport pageUrl from '../../routes/pageUrl';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\nconst SignUp = () => {\n\n  const { \n    state: { loading, error }, \n    registerUser, \n    getActiveUser, \n    clearErrors \n  } = useContext(AuthContext);\n\n  const [signUpValues, setSignUpvalues] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    mobileNumber: '',\n    password: '',\n    confirmPassword: '',\n    referralChoice: ''\n  });\n\n  const [validationErrors, setValidationErrors] = useState({\n    firstName: null,\n    lastName: null,\n    email: null,\n    mobileNumber: null,\n    password: null,\n    confirmPassword: null,\n    referralChoice: null\n  })\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearErrors();\n    }\n  }, [error])\n\n  const referralOptions = [\n    'Search Engine', \n    'Google Ads', \n    'Email', \n    'Radio', \n    'TV', \n    'Newspaper', \n    'Word of mouth',\n    'Facebook',\n    'Instagram',\n    'Other'\n  ]\n\n  const validateInput = () => {\n\n    const validMail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    let validPhoneNumber = /^[0]\\d{10}$/;\n\n    const errorsInit = {};\n    let fields = { ...signUpValues }\n\n    for(const key in fields) {\n      if(!fields[key]) {\n        errorsInit[key] = \"This field is required\";\n      } \n      if(fields.email && !fields.email.match(validMail)) {\n        errorsInit.email = \"Please enter a valid email address\"\n      } \n      if(fields.mobileNumber && !fields.mobileNumber.match(validPhoneNumber)) {\n        errorsInit.mobileNumber = \"Please enter a valid phone number\"\n      } \n      if(fields.password && fields.password.length < 8) {\n        errorsInit.password = \"Password must be at least 8 characters\";\n      }\n      if(fields.confirmPassword && fields.confirmPassword !== fields.password) {\n        errorsInit.confirmPassword = \"Your password does not match\"\n      }\n    }\n\n    setValidationErrors(errorsInit);\n\n    if(Object.entries(errorsInit).length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n\n  }\n\n  const handleSubmit = () => {\n    const validated = validateInput();\n    const signUpData = {\n      email: signUpValues.email,\n      firstName: signUpValues.firstName,\n      lastName: signUpValues.lastName,\n      phoneNumber: signUpValues.mobileNumber.replace('0', '234'),\n      password: signUpValues.password,\n      hearAboutUs: signUpValues.referralChoice,\n    }\n    console.log(signUpData);\n    if(validated) {\n      registerUser(signUpData, getActiveUser);\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <Link to={pageUrl.HOMEPAGE}><img src={Logo} alt=\"Gypsy Logo\" /></Link>\n      <h1>Create your account</h1>\n      <p className={styles.subtitle}>Hey there, let's setup your Gypsy Capital account</p>\n      <div className={styles.registerBox}>\n        <ToastContainer position=\"top-center\" />\n        <Row>\n          <Col sm={12} md={6} className=\"mb-4 mb-md-0\">\n            <InputField type=\"text\" \n              nameAttr=\"firstName\" \n              label=\"First Name\" \n              value={signUpValues.firstName} \n              changed={(val) => {\n                setValidationErrors({ ...validationErrors, firstName: null })\n                setSignUpvalues({...signUpValues, firstName: val})\n              }}\n              error={validationErrors.firstName && validationErrors.firstName}\n            />\n          </Col>\n          <Col sm={12} md={6} className=\"mb-4 mb-md-0\">\n            <InputField type=\"text\" \n              nameAttr=\"lastName\" \n              label=\"Last Name\" \n              value={signUpValues.lastName}\n              changed={(val) => {\n                setValidationErrors({ ...validationErrors, lastName: null })\n                setSignUpvalues({...signUpValues, lastName: val})\n              }}\n              error={validationErrors.lastName && validationErrors.lastName}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mt-0 mt-md-4\">\n          <Col sm={12} md={6} className=\"mb-4 mb-md-0\">\n            <InputField type=\"email\" \n              nameAttr=\"email\" \n              label=\"Email\" \n              value={signUpValues.email}\n              changed={(val) => {\n                setValidationErrors({ ...validationErrors, email: null })\n                setSignUpvalues({...signUpValues, email: val})\n              }}\n              error={validationErrors.email && validationErrors.email}\n            />\n          </Col>\n          <Col sm={12} md={6} className=\"mb-4 mb-md-0\">\n            <InputField type=\"phone\" \n              nameAttr=\"mobileNo\" \n              label=\"Mobile Number\" \n              value={signUpValues.mobileNumber}\n              changed={(val) => {\n                setValidationErrors({...validationErrors, mobileNumber: null})\n                setSignUpvalues({...signUpValues, mobileNumber: val})\n              }}\n              error={validationErrors.mobileNumber && validationErrors.mobileNumber}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mt-0 mt-md-4\">\n          <Col sm={12} md={6} className=\"mb-4 mb-md-0\">\n            <InputField type=\"password\" \n              nameAttr=\"password\" \n              label=\"Password\" \n              value={signUpValues.password}\n              changed={(val) => {\n                setValidationErrors({...validationErrors, password: null})\n                setSignUpvalues({...signUpValues, password: val})\n              }}\n              error={validationErrors.password && validationErrors.password}\n            />\n          </Col>\n          <Col sm={12} md={6} className=\"mb-4 mb-md-0\">\n            <InputField type=\"password\" \n              nameAttr=\"confirmPassword\" \n              label=\"Confirm Password\" \n              value={signUpValues.confirmPassword}\n              changed={(val) => {\n                setValidationErrors({...validationErrors, confirmPassword: null})\n                setSignUpvalues({...signUpValues, confirmPassword: val})\n              }}\n              error={validationErrors.confirmPassword && validationErrors.confirmPassword}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mt-0 mt-md-4\">\n          <Col className=\"mb-4 mb-md-0\">\n            <InputField type=\"select\" \n              label=\"How did you hear about us?\" \n              options={referralOptions} \n              nameAttr=\"publicity\"\n              changed={(val) => {\n                setValidationErrors({...validationErrors, referralChoice: null})\n                setSignUpvalues({...signUpValues, referralChoice: val})\n              }}\n              error={validationErrors.referralChoice && validationErrors.referralChoice}\n            />\n          </Col>\n        </Row>\n        <Button \n          className={ loading ? [styles.loadingBtn, \"mt-5\"].join(' ') : \"mt-5\" } \n          fullWidth \n          clicked={handleSubmit} \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n          disabled={loading}\n          loading={loading}\n        >\n          Sign Up\n        </Button>\n        <p className={[styles.authLink, 'mt-3'].join(' ')}>\n          Already have an account? <Link to={pageUrl.SIGNIN_PAGE}>Log in</Link>\n        </p>\n        <p className={styles.legalLink}>\n          By continuing, you agree to our <Link to={pageUrl.TERMS_CONDITIONS_PAGE}>Terms and Conditions</Link> of service and <Link to={pageUrl.PRIVACY_POLICY_PAGE}>Privacy Policy.</Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n\n\nexport default SignUp;","/home/tga/Desktop/gypsy-capital/src/pages/OtpVerify/OtpVerify.jsx",["332"],"/home/tga/Desktop/gypsy-capital/src/pages/LoanCalculator/LoanCalculator.jsx",["333"],"import React, { useEffect, useState } from 'react';\nimport styles from './LoanCalculator.module.scss';\nimport NavBar from '../../components/NavBar/NavBar';\nimport InputField from '../../components/InputField/InputField';\nimport { Row, Col } from 'react-bootstrap';\nimport Button from '../../components/Button/Button';\nimport { useLocation, useRouteMatch, useHistory } from 'react-router-dom';\n\n\nconst LoanCalculator = () => {\n\n  const [loanData, setLoanData] = useState({\n    proposedAmount: '',\n    proposedDuration: '',\n    monthlyIncome: '',\n    employmentStatus: '',\n    proposedMonthyRepayment: '',\n  })\n\n  const [inputErrors, setInputError] = useState({\n    proposedAmount: null,\n    proposedDuration: null,\n    monthlyIncome: null,\n    employmentStatus: null,\n    proposedMonthyRepayment: null\n  })\n\n  const location = useLocation();\n  const history = useHistory();\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    if(location.state) {\n      setLoanData({ ...loanData, proposedAmount: location.state.loanAmount });\n    }\n  },[location])\n\n  return (\n    <>\n    <NavBar location={url} history={history} />\n    <div className={styles.mainSection}>\n      <div className={styles.container}>\n        <h3>Access Quick Loans of Up to ₦500,000</h3>\n        <p>Use our loan calculator to get started</p>\n        <div className={styles.calculatorBox}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"text\"\n                label=\"How much do you need?\"\n                nameAttr=\"loanAmt\"\n                value={loanData.proposedAmount}\n                changed={(val) => {\n                  setLoanData({ ...loanData, proposedAmount: val});\n                  setInputError({ ...inputErrors, proposedAmount: null })\n                }}\n                error={inputErrors.proposedAmount && inputErrors.proposedAmount}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"select\"\n                label=\"How long before you pay back? (Months)\"\n                nameAttr=\"proposedDuration\"\n                options={[1, 2, 3]}\n                value={loanData.proposedDuration}\n                changed={(val) => {\n                  setLoanData({ ...loanData, proposedDuration: val});\n                  setInputError({ ...inputErrors, proposedDuration: null })\n                }}\n                error={inputErrors.proposedDuration && inputErrors.proposedDuration}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"text\"\n                label=\"What is your monthly income?\"\n                nameAttr=\"monthlyIncome\"\n                value={loanData.monthlyIncome}\n                changed={(val) => {\n                  setLoanData({ ...loanData, monthlyIncome: val});\n                  setInputError({ ...inputErrors, monthlyIncome: null })\n                }}\n                error={inputErrors.monthlyIncome && inputErrors.monthlyIncome}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"select\"\n                label=\"Employment status\"\n                options={['Self-Employed', 'Unemployed', 'Employed']}\n                nameAttr=\"employStatus\"\n                value={loanData.employmentStatus}\n                changed={(val) => {\n                  setLoanData({ ...loanData, employmentStatus: val});\n                  setInputError({ ...inputErrors, employmentStatus: null })\n                }}\n                error={inputErrors.employmentStatus && inputErrors.employmentStatus}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <InputField \n                type=\"text\"\n                label=\"Estimated monthly repayment\"\n                nameAttr=\"proposedRepayment\"\n                value={loanData.proposedMonthyRepayment}\n                changed={(val) => {\n                  setLoanData({ ...loanData, proposedMonthyRepayment: val});\n                  setInputError({ ...inputErrors, proposedMonthyRepayment: null })\n                }}\n                error={inputErrors.proposedMonthyRepayment && inputErrors.proposedMonthyRepayment }\n              />\n            </Col>\n          </Row>\n          <Button\n            className={ \"mt-5\" } \n            fullWidth \n            // clicked={handleSubmit} \n            bgColor=\"#741763\" \n            size=\"lg\" \n            color=\"#EBEBEB\"\n            // disabled={loading}\n            // loading={loading}\n          >\n            Continue\n          </Button>\n        </div>\n      </div>\n    </div>\n    </>\n  )\n}\n\n\nexport default LoanCalculator;","/home/tga/Desktop/gypsy-capital/src/pages/Faqs/Faqs.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/Support/Support.jsx",["334"],"import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport { routes } from '../../routes/sidebarRoutes';\nimport styles from './Support.module.scss';\n\n\nconst Support = () => {\n\n  const location = useLocation();\n  const salesRoutes = routes[1];\n\n  return (\n    <>\n      <Dashboard sidebarRoutes={salesRoutes} location={location}>\n\n      </Dashboard>\n    </>\n  )\n}\n\n\nexport default Support;\n","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorClients/ProcessorClients.jsx",["335","336","337"],"import React, { useEffect, useState, useContext } from 'react';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport styles from './ProcessorClients.module.scss';\nimport { routes } from '../../routes/sidebarRoutes';\nimport { useLocation } from 'react-router-dom';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport ClientList from '../../components/ClientList/ClientList';\nimport Loader from '../../components/Loader/Loader';\n\nconst ProcessorClients = () => {\n\n  const processorRoute = routes[2];\n  const location = useLocation();\n\n  const { state: { user } } = useContext(AuthContext);\n  const { state: { clientsForRole, loading }, getClientListForRole } = useContext(UserContext);\n\n  useEffect(() => {\n    getClientListForRole()\n  }, []);\n\n  return (\n    <Dashboard sidebarRoutes={processorRoute} location={location}>\n      { !loading ? <ClientList clientList={clientsForRole} role={user.role} /> : <Loader /> }\n    </Dashboard>\n  )\n}\n\n\nexport default ProcessorClients;","/home/tga/Desktop/gypsy-capital/src/pages/ContactPage/ContactPage.jsx",["338","339"],"import React, { useState } from 'react';\nimport {Row, Col} from 'react-bootstrap';\nimport styles from './ContactPage.module.scss';\nimport NavBar from '../../components/NavBar/NavBar';\nimport { HiLocationMarker, HiMail, HiPhone } from 'react-icons/hi';\nimport { IoLogoWhatsapp } from 'react-icons/io';\nimport Footer from '../../components/Footer/Footer';\nimport InputField from '../../components/InputField/InputField';\nimport { useRouteMatch, Link } from 'react-router-dom';\n\n\nconst ContactPage = ({ history }) => {\n\n  const { url } = useRouteMatch();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    subject: '',\n    message: ''\n  });\n\n  return (\n    <>\n      <NavBar history={history} location={url} />\n      <div className={styles.heroSection}>\n        <div className={styles.container}>\n          <h2>Contact Us</h2>\n        </div>\n        <div className={styles.bgOverlay}></div>\n      </div>\n      <div className={styles.mapSection}>\n        <div className={styles.container}>\n          <iframe\n              className={styles.map}\n              frameBorder={0}\n              scrolling=\"no\"\n              marginHeight={0}\n              marginWidth={0}\n              src=\"https://maps.google.com/maps?hl=en&amp;q=Landmark%20Towers,%205B%20Water%20Corporation%20Rd,Oniru%20Rd,%20Victoria%20Island%20101241,%20Lagos+(Gypsy%20Capital)&amp;t=&amp;z=15&amp;ie=UTF8&amp;iwloc=B&amp;output=embed\"\n            >\n            </iframe>\n        </div>\n      </div>\n      <div className={styles.contactSection}>\n        <div className={styles.container}>\n          <Row>\n            <Col sm={12} md={7} className=\"mb-5 mb-md-0\">\n              <div className={styles.contactForm}>\n                <h3>Send Us A Message</h3>\n                <Row className=\"mb-0 mb-md-4\">\n                  <Col sm={12} md={6} className=\"mb-3 mb-md-0\">\n                    <InputField \n                      type=\"text\"\n                      placeholder=\"Name\"\n                      nameAttr=\"name\"\n                      value={formData.name}\n                      changed={(val) => setFormData({ ...formData, name: val })}\n                    />\n                  </Col>\n                  <Col sm={12} md={6} className=\"mb-3 mb-md-0\">\n                    <InputField \n                      type=\"email\"\n                      placeholder=\"Email\"\n                      nameAttr=\"email\"\n                      value={formData.email}\n                      changed={(val) => setFormData({ ...formData, email: val })}\n                    />\n                  </Col>\n                </Row>\n                <Row className=\"mb-0 mb-md-4\">\n                  <Col className=\"mb-3 mb-md-0\">\n                    <InputField \n                      type=\"text\"\n                      placeholder=\"Subject\"\n                      nameAttr=\"subject\"\n                      value={formData.subject}\n                      changed={(val) => setFormData({ ...formData, subject: val })}\n                    />\n                  </Col>\n                </Row>\n                <Row className=\"mb-0 mb-md-4\">\n                  <Col className=\"mb-3 mb-md-0\">\n                    <InputField \n                      type=\"textarea\"\n                      placeholder=\"Message\"\n                      nameAttr=\"message\"\n                      value={formData.message}\n                      changed={(val) => setFormData({ ...formData, message: val })}\n                    />\n                  </Col>\n                </Row>\n                <button>\n                  Submit\n                </button>\n              </div>\n            </Col>\n            <Col sm={12} md={5} className=\"mb-5 mb-md-0\">\n              <div className={styles.addressBox}>\n                <h3>Get In Touch</h3>\n                <div className={styles.addressGroup}>\n                  <HiLocationMarker className={[styles.icon, styles.locator].join(' ')} size=\"3.5em\" />\n                  <p>Landmark Towers, 5B Water Corporation Rd,Oniru Rd, Victoria Island 101241, Lagos</p>\n                </div>\n                <div className={styles.addressGroup}>\n                  <HiMail className={[styles.icon, styles.others].join(' ')} size=\"1.8em\" />\n                  <p>hello@gypsycapital.com</p>\n                </div>\n                <div className={styles.addressGroup}>\n                  <HiPhone className={[styles.icon, styles.others].join(' ')} size=\"1.8em\" />\n                  <p>+234 809 9907 888</p>\n                </div>\n                <div className={styles.addressGroup}>\n                  <IoLogoWhatsapp className={[styles.icon, styles.others].join(' ')} size=\"1.8em\" />\n                  <p>+234 809 9907 888</p>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </div>\n      <Footer />\n    </>\n\n  )\n}\n\n\nexport default ContactPage;","/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerClients/AuthorizerClients.jsx",["340","341"],"/home/tga/Desktop/gypsy-capital/src/pages/LoanList/LoanList.jsx",["342"],"import React, { useState, useContext, useEffect } from 'react';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport styles from './LoanList.module.scss';\nimport { useLocation, Link } from 'react-router-dom';\nimport { routes } from '../../routes/sidebarRoutes';\nimport InputField from '../../components/InputField/InputField';\nimport moment from 'moment';\nimport { Table, Pagination } from 'react-bootstrap';\nimport { numberWithCommas } from '../../utils/nigeriaStates';\nimport usePagination from '../../hooks/usePagination';\nimport { Context as LoanContext } from '../../context/LoanContext';\nimport _ from 'lodash';\nimport Loader from '../../components/Loader/Loader';\nimport { TiCancelOutline } from 'react-icons/ti';\n\n\nconst LoanList = () => {\n\n  const { state: { loans, loading }, retrieveClientLoans } = useContext(LoanContext);\n\n  useEffect(() => {\n    retrieveClientLoans();\n  }, []);\n\n  console.log(loans);\n\n  const location = useLocation();\n  const salesRoutes = routes[1];\n  const [filterInput, setFilterInput] = useState('');\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(5);\n\n   const {  \n     currentList,\n     items,\n     goToPrevPage,\n     goToNextPage\n   } = usePagination(currentPage, postsPerPage, loans, setCurrentPage, styles);\n\n  return (\n    <Dashboard sidebarRoutes={salesRoutes} location={location}>\n      <div className={styles.welcomeGroup}>\n        <div>\n          <h2>Loans</h2>\n          <p className={styles.currentDate}>Today is {moment().format('dddd Do[,] MMMM')}.</p>\n        </div>\n      </div>\n      <div className={styles.loansTable}>\n        <div className={styles.filterInput}>\n          <p>Filter</p>\n          <div className={styles.inputWrapper}>\n            <InputField \n              type=\"select\"\n              options={['Active Loans', 'Pending Loans', 'Declined Loans', 'Expired Loans']}\n              nameAttr='filterInput'\n              value={filterInput}\n              changed={(val) => setFilterInput(val)}\n            />\n          </div>\n        </div>\n        { !loading ? <div className={styles.cardTable}>\n          <Table>\n            <thead>\n              <tr>\n                <th>Loan ID</th>\n                <th>Monthly Repayment</th>\n                <th>Tenure</th>\n                <th>Status</th>\n                <th>Repayment Source</th>\n                <th>Loan Amount</th>\n                <th>DTI</th>\n                <th>Balance</th>\n              </tr>\n            </thead>\n            { currentList && currentList.length > 0 ? <tbody>\n              { currentList.map((loan, idx) => (\n                <tr>\n                  <td className={styles.loanId}>\n                    <Link to={`/sales-agent/loan/${loan._id}`}>\n                      {loan._id.slice(0,6)}\n                    </Link>\n                  </td>\n                  <td>{`N ${numberWithCommas(loan.monthlyRepayment)}`}</td>\n                  <td>{loan.paymentPeriod}</td>\n                  <td>{_.capitalize(loan.status)}</td>\n                  <td>{'Salary'}</td>\n                  <td>{`N ${numberWithCommas(loan.amount)}`}</td>\n                  <td>{`${loan?.DTI}%`}</td>\n                  <td>______</td>\n                </tr>\n              ))}\n            </tbody> : null }\n          </Table>\n          { currentList && currentList.length === 0 ? <div className={styles.nullList}>\n            <TiCancelOutline size=\"6em\" color=\"rgba(116, 23, 99, 0.6)\" />\n          </div> : null }\n          { currentList && currentList.length > 0 ? <div className={styles.tableFooter}>\n            <div className={styles.rowsInput}>\n              <p>Rows per page: </p>\n              <select onChange={(e) => setPostsPerPage(Number(e.currentTarget.value))}>\n                <option value={5} selected>5</option>\n                <option value={10}>10</option>\n                <option value={15}>15</option>\n                <option value={20}>20</option>\n                <option value={10}>25</option>\n                <option value={30}>30</option>\n              </select>\n            </div>\n            <Pagination className={styles.pagination}>\n              <Pagination.Prev onClick={goToPrevPage}/>\n              {items}\n              <Pagination.Next onClick={goToNextPage} />\n            </Pagination>\n          </div> : null }\n        </div> : <Loader /> }\n      </div>\n    </Dashboard>\n  )\n}\n\n\nexport default LoanList;","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorLoanDetails/ProcessorLoanDetails.jsx",["343","344","345","346","347","348","349","350","351","352","353","354"],"/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerLoans/AuthorizerLoans.jsx",["355","356"],"import React, { useContext, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport LoanList from '../../components/LoanList/LoanList';\nimport { routes } from '../../routes/sidebarRoutes';\nimport styles from './AuthorizerLoans.module.scss';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { Context as LoanContext } from '../../context/LoanContext';\nimport Loader from '../../components/Loader/Loader';\n\n\nconst AuthorizerLoans = () => {\n\n  const authorizerRoutes = routes[3];\n  const location = useLocation();\n\n  const { state: { user } } = useContext(AuthContext);\n  const { state: { loading, loans }, retrieveClientLoans } = useContext(LoanContext);\n\n  useEffect(() => {\n    retrieveClientLoans();\n  }, [])\n\n  return (\n    <Dashboard sidebarRoutes={authorizerRoutes} location={location}>\n      { !loading ? <LoanList loanList={loans} userRole={user.role} /> : <Loader /> }\n    </Dashboard>\n  )\n}\n\n\nexport default AuthorizerLoans;","/home/tga/Desktop/gypsy-capital/src/routes/sidebarRoutes.js",["357"],"import pageUrl from './pageUrl';\nimport { FiLayers } from 'react-icons/fi';\nimport { BiCreditCard } from 'react-icons/bi';\nimport { AiOutlineUser } from 'react-icons/ai';\nimport { GiTakeMyMoney, GiMoneyStack } from 'react-icons/gi';\nimport { FaUser } from 'react-icons/fa';\nimport { BiSupport } from 'react-icons/bi';\nimport { RiUser3Fill } from 'react-icons/ri';\n\n\nexport const clientRoutes = [\n  {\n      label: \"Dashboard\",\n      link: pageUrl.DASHBOARD_HOMEPAGE,\n      rootLink: pageUrl.DASHBOARD_HOMEPAGE,\n      icon: FiLayers\n    },\n    {\n      label: \"Consumer Credit\",\n      link: '/dashboard/consumer-credit/history',\n      rootLink: pageUrl.CONSUMER_CREDIT_PAGE,\n      icon: GiTakeMyMoney\n    },\n    {\n      label: \"Credit Report\",\n      link: pageUrl.CREDIT_REPORT_PAGE,\n      rootLink: pageUrl.CREDIT_REPORT_PAGE,\n      icon: BiCreditCard\n    },\n    {\n      label: \"Profile\",\n      link: pageUrl.PROFILE_PAGE,\n      rootLink: pageUrl.PROFILE_PAGE,\n      icon: AiOutlineUser\n    },\n]\n\n\nconst salesRoutes = [\n  {\n    label: \"Dashboard\",\n    link: pageUrl.SALES_AGENT_OVERVIEW,\n    rootLink: pageUrl.SALES_AGENT_OVERVIEW,\n    icon: FiLayers\n  },\n  {\n    label: \"Clients\",\n    link: pageUrl.CLIENT_LIST_PAGE,\n    rootLink: '/sales-agent/client',\n    icon: FaUser\n  },\n  {\n    label: \"Loans\",\n    link: pageUrl.LOAN_LIST_PAGE,\n    rootLink: '/sales-agent/loan',\n    icon: GiMoneyStack\n  }, \n  {\n    label: \"Support\",\n    link: pageUrl.SUPPORT_PAGE,\n    rootLink: pageUrl.SUPPORT_PAGE,\n    icon: BiSupport\n  }\n]\n\n\nconst processorRoutes = [\n  {\n    label: \"Dashboard\",\n    link: pageUrl.PROCESSORS_DASHBOARD,\n    rootLink: pageUrl.PROCESSORS_DASHBOARD,\n    icon: FiLayers\n  },\n  {\n    label: \"Clients\",\n    link: pageUrl.PROCESSORS_CLIENTS_PAGE,\n    rootLink: '/processor/client',\n    icon: FaUser\n  },\n  {\n    label: \"Loans\",\n    link: pageUrl.PROCESSORS_LOANS_PAGE,\n    rootLink: '/processor/loan',\n    icon: GiMoneyStack\n  }, \n  {\n    label: \"Support\",\n    link: pageUrl.SUPPORT_PAGE,\n    rootLink: pageUrl.SUPPORT_PAGE,\n    icon: BiSupport\n  }\n]\n\nconst authorizerRoutes = [\n  {\n    label: \"Dashboard\",\n    link: pageUrl.AUTHORIZER_OVERVIEW,\n    rootLink: pageUrl.AUTHORIZER_OVERVIEW,\n    icon: FiLayers\n  },\n  {\n    label: \"Clients\",\n    link: pageUrl.AUTHORIZER_CLIENTS,\n    rootLink: '/authorizer/client',\n    icon: FaUser\n  },\n  {\n    label: \"Loans\",\n    link: pageUrl.AUTHORIZER_LOANS,\n    rootLink: '/authorizer/loan',\n    icon: GiMoneyStack\n  }, \n  {\n    label: \"Support\",\n    link: pageUrl.SUPPORT_PAGE,\n    rootLink: pageUrl.SUPPORT_PAGE,\n    icon: BiSupport\n  }\n]\n\n\nexport const routes = [\n  clientRoutes,\n  salesRoutes,\n  processorRoutes,\n  authorizerRoutes\n]","/home/tga/Desktop/gypsy-capital/src/hooks/useLoanDetails.js",["358","359","360","361"],"import { useContext, useEffect, useState, useMemo } from 'react';\nimport { Context as LoanContext } from '../context/LoanContext';\n\nexport default (clientId) => {\n\n  const [loanDeets, setLoanDeets] = useState(null);\n  const { state: { loans, loanDetails }, retrieveClientLoans, retrieveLoan } = useContext(LoanContext);\n\n   useEffect(() => {\n    retrieveClientLoans();\n   }, []);\n\n   const userLoans = useMemo(() => {\n    return loans.filter(loan => loan.clientInfo[0]?._id === clientId)\n  }, [loans]);\n\n  useEffect(() => {\n   retrieveLoan(userLoans[0]?._id)\n  }, [userLoans])\n\n  useEffect(() => {\n   if(loanDetails) {\n    setLoanDeets(loanDetails);\n   }\n  }, [loanDetails])\n\n  return [ loanDeets ];\n}","/home/tga/Desktop/gypsy-capital/src/components/Dashboard/Dashboard.jsx",["362"],"import React, { useContext, useState } from 'react';\nimport styles from './Dashboard.module.scss';\nimport { Row, Col } from 'react-bootstrap';\nimport Logo from '../../assets/logo-white.png';\nimport Button from '../../components/Button/Button';\nimport { FaSearch, FaUser } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport { MdNotificationsNone } from 'react-icons/md';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport placeholderAvatar from '../../assets/placeholder.png';\nimport { FiLogOut } from 'react-icons/fi';\nimport _ from 'lodash';\n\n\nconst Dashboard = ({ children, sidebarRoutes, location }) => {\n\n  // console.log(location)\n\n  const { state: { user }, logout } = useContext(AuthContext);\n  const signout = () => {\n    logout();\n  }\n\n  // const role = \"sales\";\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  if(!user){\n    return null;\n  }\n\n  return(\n    <div className={styles.container}>\n      <Row className={styles.header}>\n        <Col className={styles.logoGrid} sm={3}>\n          <img src={Logo} alt=\"Gypsy Logo\" width={150} />\n        </Col>\n        <Col className={ user.role === \"client\" ? styles.navGrid : styles.altNavGrid} sm={9}>\n          { user.role && user.role === \"client\" ? \n          <>\n            <MdNotificationsNone size=\"2em\" className=\"mr-5\" color=\"#741763\" />\n            <Button clicked={signout} size=\"sm\" bgColor=\"#A0208931\" color=\"#212121\">Log out</Button>\n          </> : null\n          }\n          {\n            user.role && user.role !== \"client\" ?\n            <>\n              <div className={styles.searchBar}>\n                <FaSearch className={styles.searchIcon} />\n                <input \n                  type=\"text\"\n                  name=\"searchTerm\"\n                  placeholder=\"Search for customer by  name, number or BVN\"\n                  className={styles.searchTerm}\n                  value={searchTerm}\n                  onChange={(e) => {\n                    setSearchTerm(e.currentTarget.value)\n                  }}\n                />\n              </div>\n              <div className={styles.profileGroup}>\n                <MdNotificationsNone style={{ display: \"block\" }} size=\"2em\" className=\"mr-5\" color=\"#741763\" />\n                <div className={styles.profileAvi}>\n                  { user.profilePhoto.length === 0 ? \n                    <div className={styles.avatarWrapper}><FaUser size=\"1.4em\" color=\"gray\" /></div> :\n                    <img src={placeholderAvatar} alt=\"Profile Picture\" />\n                  }\n                  <div className={styles.userInfo}>\n                    <p>{user.firstName} {user.lastName}</p>\n                    <p>{_.capitalize(user.role)} { user.role === \"sales\" && 'agent'}</p>\n                  </div>\n                </div>\n              </div>\n            </> : null\n          }\n        </Col>\n      </Row>\n      <Row>\n        <Col className={styles.menuPanel} sm={3}>\n          <div className={styles.menuList}>\n            <ul>\n              { sidebarRoutes.map(route => {\n                if(location.pathname.includes(route.rootLink)) {\n                  return (\n                    <li className={[styles.activeMenu, \"mb-4\"].join(' ')}>\n                      <route.icon size=\"1.3em\" color=\"#741763\" />\n                      <Link className={styles.activeLink} to={route.link}>{route.label}</Link>\n                    </li>\n                  )\n                } else {\n                  return (\n                    <li className=\"mb-4\">\n                      <route.icon size=\"1.3em\" color=\"#fff\" />\n                      <Link to={route.link}>{route.label}</Link>\n                    </li>\n                  )\n                }\n              })}\n            </ul>\n            { user.role && user.role !== \"client\" ? \n              <ul className={styles.authGroup}>\n                <li onClick={signout}>\n                  <FiLogOut className=\"mr-3\" size=\"1.3em\" color=\"#fff\" />\n                  Log out\n                </li>\n              </ul> :\n              null\n            }\n          </div>\n        </Col>\n        <Col sm={9} className={styles.mainPanel}>\n          <div className={styles.mainContent}>\n            {children}\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\n\nexport default Dashboard;","/home/tga/Desktop/gypsy-capital/src/components/Loader/Loader.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/StatBox/StatBox.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/ProcessOffer/ProcessOffer.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/Footer/Footer.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/FaqSection/FaqSection.jsx",["363"],"/home/tga/Desktop/gypsy-capital/src/components/LoanCalculatorForm/LoanCalculatorForm.jsx",["364","365"],"import React, { useState, useEffect, useContext } from 'react';\nimport styles from './LoanCalculatorForm.module.scss';\nimport InputField from '../InputField/InputField';\nimport Button from '../Button/Button';\nimport { Row, Col } from 'react-bootstrap';\nimport Slider from 'react-rangeslider';\nimport { validateInput } from '../../utils/validateInput';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Context as LoanContext } from '../../context/LoanContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport 'react-rangeslider/lib/index.css'\n\n\nconst DtiRangeSlider = ({ dtiVal, setVal }) => {\n\n  const handleChange = (val) => {\n    setVal(val)\n  }\n\n  return (  \n    <div>\n      <p>DTI: {`${dtiVal}%`}</p>\n      <Slider \n        min={33}\n        max={50}\n        value={dtiVal}\n        onChange={handleChange}\n      />\n    </div>\n  )\n}\n\n\nconst LoanCalculatorForm = ({ delegateApply }) => {\n\n  const { state: { loading }, loanApply } = useContext(LoanContext);\n  const { state: { user } } = useContext(AuthContext);\n\n  // const [dti, setDti] = useState(33);\n  const [daysOfMonth, setDaysOfMonth] = useState([]);\n  const [limitError, setLimitError] = useState(null);\n  const [loanCalcData, setLoanCalcData] = useState({\n    monthlySalary: \"\",\n    payDay: \"\",\n    loanAmount: \"\",\n    installmentPeriod: \"\",\n    loanPurpose: \"\",\n    estimatedMonthlyPayment: \"\",\n    dti: 33\n  });\n\n  const [loanCalcDataErrors, setLoanCalcDataErrors] = useState({\n    monthlySalary: null,\n    payDay: null,\n    loanAmount: null,\n    installmentPeriod: null,\n    loanPurpose: null\n  });\n\n  useEffect(() => {\n    setDaysOfMonth(fillUpDaysArray);\n  }, [])\n\n  const fillUpDaysArray = () => {\n    let daysArray = [];\n    for(let i=0; i < 31; i++) {\n      daysArray.push(i+1)\n    }\n    return daysArray;\n  }\n\n  const { monthlySalary, loanAmount, installmentPeriod, payDay, loanPurpose } = loanCalcData;\n\n  useEffect(() => {\n    if(monthlySalary && loanAmount && installmentPeriod) {\n      // console.log(typeof monthlySalary, typeof loanAmount, installmentPeriod);\n      const tenor = Number(installmentPeriod.split(' ')[0]);\n      let initRate = Number(loanAmount);\n      let toRepay = initRate + (initRate * 0.04);\n      toRepay = toRepay + (toRepay * 0.04 * tenor)\n      // for(let i=0; i < tenor; i++) {\n      //   toRepay = initRate + (initRate * 0.04);\n      //   initRate = toRepay;\n      // }\n      const monthlyRepay = toRepay / tenor;\n      const percentDti = (loanCalcData.dti / 100).toFixed(3);\n      console.log(percentDti);\n      if(monthlyRepay > (percentDti * Number(monthlySalary))) {\n        setLimitError('You are not eligible for this amount, kindly enter a lower loan amount');\n      } else {\n        setLimitError(null)\n      }\n      setLoanCalcData({ ...loanCalcData, estimatedMonthlyPayment: Math.floor(monthlyRepay) })\n    }\n  }, [monthlySalary, loanAmount, installmentPeriod, loanCalcData.dti])\n\n  const submitLoanCalcData = () => {\n    console.log('works');\n    const fieldsTovalidate = { monthlySalary, payDay, loanAmount, installmentPeriod, loanPurpose }\n    const validated = validateInput(fieldsTovalidate, setLoanCalcDataErrors);\n    if(validated) {\n      const applyData = {\n        monthlySalary,\n        payDay,\n        amount: loanAmount,\n        paymentPeriod: installmentPeriod,\n        loanPurpose,\n        monthlyRepayment: loanCalcData.estimatedMonthlyPayment,\n        DTI: loanCalcData.dti\n      }\n      console.log(applyData);\n      limitError ? toast.error(limitError) : delegateApply(applyData);\n    }\n  }\n\n  if(daysOfMonth.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={styles.calculatorForm}>\n      <ToastContainer position=\"top-center\" />\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            label=\"Monthly Salary\" \n            type=\"number\" \n            nameAttr=\"salary\"\n            value={loanCalcData.monthlySalary}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, monthlySalary: null })\n              setLoanCalcData({ ...loanCalcData, monthlySalary: val })\n            }}\n            error={loanCalcDataErrors.monthlySalary && loanCalcDataErrors.monthlySalary}\n          />\n        </Col>\n        <Col>\n          <InputField \n            label=\"Pay Day\"\n            type=\"select\"\n            options={daysOfMonth}\n            nameAttr=\"payday\"\n            value={loanCalcData.payDay}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, payDay: null })\n              setLoanCalcData({ ...loanCalcData, payDay: val })\n            }}\n            error={loanCalcDataErrors.payDay && loanCalcDataErrors.payDay}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            label=\"Loan Amount\" \n            type=\"number\" \n            nameAttr=\"loanAmt\"\n            value={loanCalcData.loanAmount}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, loanAmount: null })\n              setLoanCalcData({ ...loanCalcData, loanAmount: val })\n            }}\n            error={loanCalcDataErrors.loanAmount && loanCalcDataErrors.loanAmount}\n          />\n          <p className={styles.inputHint}>\n            <span>min amt:</span> #100,000; <span>max amt:</span> #2,000,000\n          </p>\n        </Col>\n        <Col>\n          <InputField \n            label=\"Installment Period\"\n            type=\"select\"\n            options={['1 Month', '2 Months', '3 Months', '4 Months', '5 Months', '6 Months']}\n            nameAttr=\"installmentCycle\"\n            value={loanCalcData.installmentPeriod}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, installmentPeriod: null })\n              setLoanCalcData({ ...loanCalcData, installmentPeriod: val })\n            }}\n            error={loanCalcDataErrors.installmentPeriod && loanCalcDataErrors.installmentPeriod}\n          />\n        </Col>\n      </Row>\n      {user?.role === \"sales\" && <Row className=\"mb-4\">\n        <Col>\n          <DtiRangeSlider \n            dtiVal={loanCalcData.dti} \n            setVal={(val) => setLoanCalcData({...loanCalcData, dti: val })} \n            />\n        </Col>\n      </Row>}\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            label=\"Loan Purpose\"\n            type=\"select\"\n            options={[\n              'Debt Consolidation',\n              'Home Remodelling',\n              'Moving Costs',\n              'Emergency Expenses',\n              'Medical Bills',\n              'Education',\n              'Appliance Purchase',\n              'Vehicle Financing',\n              'Vacation Costs',\n              'Wedding Expenses',\n              'Others'\n            ]}\n            nameAttr=\"loanPurpose\"\n            value={loanCalcData.loanPurpose}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, loanPurpose: null })\n              setLoanCalcData({ ...loanCalcData, loanPurpose: val })\n            }}\n            error={loanCalcDataErrors.loanPurpose && loanCalcDataErrors.loanPurpose}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Estimated Monthly Payment\"\n            nameAttr=\"monthlyPayment\"\n            value={loanCalcData.estimatedMonthlyPayment}\n            disable={true}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, estimatedMonthlyPayment: null })\n              setLoanCalcData({ ...loanCalcData, estimatedMonthlyPayment: val })\n            }}\n            error={loanCalcDataErrors.estimatedMonthlyPayment && loanCalcDataErrors.estimatedMonthlyPayment}\n          />\n          <p className={styles.inputHint}>\n            <span>Eventual repayment amount may differ after risk assessment.</span>\n          </p>\n          { limitError && <p className={styles.limitError}>{limitError}</p> }\n        </Col>\n      </Row>\n      <Button \n        className=\"mt-5\" \n        fullWidth \n        clicked={submitLoanCalcData} \n        bgColor=\"#741763\" \n        size=\"lg\" \n        color=\"#EBEBEB\"\n        disabled={loading}\n        loading={loading}\n      >\n        Continue\n      </Button>\n    </div>\n  )\n}\n\n\nexport default LoanCalculatorForm;","/home/tga/Desktop/gypsy-capital/src/components/FileUploadButton/FileUploadButton.js",[],"/home/tga/Desktop/gypsy-capital/src/components/BvnForm/BvnForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/MonoWidget/MonoWidget.jsx",["366","367","368"],"import React, { useContext, useEffect } from 'react';\nimport MonoConnect from '@mono.co/connect.js';\nimport Button from '../Button/Button';\nimport { Context as MonoContext } from '../../context/MonoContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { toast, ToastContainer } from 'react-toastify';\n\nexport default function Mono() {\n\n  const { \n    state : { linkSuccess, error }, \n    authenticateUser, \n    resetLinkSuccess,\n    clearErrors\n  } = useContext(MonoContext);\n  const { state: { user } } = useContext(AuthContext);\n\n  const monoConnect = React.useMemo(() => {\n    const monoInstance = new MonoConnect({\n      onClose: () => console.log('Widget closed'),\n      onLoad: () => console.log('Widget loaded successfully'),\n      onSuccess: ({ code }) => {\n        console.log(`Linked successfully: ${code}`);\n        authenticateUser(user.user_id, code)\n      },\n      // key: \"test_pk_4f5soJVmo31hCbKePbfo\",\n      key: \"live_pk_PvDfizVtAJPsoplNU8r2\"\n    })\n\n    monoInstance.setup()\n    \n    return monoInstance;\n  }, [])\n\n  useEffect(() => {\n    if(linkSuccess) {\n      toast.success(\"Your financial account has been successfully linked\")\n      // resetLinkSuccess();\n    }\n  }, [linkSuccess]);\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error)\n      clearErrors();\n    }\n  }, [error])\n\n  return (\n    <>\n      <ToastContainer position=\"top-center\" />\n      <Button\n        className=\"mt-2\" \n        bgColor=\"#741763\" \n        size=\"lg\" \n        color=\"#EBEBEB\"\n        clicked={() => monoConnect.open()}\n      >\n        Link Your Financial Account\n      </Button>\n    </>\n  )\n}","/home/tga/Desktop/gypsy-capital/src/context/LoanContext.js",[],"/home/tga/Desktop/gypsy-capital/src/context/createDataContext.js",["369"],"/home/tga/Desktop/gypsy-capital/src/pages/CreditReport/CreditReport.jsx",["370","371","372"],"/home/tga/Desktop/gypsy-capital/src/pages/Overview/Overview.jsx",["373","374"],"/home/tga/Desktop/gypsy-capital/src/pages/ClientListPage/ClientListPage.jsx",["375","376"],"/home/tga/Desktop/gypsy-capital/src/pages/AgentOverview/AgentOverview.jsx",["377"],"/home/tga/Desktop/gypsy-capital/src/pages/AboutUs/AboutUs.jsx",["378","379","380"],"/home/tga/Desktop/gypsy-capital/src/pages/ResetSuccess/ResetSuccess.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/ForgotPassword/ForgotPassword.jsx",["381"],"import React, { useContext, useEffect, useState } from 'react';\nimport styles from './ForgotPassword.module.scss';\nimport Logo from '../../assets/logo.png';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { ToastContainer, toast  } from 'react-toastify';\n\n\nconst ForgotPassword = () => {\n\n  const [email, setEmail] = useState('');\n  const { state: { loading, error }, resetPassword, clearErrors } = useContext(UserContext);\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearErrors();\n    }\n  }, [error])\n\n  const initiatePasswordReset = () => {\n    resetPassword(email);\n  }\n\n  return (\n    <div className={styles.container}>\n      <ToastContainer position=\"top-center\" />\n      <img src={Logo} alt=\"Gypsy Logo\" />\n      <h1>Forgot Password?</h1>\n      <p>Enter the email address associated with your account</p>\n      <div className={styles.formBox}>\n        <InputField \n          type=\"email\"\n          label=\"Email\"\n          nameAttr=\"email\"\n          value={email}\n          changed={(val) => setEmail(val)}\n        />\n        <Button\n          fullWidth \n          clicked={initiatePasswordReset}\n          className=\"mt-4\" \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n          loading={loading}\n          disabled={loading}\n        >\n          Reset Password\n        </Button>\n      </div>\n    </div>\n  )\n}\n\n\nexport default ForgotPassword;","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorClientDetails/ProcessorClientDetails.jsx",["382","383"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { routes } from '../../routes/sidebarRoutes';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport styles from './ProcessorClientDetails.module.scss';\nimport NavTabs from '../../components/NavTabs/NavTabs';\nimport { Biodata, NextOfKin, Bank, Employer, ClientLoan } from '../ClientDetails/ClientDetails';\nimport { Row, Col, Modal } from 'react-bootstrap';\nimport { IoDocumentTextOutline } from 'react-icons/io5';\nimport { RiDeleteBin5Line } from 'react-icons/ri'\nimport { FiEye } from 'react-icons/fi';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport Loader from '../../components/Loader/Loader';\nimport useLoanDetails from '../../hooks/useLoanDetails';\n\n\nconst DocCard = ({ docTitle, docLink }) => {\n\n  const [show, setShow] = useState(false);\n\n  const openDoc = () => {\n    setShow(true);\n  }\n\n  const handleClose = () => {\n    setShow(false);\n  }\n\n  return (\n    <>\n      <div className={styles.documentCard}>\n        <div style={{ width: \"100%\", textAlign: \"center\"}}>\n          <IoDocumentTextOutline color=\"#741763\" size=\"5em\" />\n          <div className={styles.ctrlBtn}>\n            <RiDeleteBin5Line size=\"1.3em\" color=\"#741763\" />\n            <FiEye size=\"1.3em\" color=\"#741763\" onClick={openDoc} />\n          </div>\n        </div>\n      </div>\n      <h4 className={styles.docTitle}>{docTitle}</h4>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Body className={styles.documentImg}>\n          <img width=\"100%\" src={docLink} />\n        </Modal.Body>\n      </Modal>\n    </>\n  )\n}\n\nexport const DocTab = ({ userId }) => {\n\n  const [ loanDeets ] = useLoanDetails(userId);\n\n  console.log(loanDeets); \n\n  return (\n    <>\n      <Row>\n        <Col>\n          <DocCard docTitle=\"Identification\" docLink={loanDeets?.client[0]?.identity?.identityImageUrl} />\n        </Col>\n        <Col>\n          <DocCard docTitle=\"Proof of Address\" docLink={loanDeets?.residence[0]?.residenceProof} />\n        </Col>\n        <Col>\n          <DocCard docTitle=\"Official Document\" docLink={loanDeets?.employment[0]?.officialDocumentUrl} />\n        </Col>\n        <Col>\n          <DocCard docTitle=\"Statement of Account\" docLink={loanDeets?.bank[0]?.accountStatementUrl} />\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nconst ProcessorClientDetails = () => {\n\n  const location = useLocation();\n  const processorRoute = routes[2];\n  const { clientId } = useParams();\n  console.log(clientId);\n\n  const { state: { userDetails, loading }, getClientDetails } = useContext(UserContext);\n  const { state: { user } } = useContext(AuthContext);\n\n  useEffect(() => {\n    getClientDetails(clientId);\n  }, []);\n\n  console.log(userDetails);\n\n  const [detailSection, setDetailSection] = useState('biodata');\n\n  const navArray = [\n    {\n      title: \"Biodata\",\n      shortlink: \"biodata\"\n    },\n    {\n      title: \"Next of Kin Info\",\n      shortlink: \"kin\"\n    },\n    {\n      title: \"Bank Info\",\n      shortlink: \"bank\"\n    },\n    {\n      title: \"Employment Info\",\n      shortlink: \"employ\"\n    },\n    {\n      title: \"Document\",\n      shortlink: \"doc\"\n    },\n    {\n      title: \"Loans\",\n      shortlink: \"loans\"\n    },\n  ]\n\n  const setActiveTab = (link) => {\n    setDetailSection(link);\n  }\n\n\n  return (\n    <>\n      <Dashboard sidebarRoutes={processorRoute} location={location}>\n        <NavTabs navs={navArray} setActive={setActiveTab} currentTab={detailSection } />\n        { !loading ? <div className={detailSection !== \"loans\" && styles.detailFields}>\n          { detailSection === \"biodata\" && \n            <Biodata \n              data={userDetails && {...userDetails.bioData, ...userDetails.residence}}\n              userId={userDetails?.clientId}\n            /> \n          }\n          { detailSection === \"kin\" && \n            <NextOfKin \n              data={userDetails && { ...userDetails.nextOfKin }}\n            /> \n          }\n          { detailSection === \"bank\" && \n            <Bank \n              data={userDetails && { ...userDetails.bank }}\n            /> \n          }\n          { detailSection === \"employ\" && \n            <Employer \n              data={userDetails.employer && { ...userDetails.employer }}\n            /> \n          }\n          { detailSection === \"doc\" && <DocTab userId={userDetails?.clientId} /> }\n          { detailSection === \"loans\" && \n            <ClientLoan \n              userRole={user.role}\n              userId={userDetails && userDetails.clientId}\n            /> \n          }\n        </div> : <Loader />}\n      </Dashboard>\n    </>\n  )\n}\n\n\nexport default ProcessorClientDetails;","/home/tga/Desktop/gypsy-capital/src/pages/ResetPassword/ResetPassword.jsx",["384"],"import React, { useContext, useEffect, useState } from 'react';\nimport styles from './ResetPassword.module.scss';\nimport Logo from '../../assets/logo.png';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport { Row, Col } from 'react-bootstrap';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { useLocation } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { validateInput } from '../../utils/validateInput';\n\n\nconst ResetPassword = () => {\n\n  const { state: { loading, error }, createNewPassword, clearErrors } = useContext(UserContext);\n  const location = useLocation();\n\n  const [resetData, setResetData] = useState({\n    otp: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const [fieldErrors, setFieldErrors] = useState({\n    otp: null,\n    password: null,\n    confirmPassword: null\n  });\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearErrors();\n    }\n  }, [error])\n\n  const setNewPassword = () => {\n    const validated = validateInput(resetData, setFieldErrors);\n    console.log(validated);\n    if(validated) {\n      const data = {\n        email: location.state.email,\n        code: resetData.otp,\n        password: resetData.password\n      }\n\n      createNewPassword(data);\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <ToastContainer position=\"top-center\" />\n      <img src={Logo} alt=\"Gypsy Logo\" />\n      <h1>Reset Password</h1>\n      <div className={styles.formBox}>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Enter OTP\"\n              nameAttr=\"email\"\n              value={resetData.otp}\n              changed={(val) => {\n                setFieldErrors({ ...fieldErrors, otp: null })\n                setResetData({ ...resetData, otp: val })\n              }}\n              error={fieldErrors.otp && fieldErrors.otp}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"password\"\n              label=\"New Password\"\n              nameAttr=\"newPassword\"\n              value={resetData.password}\n              changed={(val) => {\n                setFieldErrors({ ...fieldErrors, password: null })\n                setResetData({ ...resetData, password: val })\n              }}\n              error={fieldErrors.password && fieldErrors.password}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"password\"\n              label=\"Confirm Password\"\n              nameAttr=\"confirmPassword\"\n              value={resetData.confirmPassword}\n              changed={(val) => {\n                setFieldErrors({ ...fieldErrors, confirmPassword: null })\n                setResetData({ ...resetData, confirmPassword: val })\n              }}\n              error={fieldErrors.confirmPassword && fieldErrors.confirmPassword}\n            />\n          </Col>\n        </Row>\n        <Button\n          fullWidth \n          className=\"mt-4\" \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n          clicked={setNewPassword}\n          loading={loading}\n          disabled={loading}\n        >\n          Reset Password\n        </Button>\n      </div>\n    </div>\n  )\n}\n\n\nexport default ResetPassword;","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorLoans/ProcessorLoans.jsx",["385","386"],"/home/tga/Desktop/gypsy-capital/src/pages/ProcessorDashboard/ProcessorDashboard.jsx",["387"],"/home/tga/Desktop/gypsy-capital/src/hooks/useNavigateAfterAuth.js",["388"],"import { useContext, useEffect } from 'react';\nimport { Context as AuthContext } from '../context/AuthContext';\nimport history from '../utils/history';\nimport pageUrl from '../routes/pageUrl';\n\n\nexport default (email, password) => {\n  const { state: { user }, getActiveUser } = useContext(AuthContext);\n\n  useEffect(() => {\n    if(user?.role && user.role === \"client\") {\n      history.push(pageUrl.DASHBOARD_HOMEPAGE)\n    } else if(user?.role && user.role === \"admin\") {\n      history.push(pageUrl.PROCESSORS_DASHBOARD)\n    } else if(user?.role && user.role === \"sales\") {\n      history.push(pageUrl.SALES_AGENT_OVERVIEW)\n    } else if(user?.role && user.role === \"processor\") {\n      history.push(pageUrl.PROCESSORS_DASHBOARD)\n    } else if(user?.role && user.role === \"authorizer\") {\n      history.push(pageUrl.AUTHORIZER_OVERVIEW) \n    }\n  }, [user])\n\n  const signinAndNavigate = (signinFunc) => {\n    signinFunc({ email, password }, getActiveUser)\n  }\n\n  return [ signinAndNavigate ];\n}","/home/tga/Desktop/gypsy-capital/src/components/IdentityForm/IdentityForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/NavTabs/NavTabs.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/ClientList/ClientList.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/LoanList/LoanList.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/OfferLetter/OfferLetter.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/LoanContactForm/LoanContactForm.jsx",["389"],"/home/tga/Desktop/gypsy-capital/src/components/AccountSetupModal/AccountSetupModal.jsx",["390","391","392","393","394","395"],"import React, { useContext, useEffect, useMemo, useState, useRef } from 'react';\nimport styles from './AccountSetupModal.module.scss';\nimport { Modal, Row, Col } from 'react-bootstrap';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport { validateInput } from '../../utils/validateInput';\nimport { nigeriaStates } from '../../utils/nigeriaStates';\nimport { Context as BankContext } from '../../context/BankCotext';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport FileUploadButton from '../FileUploadButton/FileUploadButton';\nimport { FaCloudUploadAlt } from 'react-icons/fa';\nimport { toast, ToastContainer } from 'react-toastify';\nimport Loader from '../Loader/Loader';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport BeatLoader from 'react-spinners/BeatLoader';\n\n\nexport const VerifyBvn = ({ submit }) => {\n\n  const [bvn, setBvn] = useState('');\n  const { state: { loading } } = useContext(UserContext);\n\n  const submitBvn = () => {\n    if(bvn) {\n      submit(bvn);\n    }\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Verify BVN</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row>\n            <Col>\n              <InputField \n                type=\"text\"\n                nameAttr=\"otp\"\n                label=\"Enter Client's BVN\"\n                value={bvn}\n                changed={(val) => {\n                  setBvn(val)\n                }}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button\n          fullWidth\n          bgColor=\"#741763\" \n          size=\"lg\" \n          clicked={submitBvn}\n          color=\"#EBEBEB\"\n          loading={loading}\n          disabled={loading}\n        >\n          Verify\n        </Button>\n        <p className={styles.hint}>To get your BVN, Dial *565*0#</p>\n      </Modal.Footer>\n    </>\n  )\n}\n\n\nexport const PersonalInfo = ({ submit }) => {\n\n  const { state: { userDetails }, getClientDetails } = useContext(UserContext);\n  const { state: { currentAddedUser} } = useContext(AuthContext);\n\n\n  const [biodata, setBiodata] = useState({\n    fullName: '',\n    dateOfBirth: '',\n    bvnPhoneNo: '',\n    email: '',\n    phoneNo: '',\n    altPhone: '',\n    gender: ''\n  });\n\n  const [biodataErrors, setBiodataErrors] = useState({\n    fullName: null,\n    dateOfBirth: null,\n    bvnPhoneNo: null,\n    email: null,\n    phoneNo: null,\n    altPhone: null,\n    gender: null\n  });\n\n\n  useEffect(() => {\n    const { user_id } = currentAddedUser;\n    getClientDetails(user_id);\n  }, []);\n\n  useEffect(() => {\n    if(userDetails) {\n      const { bioData } = userDetails;\n      setBiodata({ ...biodata, \n        fullName: `${bioData.firstName} ${bioData.lastName}`,\n        email: bioData.email,\n        phoneNo: bioData.phoneNumber.replace('234', '0'),\n        dateOfBirth: bioData.DOB,\n        bvnPhoneNo: bioData.bvnPhoneNumber\n      })\n    }\n  }, [currentAddedUser, userDetails]);\n\n\n  const addPersonalInfo = () => {\n    const validated = validateInput(biodata, setBiodataErrors);\n    if(validated) {\n      submit(biodata);\n    }\n  }\n  if(!userDetails) {\n    return <Loader />\n  }\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Personal Info</h2>\n        </Modal.Title>\n        {/* <p className={styles.subtitle}>Personal Info</p> */}\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Full name\"\n                type=\"text\"\n                nameAttr=\"fullname\"\n                value={biodata.fullName}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, fullName: null })\n                  setBiodata({ ...biodata, fullName: val})\n                }}\n                error={biodataErrors.fullName && biodataErrors.fullName}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Date of Birth\"\n                type=\"text\"\n                nameAttr=\"dob\"\n                value={biodata.dateOfBirth}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, dateOfBirth: null })\n                  setBiodata({ ...biodata, dateOfBirth: val})\n                }}\n                error={biodataErrors.dateOfBirth && biodataErrors.dateOfBirth}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"BVN-linked Phone Number\"\n                type=\"text\"\n                nameAttr=\"bvnPhoneNo\"\n                value={biodata.bvnPhoneNo}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, bvnPhoneNo: null })\n                  setBiodata({ ...biodata, bvnPhoneNo: val})\n                }}\n                error={biodataErrors.bvnPhoneNo && biodataErrors.bvnPhoneNo}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Email\"\n                type=\"email\"\n                nameAttr=\"email\"\n                value={biodata.email}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, email: null })\n                  setBiodata({ ...biodata, email: val})\n                }}\n                error={biodataErrors.email && biodataErrors.email}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Phone Number\"\n                type=\"text\"\n                nameAttr=\"PhoneNo\"\n                value={biodata.phoneNo}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, phoneNo: null })\n                  setBiodata({ ...biodata, phoneNo: val})\n                }}\n                error={biodataErrors.phoneNo && biodataErrors.phoneNo}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Alternative Phone Number\"\n                type=\"text\"\n                nameAttr=\"altPhoneNo\"\n                value={biodata.altPhone}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, altPhone: null })\n                  setBiodata({ ...biodata, altPhone: val})\n                }}\n                error={biodataErrors.altPhone && biodataErrors.altPhone}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <InputField \n                label=\"Gender\"\n                type=\"select\"\n                options={['Female', 'Male', 'Other']}\n                nameAttr=\"gender\"\n                value={biodata.gender}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, gender: null })\n                  setBiodata({ ...biodata, gender: val})\n                }}\n                error={biodataErrors.gender && biodataErrors.gender}\n              />\n            </Col>\n          </Row>\n          <Modal.Footer>\n            <Button \n              className=\"mt-4\" \n              clicked={addPersonalInfo} \n              fullWidth \n              bgColor=\"#741763\" \n              size=\"lg\" \n              color=\"#EBEBEB\"\n            >\n              Save & Continue\n            </Button>\n          </Modal.Footer>\n        </div>\n      </Modal.Body>\n    </>\n  )\n}\n\n\nexport const Residence = ({ submit }) => {\n\n  const [residentialInfo, setResidentialInfo] = useState({\n    street: '',\n    city: '',\n    state: ''\n  });\n\n  const [residentialErrors, setResidentialErrors] = useState({\n    street: null,\n    city: null,\n    state: null\n  });\n\n  const addResidence = () => {\n    const validated = validateInput(residentialInfo, setResidentialErrors);\n    if(validated) {\n      submit(residentialInfo);\n    }\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Residential Address</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Street\"\n                type=\"text\"\n                nameAttr=\"residentStreet\"\n                value={residentialInfo.street}\n                changed={(val) => {\n                  setResidentialErrors({ ...residentialErrors, street: null })\n                  setResidentialInfo({ ...residentialInfo, street: val})\n                }}\n                error={residentialErrors.street && residentialErrors.street}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"City\"\n                type=\"text\"\n                nameAttr=\"city\"\n                value={residentialInfo.city}\n                changed={(val) => {\n                  setResidentialErrors({ ...residentialErrors, city: null })\n                  setResidentialInfo({ ...residentialInfo, city: val})\n                }}\n                error={residentialErrors.city && residentialErrors.city}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"State\"\n                type=\"select\"\n                options={nigeriaStates}\n                nameAttr=\"state\"\n                value={residentialInfo.state}\n                changed={(val) => {\n                  setResidentialErrors({ ...residentialErrors, state: null })\n                  setResidentialInfo({ ...residentialInfo, state: val})\n                }}\n                error={residentialErrors.state && residentialErrors.state}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addResidence} \n          fullWidth \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\n\nexport const NextOfKin = ({ submit }) => {\n\n  const [kinInfo, setKinInfo] = useState({\n    fullName: '',\n    relationship: '',\n    email: '',\n    phoneNo: '',\n    address: ''\n  });\n\n  const [kinErrors, setKinErrors] = useState({\n    fullName: null,\n    relationship: null,\n    email: null,\n    phoneNo: null,\n    address: null\n  });\n\n  const addNextOfKin = () => {\n    const validated = validateInput(kinInfo, setKinErrors);\n    if(validated) {\n      submit(kinInfo);\n    }\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Next of Kin Info</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Full name\"\n                type=\"text\"\n                nameAttr=\"kinFullname\"\n                value={kinInfo.fullName}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, fullName: null })\n                  setKinInfo({ ...kinInfo, fullName: val})\n                }}\n                error={kinErrors.fullName && kinErrors.fullName}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Relationship\"\n                type=\"text\"\n                nameAttr=\"kinRelationship\"\n                value={kinInfo.relationship}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, relationship: null })\n                  setKinInfo({ ...kinInfo, relationship: val})\n                }}\n                error={kinErrors.relationship && kinErrors.relationship}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Email Address\"\n                type=\"email\"\n                nameAttr=\"kinEmail\"\n                value={kinInfo.email}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, email: null })\n                  setKinInfo({ ...kinInfo, email: val})\n                }}\n                error={kinErrors.email && kinErrors.email}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Phone Number\"\n                type=\"text\"\n                nameAttr=\"kinPhone\"\n                value={kinInfo.phoneNo}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, phoneNo: null })\n                  setKinInfo({ ...kinInfo, phoneNo: val})\n                }}\n                error={kinErrors.phoneNo && kinErrors.phoneNo}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Residential Address\"\n                type=\"text\"\n                nameAttr=\"kinAddress\"\n                placeholder=\"Street address to the nearest bus stop\"\n                value={kinInfo.address}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, address: null })\n                  setKinInfo({ ...kinInfo, address: val})\n                }}  \n                error={kinErrors.address && kinErrors.address}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addNextOfKin} \n          fullWidth \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\nexport const BankInfo = ({ submit }) => {\n\n  const { state: { loading } } = useContext(UserContext);\n\n  const [bankInfo, setBankInfo] = useState({\n    bankName: '',\n    accountType: '',\n    accountNumber: '',\n    accountName: ''\n  });\n\n  const [bankInfoErrors, setBankInfoErrors] = useState({\n    bankName: null,\n    accountType: null,\n    accountNumber: null,\n    accountName: null\n  });\n\n  const { \n    state: { bankList, userBankDetails, bankLoading }, \n    getBankList,\n    verifyBankInfo\n  } = useContext(BankContext);\n\n  useEffect(() => {\n      getBankList();\n  }, []);\n\n  const bankNames = useMemo(() => {\n    return bankList ? \n      bankList.map((bank) => bank.name) :\n      []\n  }, [bankList]);\n\n  useEffect(() => {\n    if(bankInfo.accountNumber.length === 10 && bankInfo.bankName) {\n      const bank = bankList.find(bank => bank.name.toLowerCase() === bankInfo.bankName);\n      const bankCode = bank.code;\n      console.log(bankCode)\n      verifyBankInfo(bankInfo.accountNumber, bankCode)\n    }\n  }, [bankInfo.accountNumber, bankInfo.bankName])\n\n\n  useEffect(() => {\n    console.log(userBankDetails);\n    if(userBankDetails) {\n      setBankInfo({ ...bankInfo, accountName: userBankDetails.account_name })\n    }\n  }, [userBankDetails]);\n\n  const addBankInfo = () => {\n    const validated = validateInput(bankInfo, setBankInfoErrors);\n    if(validated) {\n      submit(bankInfo);\n    }\n  }\n\n  return(\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Bank Info</h2>\n          <p className={styles.subtitle}>Add a bank account where we can send investment proceeds or loan requests to.</p>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"select\"\n                label=\"Bank\"\n                options={bankNames}\n                nameAttr=\"bank\"\n                value={bankInfo.bankName}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, bankName: null })\n                  setBankInfo({ ...bankInfo, bankName: val})\n                }}\n                error={bankInfoErrors.bankName && bankInfoErrors.bankName}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Account Type\"\n                type=\"select\"\n                options={[\"Savings\", \"Current\"]}\n                nameAttr=\"acountType\"\n                value={bankInfo.accountType}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, accountType: null })\n                  setBankInfo({ ...bankInfo, accountType: val})\n                }}\n                error={bankInfoErrors.accountType && bankInfoErrors.accountType}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"text\"\n                label=\"Account Number\"\n                nameAttr=\"accountNo\"\n                value={bankInfo.accountNumber}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, accountNumber: null })\n                  setBankInfo({ ...bankInfo, accountNumber: val})\n                }}\n                error={bankInfoErrors.accountNumber && bankInfoErrors.accountNumber}\n              />\n            </Col>\n            <Col>\n              { !bankLoading ? <InputField \n                label=\"Account Name\"\n                type=\"text\"\n                nameAttr=\"accountName\"\n                value={bankInfo.accountName}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, accountName: null })\n                  setBankInfo({ ...bankInfo, accountName: val})\n                }}\n                error={bankInfoErrors.accountName && bankInfoErrors.accountName}\n              /> : \n              <div className={styles.loaderWrapper}>\n                <BeatLoader color=\"#741763\" size={10} />\n              </div>\n              }\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addBankInfo} \n          fullWidth \n          loading={loading}\n          disabled={loading}\n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\nexport const IdentityForm = ({ submit }) => {\n\n  const { state: { loading } } = useContext(UserContext);\n  const idFileRef = useRef();\n  const passportFileRef= useRef();\n\n  const [idType, setIdType] = useState('');\n\n  const addIdentityInfo = () => {\n    if(idFileRef.current.files.length > 0) {\n      if(passportFileRef.current.files.length > 0) {\n        if(idType) {\n          const idFile = idFileRef.current.files[0];\n          const passportFile = passportFileRef.current.files[0];\n          submit(idFile, passportFile, idType);\n        }\n      } else {\n        toast.error(\"Please upload a passport photograph of yourself\")\n      }\n    } else {\n      toast.error(\"Please upload a verified identification card\")\n    }\n  }\n\n  return (\n    <>\n      <ToastContainer position=\"top-center\" />\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Identity</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <div className={styles.validId}>\n            <p className={styles.validID}>Upload a valid government issued Identification</p>\n            <InputField \n              type=\"select\"\n              options={['International Passport', \"Driver's License\", 'Voters Card', 'National Identity Card']}\n              nameAttr=\"identityType\"\n              value={idType}\n              changed={(val) => setIdType(val)}\n            />\n            <FileUploadButton \n              label=\"Choose File\" \n              icon={<FaCloudUploadAlt className=\"ml-3\" size=\"1.1em\" />}\n              id=\"id-upload\" \n              className=\"mt-3\"\n              fileRef={idFileRef}\n              fullwidth\n            />\n          </div>\n          <div className={styles.passportVerify}>\n            <p className={styles.passportImg}>Please upload a clear and resent passport photograph.</p>\n            <FileUploadButton \n              label=\"Choose File\" \n              icon={<FaCloudUploadAlt className=\"ml-3\" size=\"1.1em\" />}\n              id=\"passport-upload\"  \n              fileRef={passportFileRef}\n              fullwidth\n            />\n          </div>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addIdentityInfo} \n          fullWidth \n          loading={loading}\n          disabled={loading}\n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\n\nexport const OnboardSuccess = ({ close }) => {\n\n  useEffect(() => {\n    setTimeout(() => {\n      close();\n    }, 3000);\n  }, []);\n\n  return (\n    <>\n      <Modal.Body>\n        <div className={styles.onboard}>\n          <FaCheckCircle size=\"4em\" color=\"#741763\" />\n          <h4>User successfully onboarded.</h4>\n          <Button\n            className=\"mt-4\" \n            clicked={close} \n            bgColor=\"#741763\" \n            size=\"sm\" \n            color=\"#EBEBEB\"\n          >\n            Continue\n          </Button>\n        </div>\n      </Modal.Body>\n    </>\n  )\n}","/home/tga/Desktop/gypsy-capital/src/context/UserContext.js",[],"/home/tga/Desktop/gypsy-capital/src/api/gypsy-web.js",[],"/home/tga/Desktop/gypsy-capital/src/pages/SignIn/SignIn.jsx",["396"],"import React, { useState, useContext, useEffect } from 'react';\nimport Logo from '../../assets/logo.png';\nimport styles from './SignIn.module.scss';\nimport { Row, Col } from 'react-bootstrap';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport pageUrl from '../../routes/pageUrl';\nimport { Link } from 'react-router-dom';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { validateInput } from '../../utils/validateInput';\nimport useNavigateAfterAuth from '../../hooks/useNavigateAfterAuth';\n\n\nconst SignIn = () => {\n\n  const { \n      state: { loading, error }, \n      loginUser, \n      clearErrors \n  } = useContext(AuthContext);\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearErrors();\n    }\n  }, [error])\n\n  const [signinValues, setSigninValues] = useState({\n    email: '',\n    password: ''\n  });\n\n  const [signinErrors, setSigninErrors] = useState({\n    email: null,\n    password: null\n  });\n\n  const [ signinAndNavigate ] = useNavigateAfterAuth(signinValues.email, signinValues.password);\n\n  const handleSubmit = () => {\n    // console.log(signinValues);\n    const validated = validateInput(signinValues, setSigninErrors);\n    // console.log(validated);\n    if(validated) {\n      signinAndNavigate(loginUser);\n    }\n  }\n\n  // useEffect(() => {\n  //   const listener = event => {\n  //     if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n  //       console.log(\"Enter key was pressed. Run your function.\");\n  //       handleSubmit();\n  //     }\n  //   };\n  //   document.addEventListener(\"keydown\", listener);\n  //   return () => {\n  //     document.removeEventListener(\"keydown\", listener);\n  //   };\n  // }, []);\n\n  return (\n    <div className={styles.container}>\n      <ToastContainer position=\"top-center\" />\n      <Link to={pageUrl.HOMEPAGE}><img src={Logo} alt=\"Gypsy Logo\" /></Link>\n      <h1>Login to your account</h1>\n      <div className={styles.loginBox}>\n        <Row>\n          <Col>\n            <InputField \n              type=\"email\"\n              label=\"Email\"\n              nameAttr=\"email\"\n              value={signinValues.email}\n              changed={(val) => {\n                setSigninErrors({ ...signinErrors, email: null })\n                setSigninValues({ ...signinValues, email: val })\n              }}\n              error={signinErrors.email && signinErrors.email}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mt-3\">\n          <Col>\n            <InputField \n              type=\"password\"\n              label=\"Password\"\n              nameAttr=\"password\"\n              value={signinValues.password}\n              changed={(val) => {\n                setSigninErrors({ ...signinErrors, password: null })\n                setSigninValues({ ...signinValues, password: val })\n              }}\n              error={signinErrors.password && signinErrors.password}\n            />\n          </Col>\n        </Row>\n        <p className={styles.resetPassword}>\n          <Link to=\"/password/email\">Forgot password?</Link>\n        </p>\n        <Button \n          clicked={handleSubmit} \n          fullWidth \n          className=\"mt-4\" \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n          disabled={loading}\n          loading={loading}\n        >\n          Login\n        </Button>\n        <p className={[styles.authLink, 'mt-3'].join(' ')}>\n          Don’t have an account? <Link to={pageUrl.SIGNUP_PAGE}>Register</Link>\n        </p>\n      </div>\n    </div>\n  );\n}\n\n\nexport default SignIn;","/home/tga/Desktop/gypsy-capital/src/pages/HomePage/HomePage.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/Products/Products.jsx",[],"/home/tga/Desktop/gypsy-capital/src/utils/nigeriaStates.js",[],"/home/tga/Desktop/gypsy-capital/src/components/PersonalForm/PersonalForm.jsx",["397","398","399","400"],"/home/tga/Desktop/gypsy-capital/src/components/BankInfoForm/BankInfoForm.jsx",["401","402","403"],"import React, { useState, useRef, useMemo, useContext, useEffect } from 'react';\nimport styles from './BankInfoForm.module.scss';\nimport { Row, Col } from 'react-bootstrap';\nimport InputField from '../InputField/InputField';\nimport FileUploadButton from '../FileUploadButton/FileUploadButton';\nimport { FaCloudUploadAlt } from 'react-icons/fa';\nimport Button from '../Button/Button';\nimport { Context as BankContext } from '../../context/BankCotext';\nimport { Context as LoanContext } from '../../context/LoanContext';\nimport { validateInput } from '../../utils/validateInput';\nimport { ToastContainer, toast } from 'react-toastify';\nimport BeatLoader from 'react-spinners/BeatLoader';\n\n\nconst BankInfoForm = ({ submitBankInfo }) => {\n\n  const { state: { loading } } = useContext(LoanContext);\n\n  const { \n    state: { bankList, userBankDetails, bankLoading }, \n    getBankList, \n    verifyBankInfo,\n  } = useContext(BankContext);\n\n  const [bankInfo, setBankInfo] = useState({\n    bankName: \"\",\n    accountType: \"\",\n    accountNumber: \"\",\n    accountName: \"\",\n  })\n\n  const [bankErrors, setBankErrors] = useState({\n    bankName: null,\n    accountType: null,\n    accountNumber: null,\n  })\n\n  useEffect(() => {\n    (async() => {\n      await getBankList();\n    })()\n  }, [])\n \n  const bankNames = useMemo(() => {\n    return bankList ? \n      bankList.map((bank) => bank.name) :\n      []\n  }, [bankList])\n\n  const acctStatementRef = useRef();\n\n  const uploadBankInfo = () => {\n    if(acctStatementRef.current.files.length > 0) {\n      const acctStatement = acctStatementRef.current.files[0];\n      const validated = validateInput(bankInfo, setBankErrors);\n      if(validated) {\n        // console.log('validated')\n        const data = new FormData();\n        data.append('bank_name', bankInfo.bankName);\n        data.append('bank_account_type', bankInfo.accountType);\n        data.append('bank_account_number', bankInfo.accountNumber);\n        data.append('bank_account_name', bankInfo.accountName);\n        data.append('image', acctStatement);\n\n        // addBankInfoForLoan(data, user.user_id);\n        submitBankInfo(data);\n      }\n    } else {\n      toast.error(\"You need to upload your account statement to be able to proceed\")\n    }\n  }\n\n  useEffect(() => {\n    if(bankInfo.accountNumber.length === 10 && bankInfo.bankName) {\n      const bank = bankList.find(bank => bank.name.toLowerCase() === bankInfo.bankName);\n      const bankCode = bank.code;\n      console.log(bankCode)\n      verifyBankInfo(bankInfo.accountNumber, bankCode)\n    }\n  }, [bankInfo.accountNumber, bankInfo.bankName])\n\n  useEffect(() => {\n    console.log(userBankDetails);\n    if(userBankDetails) {\n      setBankInfo({ ...bankInfo, accountName: userBankDetails.account_name })\n    }\n  }, [userBankDetails]);\n\n  return (\n    <div className={styles.bankInfo}>\n      <ToastContainer position=\"top-center\" />\n      <p className={styles.importantInfo}>Bank account provided must be your salary account</p>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"select\"\n            nameAttr=\"bankName\"\n            label=\"Bank Name\"\n            options={bankNames}\n            value={bankInfo.bankName}\n            changed={(val) => {\n              setBankErrors({ ...bankErrors, bankName: null })\n              setBankInfo({ ...bankInfo, bankName: val })\n            }}\n            error={bankErrors.bankName && bankErrors.bankName}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"select\"\n            nameAttr=\"accountType\"\n            label=\"Bank Account Type\"\n            options={['Savings', 'Current']}\n            value={bankInfo.accountType}\n            changed={(val) => {\n              setBankErrors({ ...bankErrors, accountType: null })\n              setBankInfo({ ...bankInfo, accountType: val })\n            }}\n            error={bankErrors.accountType && bankErrors.accountType}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            nameAttr=\"acctNumber\"\n            label=\"Account Number\"\n            value={bankInfo.accountNumber}\n            changed={(val) => {\n              setBankErrors({ ...bankErrors, accountNumber: null })\n              setBankInfo({ ...bankInfo, accountNumber: val })\n            }}\n            error={bankErrors.accountNumber && bankErrors.accountNumber}\n          />\n        </Col>\n        <Col>\n          { !bankLoading ? <InputField \n            type=\"type\"\n            nameAttr=\"acctName\"\n            label=\"Account Name\"\n            value={bankInfo.accountName}\n            disable={true}\n            changed={(val) => setBankInfo({ ...bankInfo, accountName: val })}\n          /> : \n            <div className={styles.loaderWrapper}>\n              <BeatLoader color=\"#741763\" size={10} />\n            </div>\n          }\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <FileUploadButton \n            label=\"Choose file\"\n            icon={<FaCloudUploadAlt className=\"ml-3\" size=\"1.2em\" />}\n            id=\"acct-statement-upload\" \n            fileRef={acctStatementRef}\n            visibleLabel=\"Statement of Account\"\n            fullwidth\n          />\n          <p className={styles.inputHint}>Please provide your 6 months bank statement to us.</p>\n        </Col>\n      </Row>\n      <Button \n        className=\"mt-5\" \n        fullWidth \n        clicked={uploadBankInfo} \n        bgColor=\"#741763\" \n        size=\"lg\" \n        color=\"#EBEBEB\"\n        disabled={loading}\n        loading={loading}\n      >\n        Submit\n      </Button>\n    </div>\n  )\n}\n\nexport default BankInfoForm;","/home/tga/Desktop/gypsy-capital/src/components/EmployerInfoForm/EmployerInfoForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/utils/mappedLgas.js",[],"/home/tga/Desktop/gypsy-capital/src/components/ModalForm/ModalForm.jsx",["404","405","406"],"/home/tga/Desktop/gypsy-capital/src/context/MonoContext.js",["407","408","409","410"],"/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerOverview/AuthorizerOverview.jsx",["411"],"/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerLoanDetails/AuthorizerLoanDetails.jsx",["412"],"/home/tga/Desktop/gypsy-capital/src/utils/validateInput.js",["413","414"],"/home/tga/Desktop/gypsy-capital/src/components/OfferLetter/OfferLetterForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/hooks/usePagination.js",["415"],"/home/tga/Desktop/gypsy-capital/src/components/LoanModal/LoanModal.jsx",["416","417"],"/home/tga/Desktop/gypsy-capital/src/components/NavBar/NavBar.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/ProgressBar/ProgressBar.jsx",[],"/home/tga/Desktop/gypsy-capital/src/context/RepaymentContext.js",[],"/home/tga/Desktop/gypsy-capital/src/pages/LoanDetail/LoanDetail.jsx",["418","419","420","421"],{"ruleId":"422","replacedBy":"423"},{"ruleId":"424","replacedBy":"425"},{"ruleId":"422","replacedBy":"426"},{"ruleId":"424","replacedBy":"427"},{"ruleId":"428","severity":1,"message":"429","line":9,"column":30,"nodeType":"430","messageId":"431","endLine":9,"endColumn":34},{"ruleId":"432","severity":1,"message":"433","line":4,"column":1,"nodeType":"434","endLine":34,"endColumn":2},{"ruleId":"422","replacedBy":"435"},{"ruleId":"424","replacedBy":"436"},{"ruleId":"437","severity":1,"message":"438","line":47,"column":6,"nodeType":"439","endLine":47,"endColumn":13,"suggestions":"440"},{"ruleId":"441","severity":1,"message":"442","line":64,"column":33,"nodeType":"443","messageId":"444","endLine":64,"endColumn":34,"suggestions":"445"},{"ruleId":"441","severity":1,"message":"442","line":64,"column":58,"nodeType":"443","messageId":"444","endLine":64,"endColumn":59,"suggestions":"446"},{"ruleId":"437","severity":1,"message":"438","line":29,"column":6,"nodeType":"439","endLine":29,"endColumn":13,"suggestions":"447"},{"ruleId":"437","severity":1,"message":"448","line":36,"column":5,"nodeType":"439","endLine":36,"endColumn":15,"suggestions":"449"},{"ruleId":"428","severity":1,"message":"450","line":5,"column":8,"nodeType":"430","messageId":"431","endLine":5,"endColumn":14},{"ruleId":"428","severity":1,"message":"451","line":1,"column":28,"nodeType":"430","messageId":"431","endLine":1,"endColumn":36},{"ruleId":"428","severity":1,"message":"450","line":3,"column":8,"nodeType":"430","messageId":"431","endLine":3,"endColumn":14},{"ruleId":"437","severity":1,"message":"452","line":21,"column":6,"nodeType":"439","endLine":21,"endColumn":8,"suggestions":"453"},{"ruleId":"428","severity":1,"message":"454","line":9,"column":25,"nodeType":"430","messageId":"431","endLine":9,"endColumn":29},{"ruleId":"455","severity":1,"message":"456","line":33,"column":11,"nodeType":"457","endLine":40,"endColumn":14},{"ruleId":"428","severity":1,"message":"450","line":6,"column":8,"nodeType":"430","messageId":"431","endLine":6,"endColumn":14},{"ruleId":"437","severity":1,"message":"452","line":22,"column":6,"nodeType":"439","endLine":22,"endColumn":8,"suggestions":"458"},{"ruleId":"437","severity":1,"message":"459","line":23,"column":6,"nodeType":"439","endLine":23,"endColumn":8,"suggestions":"460"},{"ruleId":"428","severity":1,"message":"461","line":17,"column":8,"nodeType":"430","messageId":"431","endLine":17,"endColumn":22},{"ruleId":"428","severity":1,"message":"462","line":18,"column":8,"nodeType":"430","messageId":"431","endLine":18,"endColumn":16},{"ruleId":"428","severity":1,"message":"463","line":18,"column":20,"nodeType":"430","messageId":"431","endLine":18,"endColumn":29},{"ruleId":"428","severity":1,"message":"464","line":19,"column":8,"nodeType":"430","messageId":"431","endLine":19,"endColumn":23},{"ruleId":"428","severity":1,"message":"465","line":29,"column":36,"nodeType":"430","messageId":"431","endLine":29,"endColumn":50},{"ruleId":"428","severity":1,"message":"466","line":29,"column":96,"nodeType":"430","messageId":"431","endLine":29,"endColumn":115},{"ruleId":"437","severity":1,"message":"467","line":37,"column":6,"nodeType":"439","endLine":37,"endColumn":13,"suggestions":"468"},{"ruleId":"437","severity":1,"message":"469","line":72,"column":6,"nodeType":"439","endLine":72,"endColumn":8,"suggestions":"470"},{"ruleId":"437","severity":1,"message":"471","line":87,"column":6,"nodeType":"439","endLine":87,"endColumn":16,"suggestions":"472"},{"ruleId":"437","severity":1,"message":"473","line":168,"column":8,"nodeType":"439","endLine":168,"endColumn":22,"suggestions":"474"},{"ruleId":"437","severity":1,"message":"475","line":382,"column":6,"nodeType":"439","endLine":382,"endColumn":16,"suggestions":"476"},{"ruleId":"437","severity":1,"message":"477","line":649,"column":6,"nodeType":"439","endLine":649,"endColumn":8,"suggestions":"478"},{"ruleId":"428","severity":1,"message":"450","line":6,"column":8,"nodeType":"430","messageId":"431","endLine":6,"endColumn":14},{"ruleId":"437","severity":1,"message":"459","line":22,"column":6,"nodeType":"439","endLine":22,"endColumn":8,"suggestions":"479"},{"ruleId":"428","severity":1,"message":"480","line":8,"column":10,"nodeType":"430","messageId":"431","endLine":8,"endColumn":21},{"ruleId":"432","severity":1,"message":"433","line":4,"column":1,"nodeType":"434","endLine":28,"endColumn":2},{"ruleId":"437","severity":1,"message":"459","line":11,"column":7,"nodeType":"439","endLine":11,"endColumn":9,"suggestions":"481"},{"ruleId":"437","severity":1,"message":"482","line":15,"column":6,"nodeType":"439","endLine":15,"endColumn":13,"suggestions":"483"},{"ruleId":"437","severity":1,"message":"484","line":19,"column":6,"nodeType":"439","endLine":19,"endColumn":17,"suggestions":"485"},{"ruleId":"486","severity":1,"message":"487","line":66,"column":21,"nodeType":"457","endLine":66,"endColumn":74},{"ruleId":"437","severity":1,"message":"488","line":42,"column":6,"nodeType":"439","endLine":42,"endColumn":8,"suggestions":"489"},{"ruleId":"428","severity":1,"message":"490","line":36,"column":31,"nodeType":"430","messageId":"431","endLine":36,"endColumn":40},{"ruleId":"437","severity":1,"message":"491","line":95,"column":6,"nodeType":"439","endLine":95,"endColumn":70,"suggestions":"492"},{"ruleId":"428","severity":1,"message":"493","line":13,"column":5,"nodeType":"430","messageId":"431","endLine":13,"endColumn":21},{"ruleId":"437","severity":1,"message":"494","line":33,"column":6,"nodeType":"439","endLine":33,"endColumn":8,"suggestions":"495"},{"ruleId":"437","severity":1,"message":"438","line":47,"column":6,"nodeType":"439","endLine":47,"endColumn":13,"suggestions":"496"},{"ruleId":"432","severity":1,"message":"433","line":4,"column":1,"nodeType":"434","endLine":22,"endColumn":2},{"ruleId":"428","severity":1,"message":"450","line":2,"column":8,"nodeType":"430","messageId":"431","endLine":2,"endColumn":14},{"ruleId":"428","severity":1,"message":"454","line":5,"column":25,"nodeType":"430","messageId":"431","endLine":5,"endColumn":29},{"ruleId":"428","severity":1,"message":"497","line":10,"column":11,"nodeType":"430","messageId":"431","endLine":10,"endColumn":14},{"ruleId":"428","severity":1,"message":"498","line":18,"column":11,"nodeType":"430","messageId":"431","endLine":18,"endColumn":15},{"ruleId":"437","severity":1,"message":"459","line":28,"column":6,"nodeType":"439","endLine":28,"endColumn":8,"suggestions":"499"},{"ruleId":"437","severity":1,"message":"500","line":33,"column":6,"nodeType":"439","endLine":33,"endColumn":8,"suggestions":"501"},{"ruleId":"437","severity":1,"message":"502","line":41,"column":6,"nodeType":"439","endLine":41,"endColumn":22,"suggestions":"503"},{"ruleId":"437","severity":1,"message":"504","line":36,"column":6,"nodeType":"439","endLine":36,"endColumn":8,"suggestions":"505"},{"ruleId":"506","severity":1,"message":"507","line":45,"column":15,"nodeType":"457","endLine":45,"endColumn":26},{"ruleId":"506","severity":1,"message":"507","line":48,"column":15,"nodeType":"457","endLine":48,"endColumn":26},{"ruleId":"506","severity":1,"message":"507","line":51,"column":15,"nodeType":"457","endLine":51,"endColumn":26},{"ruleId":"437","severity":1,"message":"438","line":20,"column":6,"nodeType":"439","endLine":20,"endColumn":13,"suggestions":"508"},{"ruleId":"509","severity":1,"message":"510","line":44,"column":11,"nodeType":"457","endLine":44,"endColumn":45},{"ruleId":"437","severity":1,"message":"511","line":89,"column":6,"nodeType":"439","endLine":89,"endColumn":8,"suggestions":"512"},{"ruleId":"437","severity":1,"message":"438","line":35,"column":6,"nodeType":"439","endLine":35,"endColumn":13,"suggestions":"513"},{"ruleId":"428","severity":1,"message":"450","line":3,"column":8,"nodeType":"430","messageId":"431","endLine":3,"endColumn":14},{"ruleId":"437","severity":1,"message":"459","line":22,"column":6,"nodeType":"439","endLine":22,"endColumn":8,"suggestions":"514"},{"ruleId":"437","severity":1,"message":"504","line":39,"column":6,"nodeType":"439","endLine":39,"endColumn":8,"suggestions":"515"},{"ruleId":"432","severity":1,"message":"433","line":7,"column":1,"nodeType":"434","endLine":29,"endColumn":2},{"ruleId":"428","severity":1,"message":"516","line":39,"column":22,"nodeType":"430","messageId":"431","endLine":39,"endColumn":35},{"ruleId":"437","severity":1,"message":"517","line":103,"column":6,"nodeType":"439","endLine":103,"endColumn":8,"suggestions":"518"},{"ruleId":"437","severity":1,"message":"519","line":116,"column":6,"nodeType":"439","endLine":116,"endColumn":37,"suggestions":"520"},{"ruleId":"437","severity":1,"message":"469","line":500,"column":6,"nodeType":"439","endLine":500,"endColumn":8,"suggestions":"521"},{"ruleId":"437","severity":1,"message":"522","line":515,"column":6,"nodeType":"439","endLine":515,"endColumn":49,"suggestions":"523"},{"ruleId":"437","severity":1,"message":"524","line":523,"column":6,"nodeType":"439","endLine":523,"endColumn":23,"suggestions":"525"},{"ruleId":"437","severity":1,"message":"526","line":713,"column":6,"nodeType":"439","endLine":713,"endColumn":8,"suggestions":"527"},{"ruleId":"437","severity":1,"message":"438","line":28,"column":6,"nodeType":"439","endLine":28,"endColumn":13,"suggestions":"528"},{"ruleId":"437","severity":1,"message":"529","line":32,"column":6,"nodeType":"439","endLine":32,"endColumn":8,"suggestions":"530"},{"ruleId":"437","severity":1,"message":"522","line":103,"column":6,"nodeType":"439","endLine":103,"endColumn":49,"suggestions":"531"},{"ruleId":"437","severity":1,"message":"524","line":111,"column":6,"nodeType":"439","endLine":111,"endColumn":23,"suggestions":"532"},{"ruleId":"437","severity":1,"message":"519","line":136,"column":6,"nodeType":"439","endLine":136,"endColumn":25,"suggestions":"533"},{"ruleId":"437","severity":1,"message":"469","line":42,"column":6,"nodeType":"439","endLine":42,"endColumn":8,"suggestions":"534"},{"ruleId":"437","severity":1,"message":"522","line":80,"column":6,"nodeType":"439","endLine":80,"endColumn":49,"suggestions":"535"},{"ruleId":"437","severity":1,"message":"524","line":87,"column":6,"nodeType":"439","endLine":87,"endColumn":23,"suggestions":"536"},{"ruleId":"428","severity":1,"message":"537","line":77,"column":9,"nodeType":"430","messageId":"431","endLine":77,"endColumn":19},{"ruleId":"437","severity":1,"message":"438","line":375,"column":6,"nodeType":"439","endLine":375,"endColumn":13,"suggestions":"538"},{"ruleId":"437","severity":1,"message":"539","line":387,"column":6,"nodeType":"439","endLine":387,"endColumn":17,"suggestions":"540"},{"ruleId":"428","severity":1,"message":"541","line":4,"column":8,"nodeType":"430","messageId":"431","endLine":4,"endColumn":15},{"ruleId":"428","severity":1,"message":"542","line":98,"column":7,"nodeType":"430","messageId":"431","endLine":98,"endColumn":35},{"ruleId":"428","severity":1,"message":"543","line":101,"column":11,"nodeType":"430","messageId":"431","endLine":101,"endColumn":16},{"ruleId":"428","severity":1,"message":"544","line":102,"column":11,"nodeType":"430","messageId":"431","endLine":102,"endColumn":19},{"ruleId":"437","severity":1,"message":"504","line":39,"column":6,"nodeType":"439","endLine":39,"endColumn":8,"suggestions":"545"},{"ruleId":"437","severity":1,"message":"477","line":28,"column":6,"nodeType":"439","endLine":28,"endColumn":8,"suggestions":"546"},{"ruleId":"441","severity":1,"message":"442","line":3,"column":31,"nodeType":"443","messageId":"444","endLine":3,"endColumn":32,"suggestions":"547"},{"ruleId":"441","severity":1,"message":"442","line":3,"column":56,"nodeType":"443","messageId":"444","endLine":3,"endColumn":57,"suggestions":"548"},{"ruleId":"432","severity":1,"message":"433","line":5,"column":1,"nodeType":"434","endLine":56,"endColumn":2},{"ruleId":"437","severity":1,"message":"526","line":121,"column":6,"nodeType":"439","endLine":121,"endColumn":8,"suggestions":"549"},{"ruleId":"437","severity":1,"message":"438","line":174,"column":6,"nodeType":"439","endLine":174,"endColumn":13,"suggestions":"550"},{"ruleId":"437","severity":1,"message":"551","line":47,"column":6,"nodeType":"439","endLine":47,"endColumn":12,"suggestions":"552"},{"ruleId":"428","severity":1,"message":"553","line":204,"column":20,"nodeType":"430","messageId":"431","endLine":204,"endColumn":27},{"ruleId":"437","severity":1,"message":"554","line":208,"column":6,"nodeType":"439","endLine":208,"endColumn":8,"suggestions":"555"},{"ruleId":"437","severity":1,"message":"477","line":302,"column":6,"nodeType":"439","endLine":302,"endColumn":8,"suggestions":"556"},"no-native-reassign",["557"],"no-negated-in-lhs",["558"],["557"],["558"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["557"],["558"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clearErrors'. Either include it or remove the dependency array.","ArrayExpression",["559"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["560","561"],["562","563"],["564"],"React Hook useEffect has a missing dependency: 'loanData'. Either include it or remove the dependency array. You can also do a functional update 'setLoanData(l => ...)' if you only need 'loanData' in the 'setLoanData' call.",["565"],"'styles' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getClientListForRole'. Either include it or remove the dependency array.",["566"],"'Link' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement",["567"],"React Hook useEffect has a missing dependency: 'retrieveClientLoans'. Either include it or remove the dependency array.",["568"],"'OfferLetterPdf' is defined but never used.","'ReactPDF' is defined but never used.","'PDFViewer' is defined but never used.","'OfferLetterForm' is defined but never used.","'approvedStatus' is assigned a value but never used.","'resetApprovalStatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'clearError'. Either include it or remove the dependency array.",["569"],"React Hook useEffect has a missing dependency: 'getBankList'. Either include it or remove the dependency array.",["570"],"React Hook useEffect has a missing dependency: 'approvalData'. Either include it or remove the dependency array. You can also do a functional update 'setApprovalData(a => ...)' if you only need 'approvalData' in the 'setApprovalData' call.",["571"],"React Hook useEffect has a missing dependency: 'clientBank'. Either include it or remove the dependency array. Outer scope values like 'disburseBank' aren't valid dependencies because mutating them doesn't re-render the component.",["572"],"React Hook useEffect has a missing dependency: 'repayData'. Either include it or remove the dependency array. You can also do a functional update 'setRepayData(r => ...)' if you only need 'repayData' in the 'setRepayData' call.",["573"],"React Hook useEffect has missing dependencies: 'loanId' and 'retrieveLoan'. Either include them or remove the dependency array.",["574"],["575"],"'RiUser3Fill' is defined but never used.",["576"],"React Hook useMemo has a missing dependency: 'clientId'. Either include it or remove the dependency array.",["577"],"React Hook useEffect has a missing dependency: 'retrieveLoan'. Either include it or remove the dependency array.",["578"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has a missing dependency: 'returnNumber'. Either include it or remove the dependency array. If 'setFaqs' needs the current value of 'returnNumber', you can also switch to useReducer instead of useState and read 'returnNumber' in the reducer.",["579"],"'loanApply' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loanCalcData'. Either include it or remove the dependency array. You can also do a functional update 'setLoanCalcData(l => ...)' if you only need 'loanCalcData' in the 'setLoanCalcData' call.",["580"],"'resetLinkSuccess' is assigned a value but never used.","React Hook React.useMemo has missing dependencies: 'authenticateUser' and 'user.user_id'. Either include them or remove the dependency array.",["581"],["582"],"'url' is assigned a value but never used.","'path' is assigned a value but never used.",["583"],"React Hook useEffect has missing dependencies: 'clearErrors' and 'getClientListForRole'. Either include them or remove the dependency array.",["584"],"React Hook useMemo has a missing dependency: 'user.user_id'. Either include it or remove the dependency array.",["585"],"React Hook useEffect has missing dependencies: 'getClientListForRole' and 'retrieveClientLoans'. Either include them or remove the dependency array.",["586"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["587"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'clientId' and 'getClientDetails'. Either include them or remove the dependency array.",["588"],["589"],["590"],["591"],"'setLgaLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentAddedUser' and 'getClientDetails'. Either include them or remove the dependency array.",["592"],"React Hook useEffect has a missing dependency: 'biodata'. Either include it or remove the dependency array. You can also do a functional update 'setBiodata(b => ...)' if you only need 'biodata' in the 'setBiodata' call.",["593"],["594"],"React Hook useEffect has missing dependencies: 'bankList' and 'verifyBankInfo'. Either include them or remove the dependency array.",["595"],"React Hook useEffect has a missing dependency: 'bankInfo'. Either include it or remove the dependency array. You can also do a functional update 'setBankInfo(b => ...)' if you only need 'bankInfo' in the 'setBankInfo' call.",["596"],"React Hook useEffect has a missing dependency: 'close'. Either include it or remove the dependency array. If 'close' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["597"],["598"],"React Hook useEffect has missing dependencies: 'getBankList', 'getClientDetails', and 'user.user_id'. Either include them or remove the dependency array.",["599"],["600"],["601"],["602"],["603"],["604"],["605"],"'emptyState' is assigned a value but never used.",["606"],"React Hook useEffect has a missing dependency: 'clearErr'. Either include it or remove the dependency array.",["607"],"'history' is defined but never used.","'getAccountTransactionHistory' is assigned a value but never used.","'token' is assigned a value but never used.","'response' is assigned a value but never used.",["608"],["609"],["610","611"],["612","613"],["614"],["615"],"React Hook useEffect has a missing dependency: 'basicInfo'. Either include it or remove the dependency array. You can also do a functional update 'setBasicInfo(b => ...)' if you only need 'basicInfo' in the 'setBasicInfo' call.",["616"],"'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loanId' and 'verifyRepaymentStatus'. Either include them or remove the dependency array.",["617"],["618"],"no-global-assign","no-unsafe-negation",{"desc":"619","fix":"620"},{"messageId":"621","fix":"622","desc":"623"},{"messageId":"624","fix":"625","desc":"626"},{"messageId":"621","fix":"627","desc":"623"},{"messageId":"624","fix":"628","desc":"626"},{"desc":"619","fix":"629"},{"desc":"630","fix":"631"},{"desc":"632","fix":"633"},{"desc":"632","fix":"634"},{"desc":"635","fix":"636"},{"desc":"637","fix":"638"},{"desc":"639","fix":"640"},{"desc":"641","fix":"642"},{"desc":"643","fix":"644"},{"desc":"645","fix":"646"},{"desc":"647","fix":"648"},{"desc":"635","fix":"649"},{"desc":"635","fix":"650"},{"desc":"651","fix":"652"},{"desc":"653","fix":"654"},{"desc":"655","fix":"656"},{"desc":"657","fix":"658"},{"desc":"659","fix":"660"},{"desc":"619","fix":"661"},{"desc":"635","fix":"662"},{"desc":"663","fix":"664"},{"desc":"665","fix":"666"},{"desc":"667","fix":"668"},{"desc":"619","fix":"669"},{"desc":"670","fix":"671"},{"desc":"619","fix":"672"},{"desc":"635","fix":"673"},{"desc":"667","fix":"674"},{"desc":"675","fix":"676"},{"desc":"677","fix":"678"},{"desc":"639","fix":"679"},{"desc":"680","fix":"681"},{"desc":"682","fix":"683"},{"desc":"684","fix":"685"},{"desc":"619","fix":"686"},{"desc":"687","fix":"688"},{"desc":"680","fix":"689"},{"desc":"682","fix":"690"},{"desc":"691","fix":"692"},{"desc":"639","fix":"693"},{"desc":"680","fix":"694"},{"desc":"682","fix":"695"},{"desc":"619","fix":"696"},{"desc":"697","fix":"698"},{"desc":"667","fix":"699"},{"desc":"647","fix":"700"},{"messageId":"621","fix":"701","desc":"623"},{"messageId":"624","fix":"702","desc":"626"},{"messageId":"621","fix":"703","desc":"623"},{"messageId":"624","fix":"704","desc":"626"},{"desc":"684","fix":"705"},{"desc":"619","fix":"706"},{"desc":"707","fix":"708"},{"desc":"709","fix":"710"},{"desc":"647","fix":"711"},"Update the dependencies array to be: [clearErrors, error]",{"range":"712","text":"713"},"removeEscape",{"range":"714","text":"715"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"716","text":"717"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"718","text":"715"},{"range":"719","text":"717"},{"range":"720","text":"713"},"Update the dependencies array to be: [loanData, location]",{"range":"721","text":"722"},"Update the dependencies array to be: [getClientListForRole]",{"range":"723","text":"724"},{"range":"725","text":"724"},"Update the dependencies array to be: [retrieveClientLoans]",{"range":"726","text":"727"},"Update the dependencies array to be: [clearError, error]",{"range":"728","text":"729"},"Update the dependencies array to be: [getBankList]",{"range":"730","text":"731"},"Update the dependencies array to be: [approvalData, loanData]",{"range":"732","text":"733"},"Update the dependencies array to be: [clientBank]",{"range":"734","text":"735"},"Update the dependencies array to be: [loanData, repayData]",{"range":"736","text":"737"},"Update the dependencies array to be: [loanId, retrieveLoan]",{"range":"738","text":"739"},{"range":"740","text":"727"},{"range":"741","text":"727"},"Update the dependencies array to be: [clientId, loans]",{"range":"742","text":"743"},"Update the dependencies array to be: [retrieveLoan, userLoans]",{"range":"744","text":"745"},"Update the dependencies array to be: [returnNumber]",{"range":"746","text":"747"},"Update the dependencies array to be: [monthlySalary, loanAmount, installmentPeriod, loanCalcData.dti, loanCalcData]",{"range":"748","text":"749"},"Update the dependencies array to be: [authenticateUser, user.user_id]",{"range":"750","text":"751"},{"range":"752","text":"713"},{"range":"753","text":"727"},"Update the dependencies array to be: [clearErrors, getClientListForRole]",{"range":"754","text":"755"},"Update the dependencies array to be: [clientsForRole, user.user_id]",{"range":"756","text":"757"},"Update the dependencies array to be: [getClientListForRole, retrieveClientLoans]",{"range":"758","text":"759"},{"range":"760","text":"713"},"Update the dependencies array to be: [clientId, getClientDetails]",{"range":"761","text":"762"},{"range":"763","text":"713"},{"range":"764","text":"727"},{"range":"765","text":"759"},"Update the dependencies array to be: [currentAddedUser, getClientDetails]",{"range":"766","text":"767"},"Update the dependencies array to be: [biodata, currentAddedUser, userDetails]",{"range":"768","text":"769"},{"range":"770","text":"731"},"Update the dependencies array to be: [bankInfo.accountNumber, bankInfo.bankName, bankList, verifyBankInfo]",{"range":"771","text":"772"},"Update the dependencies array to be: [bankInfo, userBankDetails]",{"range":"773","text":"774"},"Update the dependencies array to be: [close]",{"range":"775","text":"776"},{"range":"777","text":"713"},"Update the dependencies array to be: [getBankList, getClientDetails, user.user_id]",{"range":"778","text":"779"},{"range":"780","text":"772"},{"range":"781","text":"774"},"Update the dependencies array to be: [biodata, user, userDetails]",{"range":"782","text":"783"},{"range":"784","text":"731"},{"range":"785","text":"772"},{"range":"786","text":"774"},{"range":"787","text":"713"},"Update the dependencies array to be: [clearErr, userError]",{"range":"788","text":"789"},{"range":"790","text":"759"},{"range":"791","text":"739"},{"range":"792","text":"715"},{"range":"793","text":"717"},{"range":"794","text":"715"},{"range":"795","text":"717"},{"range":"796","text":"776"},{"range":"797","text":"713"},"Update the dependencies array to be: [basicInfo, data]",{"range":"798","text":"799"},"Update the dependencies array to be: [loanId, verifyRepaymentStatus]",{"range":"800","text":"801"},{"range":"802","text":"739"},[1192,1199],"[clearErrors, error]",[1464,1465],"",[1464,1464],"\\",[1489,1490],[1489,1489],[868,875],[1043,1053],"[loanData, location]",[844,846],"[getClientListForRole]",[837,839],[904,906],"[retrieveClientLoans]",[1878,1885],"[clearError, error]",[2630,2632],"[getBankList]",[3103,3113],"[approvalData, loanData]",[5871,5885],"[clientBank]",[12393,12403],"[loanData, repayData]",[19714,19716],"[loanId, retrieveLoan]",[819,821],[375,377],[493,500],"[clientId, loans]",[564,575],"[retrieveLoan, userLoans]",[1186,1188],"[returnNumber]",[2869,2933],"[monthlySalary, loanAmount, installmentPeriod, loanCalcData.dti, loanCalcData]",[1060,1062],"[authenticateUser, user.user_id]",[1332,1339],[1105,1107],[1308,1310],"[clearErrors, getClientListForRole]",[1526,1542],"[clientsForRole, user.user_id]",[1596,1598],"[getClientListForRole, retrieveClientLoans]",[664,671],[2829,2831],"[clientId, getClientDetails]",[1036,1043],[812,814],[1811,1813],[2818,2820],"[currentAddedUser, getClientDetails]",[3184,3215],"[biodata, currentAddedUser, userDetails]",[14599,14601],[15039,15082],"[bankInfo.accountNumber, bankInfo.bankName, bankList, verifyBankInfo]",[15255,15272],"[bankInfo, userBankDetails]",[21241,21243],"[close]",[882,889],[1094,1096],"[getBankList, getClientDetails, user.user_id]",[2707,2750],[2923,2940],[3787,3806],"[biodata, user, userDetails]",[1268,1270],[2545,2588],[2760,2777],[10218,10225],[10372,10383],"[clearErr, userError]",[1813,1815],[1156,1158],[92,93],[92,92],[117,118],[117,117],[3009,3011],[4188,4195],[1696,1702],"[basicInfo, data]",[5923,5925],"[loanId, verifyRepaymentStatus]",[8621,8623]]