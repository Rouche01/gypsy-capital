[{"/home/tga/Desktop/gypsy-capital/src/index.js":"1","/home/tga/Desktop/gypsy-capital/src/pages/pages.js":"2","/home/tga/Desktop/gypsy-capital/src/context/AuthContext.js":"3","/home/tga/Desktop/gypsy-capital/src/context/BankCotext.js":"4","/home/tga/Desktop/gypsy-capital/src/routes/pageUrl.js":"5","/home/tga/Desktop/gypsy-capital/src/context/ApprovalContext.js":"6","/home/tga/Desktop/gypsy-capital/src/routes/protectedroute/ProtectedRoute.js":"7","/home/tga/Desktop/gypsy-capital/src/context/createPersistDataContext.js":"8","/home/tga/Desktop/gypsy-capital/src/pages/SignUp/SignUp.jsx":"9","/home/tga/Desktop/gypsy-capital/src/pages/OtpVerify/OtpVerify.jsx":"10","/home/tga/Desktop/gypsy-capital/src/pages/LoanCalculator/LoanCalculator.jsx":"11","/home/tga/Desktop/gypsy-capital/src/pages/Faqs/Faqs.jsx":"12","/home/tga/Desktop/gypsy-capital/src/pages/Support/Support.jsx":"13","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorClients/ProcessorClients.jsx":"14","/home/tga/Desktop/gypsy-capital/src/pages/ContactPage/ContactPage.jsx":"15","/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerClients/AuthorizerClients.jsx":"16","/home/tga/Desktop/gypsy-capital/src/pages/LoanList/LoanList.jsx":"17","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorLoanDetails/ProcessorLoanDetails.jsx":"18","/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerLoans/AuthorizerLoans.jsx":"19","/home/tga/Desktop/gypsy-capital/src/routes/sidebarRoutes.js":"20","/home/tga/Desktop/gypsy-capital/src/hooks/useLoanDetails.js":"21","/home/tga/Desktop/gypsy-capital/src/components/Dashboard/Dashboard.jsx":"22","/home/tga/Desktop/gypsy-capital/src/components/Loader/Loader.jsx":"23","/home/tga/Desktop/gypsy-capital/src/components/StatBox/StatBox.jsx":"24","/home/tga/Desktop/gypsy-capital/src/components/ProcessOffer/ProcessOffer.jsx":"25","/home/tga/Desktop/gypsy-capital/src/components/Footer/Footer.jsx":"26","/home/tga/Desktop/gypsy-capital/src/components/FaqSection/FaqSection.jsx":"27","/home/tga/Desktop/gypsy-capital/src/components/LoanCalculatorForm/LoanCalculatorForm.jsx":"28","/home/tga/Desktop/gypsy-capital/src/components/FileUploadButton/FileUploadButton.js":"29","/home/tga/Desktop/gypsy-capital/src/components/BvnForm/BvnForm.jsx":"30","/home/tga/Desktop/gypsy-capital/src/components/MonoWidget/MonoWidget.jsx":"31","/home/tga/Desktop/gypsy-capital/src/context/LoanContext.js":"32","/home/tga/Desktop/gypsy-capital/src/context/createDataContext.js":"33","/home/tga/Desktop/gypsy-capital/src/pages/CreditReport/CreditReport.jsx":"34","/home/tga/Desktop/gypsy-capital/src/pages/Overview/Overview.jsx":"35","/home/tga/Desktop/gypsy-capital/src/pages/ClientListPage/ClientListPage.jsx":"36","/home/tga/Desktop/gypsy-capital/src/pages/AgentOverview/AgentOverview.jsx":"37","/home/tga/Desktop/gypsy-capital/src/pages/AboutUs/AboutUs.jsx":"38","/home/tga/Desktop/gypsy-capital/src/pages/ResetSuccess/ResetSuccess.jsx":"39","/home/tga/Desktop/gypsy-capital/src/pages/ForgotPassword/ForgotPassword.jsx":"40","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorClientDetails/ProcessorClientDetails.jsx":"41","/home/tga/Desktop/gypsy-capital/src/pages/ResetPassword/ResetPassword.jsx":"42","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorLoans/ProcessorLoans.jsx":"43","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorDashboard/ProcessorDashboard.jsx":"44","/home/tga/Desktop/gypsy-capital/src/hooks/useNavigateAfterAuth.js":"45","/home/tga/Desktop/gypsy-capital/src/components/IdentityForm/IdentityForm.jsx":"46","/home/tga/Desktop/gypsy-capital/src/components/NavTabs/NavTabs.jsx":"47","/home/tga/Desktop/gypsy-capital/src/components/ClientList/ClientList.jsx":"48","/home/tga/Desktop/gypsy-capital/src/components/LoanList/LoanList.jsx":"49","/home/tga/Desktop/gypsy-capital/src/components/OfferLetter/OfferLetter.jsx":"50","/home/tga/Desktop/gypsy-capital/src/components/LoanContactForm/LoanContactForm.jsx":"51","/home/tga/Desktop/gypsy-capital/src/components/AccountSetupModal/AccountSetupModal.jsx":"52"},{"size":548,"mtime":1615186108001,"results":"53","hashOfConfig":"54"},{"size":2387,"mtime":1615165250184,"results":"55","hashOfConfig":"54"},{"size":8060,"mtime":1615162900026,"results":"56","hashOfConfig":"54"},{"size":1970,"mtime":1615411153492,"results":"57","hashOfConfig":"54"},{"size":2456,"mtime":1615165274533,"results":"58","hashOfConfig":"54"},{"size":2656,"mtime":1615411153492,"results":"59","hashOfConfig":"54"},{"size":601,"mtime":1613641026802,"results":"60","hashOfConfig":"54"},{"size":821,"mtime":1612688150601,"results":"61","hashOfConfig":"54"},{"size":8013,"mtime":1615162061114,"results":"62","hashOfConfig":"54"},{"size":2391,"mtime":1612574568451,"results":"63","hashOfConfig":"54"},{"size":4802,"mtime":1615168879214,"results":"64","hashOfConfig":"54"},{"size":737,"mtime":1613020227334,"results":"65","hashOfConfig":"54"},{"size":473,"mtime":1614546415965,"results":"66","hashOfConfig":"54"},{"size":1079,"mtime":1614757571893,"results":"67","hashOfConfig":"54"},{"size":4838,"mtime":1615138268265,"results":"68","hashOfConfig":"54"},{"size":1072,"mtime":1614757665510,"results":"69","hashOfConfig":"54"},{"size":4424,"mtime":1615230346385,"results":"70","hashOfConfig":"54"},{"size":21149,"mtime":1615450279701,"results":"71","hashOfConfig":"54"},{"size":1045,"mtime":1615363832954,"results":"72","hashOfConfig":"54"},{"size":2677,"mtime":1614724878260,"results":"73","hashOfConfig":"54"},{"size":701,"mtime":1615230346353,"results":"74","hashOfConfig":"54"},{"size":4301,"mtime":1614470843592,"results":"75","hashOfConfig":"54"},{"size":244,"mtime":1614263157725,"results":"76","hashOfConfig":"54"},{"size":359,"mtime":1613662172186,"results":"77","hashOfConfig":"54"},{"size":2095,"mtime":1615286488757,"results":"78","hashOfConfig":"54"},{"size":1152,"mtime":1612102534435,"results":"79","hashOfConfig":"54"},{"size":2175,"mtime":1613020166641,"results":"80","hashOfConfig":"54"},{"size":8352,"mtime":1615190374516,"results":"81","hashOfConfig":"54"},{"size":665,"mtime":1611816481368,"results":"82","hashOfConfig":"54"},{"size":1331,"mtime":1612592363525,"results":"83","hashOfConfig":"54"},{"size":1633,"mtime":1615286487857,"results":"84","hashOfConfig":"54"},{"size":7730,"mtime":1614756252067,"results":"85","hashOfConfig":"54"},{"size":533,"mtime":1612421501467,"results":"86","hashOfConfig":"54"},{"size":498,"mtime":1613049821733,"results":"87","hashOfConfig":"54"},{"size":5197,"mtime":1613938100761,"results":"88","hashOfConfig":"54"},{"size":4660,"mtime":1615230346369,"results":"89","hashOfConfig":"54"},{"size":5044,"mtime":1615450279629,"results":"90","hashOfConfig":"54"},{"size":6604,"mtime":1615131206015,"results":"91","hashOfConfig":"54"},{"size":606,"mtime":1613846570517,"results":"92","hashOfConfig":"54"},{"size":1549,"mtime":1613844663739,"results":"93","hashOfConfig":"54"},{"size":4749,"mtime":1615230346385,"results":"94","hashOfConfig":"54"},{"size":3453,"mtime":1613889706632,"results":"95","hashOfConfig":"54"},{"size":1038,"mtime":1614577544983,"results":"96","hashOfConfig":"54"},{"size":5721,"mtime":1615450279669,"results":"97","hashOfConfig":"54"},{"size":990,"mtime":1614729905905,"results":"98","hashOfConfig":"54"},{"size":2430,"mtime":1613916529415,"results":"99","hashOfConfig":"54"},{"size":504,"mtime":1613386895718,"results":"100","hashOfConfig":"54"},{"size":3204,"mtime":1615363832802,"results":"101","hashOfConfig":"54"},{"size":3592,"mtime":1614577812286,"results":"102","hashOfConfig":"54"},{"size":10657,"mtime":1614664395859,"results":"103","hashOfConfig":"54"},{"size":6013,"mtime":1614449713718,"results":"104","hashOfConfig":"54"},{"size":21688,"mtime":1614430258872,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"t9s37o",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"108"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"108"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"108"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"108"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"108"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"108"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/tga/Desktop/gypsy-capital/src/index.js",[],["220","221"],"/home/tga/Desktop/gypsy-capital/src/pages/pages.js",[],"/home/tga/Desktop/gypsy-capital/src/context/AuthContext.js",[],"/home/tga/Desktop/gypsy-capital/src/context/BankCotext.js",[],"/home/tga/Desktop/gypsy-capital/src/routes/pageUrl.js",[],"/home/tga/Desktop/gypsy-capital/src/context/ApprovalContext.js",[],"/home/tga/Desktop/gypsy-capital/src/routes/protectedroute/ProtectedRoute.js",["222"],"/home/tga/Desktop/gypsy-capital/src/context/createPersistDataContext.js",["223"],"import React, {createContext, useReducer, useEffect } from 'react';\n\n\nexport default (reducer, actions, initialState, persist, saveData) => {\n  const Context = createContext();\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState, () => {\n      if(persist) {\n        const localData = localStorage.getItem('gypsy');\n        return localData ? JSON.parse(localData) : {}\n      }\n    });\n\n    useEffect(() => {\n      if(persist) {\n        saveData(state);\n        // console.log(state);\n      }\n    }, [state])\n\n    const boundActions = {}\n\n    for(let key in actions) {\n      boundActions[key] = actions[key](dispatch);\n    }\n\n    return (\n      <Context.Provider value={{ state, ...boundActions }}>{children}</Context.Provider>\n    )\n  }\n\n  return { Context, Provider }\n}","/home/tga/Desktop/gypsy-capital/src/pages/SignUp/SignUp.jsx",["224","225","226"],"import React, { useContext, useEffect, useState } from 'react';\nimport Logo from '../../assets/logo.png';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport styles from './SignUp.module.scss';\nimport { Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport pageUrl from '../../routes/pageUrl';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\nconst SignUp = () => {\n\n  const { \n    state: { loading, error }, \n    registerUser, \n    getActiveUser, \n    clearErrors \n  } = useContext(AuthContext);\n\n  const [signUpValues, setSignUpvalues] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    mobileNumber: '',\n    password: '',\n    confirmPassword: '',\n    referralChoice: ''\n  });\n\n  const [validationErrors, setValidationErrors] = useState({\n    firstName: null,\n    lastName: null,\n    email: null,\n    mobileNumber: null,\n    password: null,\n    confirmPassword: null,\n    referralChoice: null\n  })\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearErrors();\n    }\n  }, [error])\n\n  const referralOptions = [\n    'Search Engine', \n    'Google Ads', \n    'Email', \n    'Radio', \n    'TV', \n    'Newspaper', \n    'Word of mouth',\n    'Facebook',\n    'Instagram',\n    'Other'\n  ]\n\n  const validateInput = () => {\n\n    const validMail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    let validPhoneNumber = /^[0]\\d{10}$/;\n\n    const errorsInit = {};\n    let fields = { ...signUpValues }\n\n    for(const key in fields) {\n      if(!fields[key]) {\n        errorsInit[key] = \"This field is required\";\n      } \n      if(fields.email && !fields.email.match(validMail)) {\n        errorsInit.email = \"Please enter a valid email address\"\n      } \n      if(fields.mobileNumber && !fields.mobileNumber.match(validPhoneNumber)) {\n        errorsInit.mobileNumber = \"Please enter a valid phone number\"\n      } \n      if(fields.password && fields.password.length < 8) {\n        errorsInit.password = \"Password must be at least 8 characters\";\n      }\n      if(fields.confirmPassword && fields.confirmPassword !== fields.password) {\n        errorsInit.confirmPassword = \"Your password does not match\"\n      }\n    }\n\n    setValidationErrors(errorsInit);\n\n    if(Object.entries(errorsInit).length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n\n  }\n\n  const handleSubmit = () => {\n    const validated = validateInput();\n    const signUpData = {\n      email: signUpValues.email,\n      firstName: signUpValues.firstName,\n      lastName: signUpValues.lastName,\n      phoneNumber: signUpValues.mobileNumber.replace('0', '234'),\n      password: signUpValues.password,\n      hearAboutUs: signUpValues.referralChoice,\n    }\n    console.log(signUpData);\n    if(validated) {\n      registerUser(signUpData, getActiveUser);\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <Link to={pageUrl.HOMEPAGE}><img src={Logo} alt=\"Gypsy Logo\" /></Link>\n      <h1>Create your account</h1>\n      <p className={styles.subtitle}>Hey there, let's setup your Gypsy Capital account</p>\n      <div className={styles.registerBox}>\n        <ToastContainer position=\"top-center\" />\n        <Row>\n          <Col sm={12} md={6} className=\"mb-4 mb-md-0\">\n            <InputField type=\"text\" \n              nameAttr=\"firstName\" \n              label=\"First Name\" \n              value={signUpValues.firstName} \n              changed={(val) => {\n                setValidationErrors({ ...validationErrors, firstName: null })\n                setSignUpvalues({...signUpValues, firstName: val})\n              }}\n              error={validationErrors.firstName && validationErrors.firstName}\n            />\n          </Col>\n          <Col sm={12} md={6} className=\"mb-4 mb-md-0\">\n            <InputField type=\"text\" \n              nameAttr=\"lastName\" \n              label=\"Last Name\" \n              value={signUpValues.lastName}\n              changed={(val) => {\n                setValidationErrors({ ...validationErrors, lastName: null })\n                setSignUpvalues({...signUpValues, lastName: val})\n              }}\n              error={validationErrors.lastName && validationErrors.lastName}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mt-0 mt-md-4\">\n          <Col sm={12} md={6} className=\"mb-4 mb-md-0\">\n            <InputField type=\"email\" \n              nameAttr=\"email\" \n              label=\"Email\" \n              value={signUpValues.email}\n              changed={(val) => {\n                setValidationErrors({ ...validationErrors, email: null })\n                setSignUpvalues({...signUpValues, email: val})\n              }}\n              error={validationErrors.email && validationErrors.email}\n            />\n          </Col>\n          <Col sm={12} md={6} className=\"mb-4 mb-md-0\">\n            <InputField type=\"phone\" \n              nameAttr=\"mobileNo\" \n              label=\"Mobile Number\" \n              value={signUpValues.mobileNumber}\n              changed={(val) => {\n                setValidationErrors({...validationErrors, mobileNumber: null})\n                setSignUpvalues({...signUpValues, mobileNumber: val})\n              }}\n              error={validationErrors.mobileNumber && validationErrors.mobileNumber}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mt-0 mt-md-4\">\n          <Col sm={12} md={6} className=\"mb-4 mb-md-0\">\n            <InputField type=\"password\" \n              nameAttr=\"password\" \n              label=\"Password\" \n              value={signUpValues.password}\n              changed={(val) => {\n                setValidationErrors({...validationErrors, password: null})\n                setSignUpvalues({...signUpValues, password: val})\n              }}\n              error={validationErrors.password && validationErrors.password}\n            />\n          </Col>\n          <Col sm={12} md={6} className=\"mb-4 mb-md-0\">\n            <InputField type=\"password\" \n              nameAttr=\"confirmPassword\" \n              label=\"Confirm Password\" \n              value={signUpValues.confirmPassword}\n              changed={(val) => {\n                setValidationErrors({...validationErrors, confirmPassword: null})\n                setSignUpvalues({...signUpValues, confirmPassword: val})\n              }}\n              error={validationErrors.confirmPassword && validationErrors.confirmPassword}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mt-0 mt-md-4\">\n          <Col className=\"mb-4 mb-md-0\">\n            <InputField type=\"select\" \n              label=\"How did you hear about us?\" \n              options={referralOptions} \n              nameAttr=\"publicity\"\n              changed={(val) => {\n                setValidationErrors({...validationErrors, referralChoice: null})\n                setSignUpvalues({...signUpValues, referralChoice: val})\n              }}\n              error={validationErrors.referralChoice && validationErrors.referralChoice}\n            />\n          </Col>\n        </Row>\n        <Button \n          className={ loading ? [styles.loadingBtn, \"mt-5\"].join(' ') : \"mt-5\" } \n          fullWidth \n          clicked={handleSubmit} \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n          disabled={loading}\n          loading={loading}\n        >\n          Sign Up\n        </Button>\n        <p className={[styles.authLink, 'mt-3'].join(' ')}>\n          Already have an account? <Link to={pageUrl.SIGNIN_PAGE}>Log in</Link>\n        </p>\n        <p className={styles.legalLink}>\n          By continuing, you agree to our <Link to={pageUrl.TERMS_CONDITIONS_PAGE}>Terms and Conditions</Link> of service and <Link to={pageUrl.PRIVACY_POLICY_PAGE}>Privacy Policy.</Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n\n\nexport default SignUp;","/home/tga/Desktop/gypsy-capital/src/pages/OtpVerify/OtpVerify.jsx",["227"],"/home/tga/Desktop/gypsy-capital/src/pages/LoanCalculator/LoanCalculator.jsx",["228"],"/home/tga/Desktop/gypsy-capital/src/pages/Faqs/Faqs.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/Support/Support.jsx",["229"],"import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport { routes } from '../../routes/sidebarRoutes';\nimport styles from './Support.module.scss';\n\n\nconst Support = () => {\n\n  const location = useLocation();\n  const salesRoutes = routes[1];\n\n  return (\n    <>\n      <Dashboard sidebarRoutes={salesRoutes} location={location}>\n\n      </Dashboard>\n    </>\n  )\n}\n\n\nexport default Support;\n","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorClients/ProcessorClients.jsx",["230","231","232"],"import React, { useEffect, useState, useContext } from 'react';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport styles from './ProcessorClients.module.scss';\nimport { routes } from '../../routes/sidebarRoutes';\nimport { useLocation } from 'react-router-dom';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport ClientList from '../../components/ClientList/ClientList';\nimport Loader from '../../components/Loader/Loader';\n\nconst ProcessorClients = () => {\n\n  const processorRoute = routes[2];\n  const location = useLocation();\n\n  const { state: { user } } = useContext(AuthContext);\n  const { state: { clientsForRole, loading }, getClientListForRole } = useContext(UserContext);\n\n  useEffect(() => {\n    getClientListForRole()\n  }, []);\n\n  return (\n    <Dashboard sidebarRoutes={processorRoute} location={location}>\n      { !loading ? <ClientList clientList={clientsForRole} role={user.role} /> : <Loader /> }\n    </Dashboard>\n  )\n}\n\n\nexport default ProcessorClients;","/home/tga/Desktop/gypsy-capital/src/pages/ContactPage/ContactPage.jsx",["233","234"],"import React, { useState } from 'react';\nimport {Row, Col} from 'react-bootstrap';\nimport styles from './ContactPage.module.scss';\nimport NavBar from '../../components/NavBar/NavBar';\nimport { HiLocationMarker, HiMail, HiPhone } from 'react-icons/hi';\nimport { IoLogoWhatsapp } from 'react-icons/io';\nimport Footer from '../../components/Footer/Footer';\nimport InputField from '../../components/InputField/InputField';\nimport { useRouteMatch, Link } from 'react-router-dom';\n\n\nconst ContactPage = ({ history }) => {\n\n  const { url } = useRouteMatch();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    subject: '',\n    message: ''\n  });\n\n  return (\n    <>\n      <NavBar history={history} location={url} />\n      <div className={styles.heroSection}>\n        <div className={styles.container}>\n          <h2>Contact Us</h2>\n        </div>\n        <div className={styles.bgOverlay}></div>\n      </div>\n      <div className={styles.mapSection}>\n        <div className={styles.container}>\n          <iframe\n              className={styles.map}\n              frameBorder={0}\n              scrolling=\"no\"\n              marginHeight={0}\n              marginWidth={0}\n              src=\"https://maps.google.com/maps?hl=en&amp;q=Landmark%20Towers,%205B%20Water%20Corporation%20Rd,Oniru%20Rd,%20Victoria%20Island%20101241,%20Lagos+(Gypsy%20Capital)&amp;t=&amp;z=15&amp;ie=UTF8&amp;iwloc=B&amp;output=embed\"\n            >\n            </iframe>\n        </div>\n      </div>\n      <div className={styles.contactSection}>\n        <div className={styles.container}>\n          <Row>\n            <Col sm={12} md={7} className=\"mb-5 mb-md-0\">\n              <div className={styles.contactForm}>\n                <h3>Send Us A Message</h3>\n                <Row className=\"mb-0 mb-md-4\">\n                  <Col sm={12} md={6} className=\"mb-3 mb-md-0\">\n                    <InputField \n                      type=\"text\"\n                      placeholder=\"Name\"\n                      nameAttr=\"name\"\n                      value={formData.name}\n                      changed={(val) => setFormData({ ...formData, name: val })}\n                    />\n                  </Col>\n                  <Col sm={12} md={6} className=\"mb-3 mb-md-0\">\n                    <InputField \n                      type=\"email\"\n                      placeholder=\"Email\"\n                      nameAttr=\"email\"\n                      value={formData.email}\n                      changed={(val) => setFormData({ ...formData, email: val })}\n                    />\n                  </Col>\n                </Row>\n                <Row className=\"mb-0 mb-md-4\">\n                  <Col className=\"mb-3 mb-md-0\">\n                    <InputField \n                      type=\"text\"\n                      placeholder=\"Subject\"\n                      nameAttr=\"subject\"\n                      value={formData.subject}\n                      changed={(val) => setFormData({ ...formData, subject: val })}\n                    />\n                  </Col>\n                </Row>\n                <Row className=\"mb-0 mb-md-4\">\n                  <Col className=\"mb-3 mb-md-0\">\n                    <InputField \n                      type=\"textarea\"\n                      placeholder=\"Message\"\n                      nameAttr=\"message\"\n                      value={formData.message}\n                      changed={(val) => setFormData({ ...formData, message: val })}\n                    />\n                  </Col>\n                </Row>\n                <button>\n                  Submit\n                </button>\n              </div>\n            </Col>\n            <Col sm={12} md={5} className=\"mb-5 mb-md-0\">\n              <div className={styles.addressBox}>\n                <h3>Get In Touch</h3>\n                <div className={styles.addressGroup}>\n                  <HiLocationMarker className={[styles.icon, styles.locator].join(' ')} size=\"3.5em\" />\n                  <p>Landmark Towers, 5B Water Corporation Rd,Oniru Rd, Victoria Island 101241, Lagos</p>\n                </div>\n                <div className={styles.addressGroup}>\n                  <HiMail className={[styles.icon, styles.others].join(' ')} size=\"1.8em\" />\n                  <p>hello@gypsycapital.com</p>\n                </div>\n                <div className={styles.addressGroup}>\n                  <HiPhone className={[styles.icon, styles.others].join(' ')} size=\"1.8em\" />\n                  <p>+234 809 9907 888</p>\n                </div>\n                <div className={styles.addressGroup}>\n                  <IoLogoWhatsapp className={[styles.icon, styles.others].join(' ')} size=\"1.8em\" />\n                  <p>+234 809 9907 888</p>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </div>\n      <Footer />\n    </>\n\n  )\n}\n\n\nexport default ContactPage;","/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerClients/AuthorizerClients.jsx",["235","236"],"/home/tga/Desktop/gypsy-capital/src/pages/LoanList/LoanList.jsx",["237"],"/home/tga/Desktop/gypsy-capital/src/pages/ProcessorLoanDetails/ProcessorLoanDetails.jsx",["238","239","240","241","242","243","244","245","246","247","248","249"],"import React, { useState, useContext, useEffect } from 'react';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport styles from './ProcessorLoanDetails.module.scss';\nimport { routes } from '../../routes/sidebarRoutes';\nimport { useLocation, useParams } from 'react-router-dom';\nimport NavTabs from '../../components/NavTabs/NavTabs';\nimport { BasicInfo, RepaymentSchedule } from '../LoanDetail/LoanDetail';\nimport { Context as LoanContext } from '../../context/LoanContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { Context as ApprovalContext } from '../../context/ApprovalContext';\nimport { Context as RepaymentContext } from '../../context/RepaymentContext';\nimport { Context as MonoContext } from '../../context/MonoContext';\nimport { Context as BankContext } from '../../context/BankCotext';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport { Row, Col, Modal } from 'react-bootstrap';\nimport OfferLetterPdf from '../../components/OfferLetter/OfferLetter';\nimport ReactPDF, { PDFViewer } from '@react-pdf/renderer';\nimport OfferLetterForm from '../../components/OfferLetter/OfferLetterForm';\nimport ProcessOffer from '../../components/ProcessOffer/ProcessOffer';\nimport { validateInput } from '../../utils/validateInput';\nimport _ from 'lodash';\nimport { numberWithCommas } from '../../utils/nigeriaStates';\nimport { toast, ToastContainer } from 'react-toastify';\n\n\nexport const DecisionApproval = ({ loanId, loanData, userRole, disburseBank }) => {\n\n  const { state: { loading, error, approvedStatus }, decideApproval, disburseLoan, clearError, resetApprovalStatus } = useContext(ApprovalContext);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearError();\n    }\n  }, [error])\n\n  // useEffect(() => {\n  //   if(approvedStatus) {\n  //     resetApprovalStatus();\n  //     setShowModal(true);\n  //   }\n  // }, [approvedStatus])\n\n  const [approvalData, setApprovalData] = useState({\n    decision: '',\n    approvedRate: '',\n    approvedTenure: '',\n    repaymentDate: '',\n    decisionReason: '',\n    totalPay: '',\n    approvedAmount: ''\n  });\n\n  const [approvalErrors, setApprovalErrors] = useState({\n    decision: null,\n    approvedRate: null,\n    approvedTenure: null,\n    repaymentDate: null,\n    decisionReason: null,\n    totalPay: null,\n    approvedAmount: null\n  });\n\n  const { state: { bankList }, getBankList } = useContext(BankContext);\n\n  useEffect(() => {\n    (async() => {\n      await getBankList();\n    })()\n  }, []);\n\n  useEffect(() => {\n    if(loanData && loanData.processorDecision) {\n      console.log(loanData);\n      setApprovalData({\n        ...approvalData,\n        decision: loanData.processorDecision,\n        approvedRate: loanData.approvedInterest,\n        approvedTenure: loanData.approvedTenure,\n        repaymentDate: loanData.determinedRepaymentDate,\n        approvedAmount: loanData.amount,\n        decisionReason: loanData.processorDecisionReason\n      });\n    }\n  }, [loanData])\n\n  const approveLoan = async() => {\n    if(userRole === \"processor\") {\n      const validated = validateInput(approvalData, setApprovalErrors);\n      console.log(validated);\n      if(validated) {\n        const data = {\n          decision: approvalData.decision,\n          approved_interest: approvalData.approvedRate,\n          approved_tenure: approvalData.approvedTenure,\n          determined_repayment_date: approvalData.repaymentDate,\n          decision_reason: approvalData.decisionReason,\n          total_pay: approvalData.totalPay\n        }\n        decideApproval(loanId, data);\n      }\n    } else if(userRole === \"authorizer\") {\n      if(loanData && loanData?.processorDecision) {\n        await decideApproval(loanId, {\n          decision: loanData?.processorDecision,\n          approved_interest: loanData?.approvedInterest?.toString(),\n          approved_tenure: loanData?.approvedTenure?.toString(),\n          determined_repayment_date: loanData?.determinedRepaymentDate,\n          total_pay: loanData?.calculatedPayBack?.toString(),\n          decision_reason: loanData?.processorDecisionReason,\n          approvedAmount: loanData?.amount?.toString()\n        });\n        setShowModal(true);\n      } else {\n        const validated = validateInput(approvalData, setApprovalErrors);\n        console.log(validated);\n        if(validated) {\n          const data = {\n            decision: approvalData.decision,\n            approved_interest: approvalData.approvedRate,\n            approved_tenure: approvalData.approvedTenure,\n            determined_repayment_date: approvalData.repaymentDate,\n            decision_reason: approvalData.decisionReason,\n            total_pay: approvalData.totalPay\n          }\n          await decideApproval(loanId, data);\n        }\n      }\n    }\n  }\n\n  const transferPaymentToClient = () => {\n    const bankInfo = bankList.filter(bank => bank.name.toLowerCase() === disburseBank.bank.toLowerCase() )\n    // console.log(bankInfo[0].code);\n    const paymentData = {\n      account_bank: bankInfo[0].code,\n      account_number: disburseBank.accountNumber,\n      amount: loanData.amount\n    }\n    disburseLoan(loanId, paymentData);\n  }\n\n\n  const DisburseModal = () => {\n\n    const handleClose = () => {\n      setShowModal(false);\n    }\n\n    const [clientBank, setClientBank] = useState({\n      bankName: '',\n      accountNumber: '',\n      amount: ''\n    })\n\n    useEffect(() => {\n      if(disburseBank && disburseBank.isDisbursement) {\n        setClientBank({\n          ...clientBank,\n          bankName: _.startCase(disburseBank.bank),\n          accountNumber: disburseBank.accountNumber,\n          amount: numberWithCommas(loanData.amount)\n        })\n      }\n    }, [disburseBank])\n\n    return (\n      <Modal show={showModal} onHide={handleClose}>\n        <Modal.Body className={styles.disburseModal}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"text\"\n                label=\"Bank Name\"\n                nameAttr=\"bankName\"\n                value={clientBank.bankName}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"text\"\n                label=\"Account Number\"\n                nameAttr=\"accNumber\"\n                value={clientBank.accountNumber}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"text\"\n                label=\"Amount\"\n                nameAttr=\"amount\"\n                value={clientBank.amount}\n              />\n            </Col>\n          </Row>\n          <Button\n            className=\"mt-4\" \n            fullWidth \n            clicked={transferPaymentToClient} \n            bgColor=\"#741763\" \n            size=\"lg\" \n            color=\"#EBEBEB\"\n            disabled={loading}\n            loading={loading}\n          >\n            Disburse\n          </Button>\n        </Modal.Body>\n      </Modal>\n    )\n  }\n\n  return (\n    <>\n      <ToastContainer position=\"top-center\" />\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"select\"\n            label=\"Decision\"\n            nameAttr=\"decision\"\n            options={['Approve', 'Decline']}\n            value={approvalData.decision}\n            changed={(val) => {\n              setApprovalData({...approvalData, decision: val });\n              setApprovalErrors({ ...approvalErrors, decision: null })\n            }}\n            error={approvalErrors.decision && approvalErrors.decision}\n            disable={!!loanData?.processorDecision}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Approved Interest Rate\"\n            nameAttr=\"interestRate\"\n            value={approvalData.approvedRate}\n            changed={(val) => {\n              setApprovalData({...approvalData, approvedRate: val });\n              setApprovalErrors({ ...approvalErrors, approvedRate: null })\n            }}\n            error={approvalErrors.approvedRate && approvalErrors.approvedRate}\n            disable={!!loanData?.processorDecision}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Approved Tenure\"\n            nameAttr=\"approvedTenure\"\n            value={approvalData.approvedTenure}\n            changed={(val) => {\n              setApprovalData({...approvalData, approvedTenure: val });\n              setApprovalErrors({ ...approvalErrors, approvedTenure: null })\n            }}\n            error={approvalErrors.approvedTenure && approvalErrors.approvedTenure}\n            disable={!!loanData?.processorDecision}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Determined Repayment Date\"\n            nameAttr=\"repaymentDate\"\n            value={approvalData.repaymentDate}\n            changed={(val) => {\n              setApprovalData({...approvalData, repaymentDate: val });\n              setApprovalErrors({ ...approvalErrors, repaymentDate: null })\n            }}\n            error={approvalErrors.repaymentDate && approvalErrors.repaymentDate}\n            disable={!!loanData?.processorDecision}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Total Repayment\"\n            nameAttr=\"totalRepayment\"\n            value={approvalData.totalPay}\n            changed={(val) => {\n              setApprovalData({...approvalData, totalPay: val });\n              setApprovalErrors({ ...approvalErrors, totalPay: null })\n            }}\n            error={approvalErrors.totalPay && approvalErrors.totalPay}\n            disable={!!loanData?.processorDecision}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Approved Loan Amount\"\n            nameAttr=\"approvedAmount\"\n            value={approvalData.approvedAmount}\n            changed={(val) => {\n              setApprovalData({...approvalData, approvedAmount: val });\n              setApprovalErrors({ ...approvalErrors, approvedAmount: null })\n            }}\n            error={approvalErrors.approvedAmount && approvalErrors.approvedAmount}\n            disable={!!loanData?.processorDecision}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"textarea\"\n            label=\"Decision Reason\"\n            nameAttr=\"decisionReason\"\n            value={approvalData.decisionReason}\n            changed={(val) => {\n              setApprovalData({...approvalData, decisionReason: val });\n              setApprovalErrors({ ...approvalErrors, decisionReason: null })\n            }}\n            error={approvalErrors.decisionReason && approvalErrors.decisionReason}\n            disable={!!loanData?.processorDecision}\n          />\n        </Col>\n      </Row>\n      <Button\n        className=\"mt-4\" \n        fullWidth \n        clicked={approveLoan} \n        bgColor=\"#741763\" \n        size=\"lg\" \n        color=\"#EBEBEB\"\n        disabled={loading}\n        loading={loading}\n      >\n        { userRole === 'processor' ? `Submit Decision` : `Submit & Disburse` }\n      </Button>\n      <DisburseModal />\n    </>\n  )\n}\n\n\nexport const RepaySetup = ({ loanId, loanData }) => {\n\n  const { state: { loading }, setupRepayment } = useContext(RepaymentContext);\n\n  const [repayData, setRepayData] = useState({\n    repaymentApi: '',\n    totalRepay: '',\n    tenure: '',\n    payday: '',\n    startDate: '',\n    bankName: '',\n    accountNumber: ''\n  });\n\n  const [repayError, setRepayError] = useState({\n    repaymentApi: null,\n    totalRepay: null,\n    tenure: null,\n    payday: null,\n    startDate: null,\n    bankName: null,\n    accountNumber: null\n  });\n\n  useEffect(() => {\n    if(loanData && loanData.rePaymentAPIstatus) {\n      setRepayData({\n        ...repayData,\n        repaymentApi: loanData.rePaymentAPIstatus,\n        tenure: loanData.approvedTenure,\n        payday: loanData.payDay,\n        startDate: loanData.determinedRepaymentDate\n      });\n    }\n  }, [loanData])\n\n\n  const startRepaymentSetup = () => {\n    const { repaymentApi, totalRepay, tenure, payday, startDate } = repayData;\n    const forPaystack = { repaymentApi, totalRepay, tenure, payday, startDate };\n    let validated;\n    if(repayData.repaymentApi === \"paystack\") {\n      validated = validateInput(forPaystack, setRepayError)\n    } else {\n      validated = validateInput(repayData, setRepayError);\n    }\n    console.log(validated)\n    const data = {\n      approved_tenure: repayData.tenure,\n      determined_repayment_date: repayData.startDate,\n      rePaymentAPI: \"paystack\",\n      total_pay: repayData.totalRepay\n    }\n    if(validated) {\n      setupRepayment(loanId, data);\n    }\n  }\n\n  return (\n    <>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"select\"\n            label=\"Repayment API\"\n            nameAttr=\"repayApi\"\n            value={repayData.repaymentApi}\n            options={[\"Paystack\", \"Remita\"]}\n            changed={(val) => {\n              setRepayError({ ...repayError, repaymentApi: null });\n              setRepayData({ ...repayData, repaymentApi: val });\n            }}\n            error={repayError.repaymentApi && repayError.repaymentApi}\n            disable={!!loanData.rePaymentAPIstatus}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Total Repayment\"\n            nameAttr=\"totalRepay\"\n            value={repayData.totalRepay}\n            changed={(val) => {\n              setRepayError({ ...repayError, totalRepay: null });\n              setRepayData({ ...repayData, totalRepay: val });\n            }}\n            error={repayError.totalRepay && repayError.totalRepay}\n            disable={!!loanData.rePaymentAPIstatus}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Tenure\"\n            nameAttr=\"tenure\"\n            value={repayData.tenure}\n            changed={(val) => {\n              setRepayError({ ...repayError, tenure: null });\n              setRepayData({ ...repayData, tenure: val });\n            }}\n            error={repayError.tenure && repayError.tenure}\n            disable={!!loanData.rePaymentAPIstatus}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Pay day\"\n            nameAttr=\"payday\"\n            value={repayData.payday}\n            changed={(val) => {\n              setRepayError({ ...repayError, payday: null });\n              setRepayData({ ...repayData, payday: val });\n            }}\n            error={repayError.payday && repayError.payday}\n            disable={!!loanData.rePaymentAPIstatus}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Repayment Start Date\"\n            nameAttr=\"startDate\"\n            value={repayData.startDate}\n            changed={(val) => {\n              setRepayError({ ...repayError, startDate: null });\n              setRepayData({ ...repayData, startDate: val });\n            }}\n            error={repayError.startDate && repayError.startDate}\n            disable={!!loanData.rePaymentAPIstatus} \n          />\n        </Col>\n      </Row>\n      { repayData.repaymentApi !== \"paystack\" && <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Bank Name\"\n            nameAttr=\"bankName\"\n            value={repayData.bankName}\n            changed={(val) => {\n              setRepayError({ ...repayError, bankName: null });\n              setRepayData({ ...repayData, bankName: val });\n            }}\n            error={repayError.bankName && repayError.bankName}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Account Number\"\n            nameAttr=\"accountNumber\"\n            value={repayData.accountNumber}\n            changed={(val) => {\n              setRepayError({ ...repayError, accountNumber: null });\n              setRepayData({ ...repayData, accountNumber: val });\n            }}\n            error={repayError.accountNumber && repayError.accountNumber}\n          />\n        </Col>\n      </Row>}\n      <Button\n        className=\"mt-4\" \n        fullWidth \n        clicked={startRepaymentSetup} \n        bgColor=\"#741763\" \n        size=\"lg\" \n        color=\"#EBEBEB\"\n        disabled={loanData?.rePaymentAPIstatus ? true : loading}\n        loading={loading}\n      >\n        Continue\n      </Button>\n    </>\n  )\n}\n\n\nexport const MonoTab = ({ clientId }) => {\n\n  const { state: { loading }, getAccountInfo, getAccountStatement  } = useContext(MonoContext);\n\n  const retrieveAccountInfo = () => {\n    console.log(clientId)\n    getAccountInfo(clientId);\n  }\n\n  const retrieveAccountStatement = () => {\n    console.log(clientId);\n    getAccountStatement(clientId, 3);\n  }\n\n  return (\n    <>\n      <div className={styles.status}>\n        <p>Status: Inactive</p>\n      </div>\n      <div className={styles.monoContainer}>\n        <Row>\n          <Col>\n            <Button\n              className=\"mt-4\" \n              fullWidth\n              clicked={retrieveAccountStatement} \n              bgColor=\"#741763\" \n              size=\"lg\" \n              color=\"#EBEBEB\"\n              disabled={loading}\n              loading={loading}\n            >\n              Get Account Statement\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Button\n              className=\"mt-4\" \n              fullWidth\n              // clicked={updateContactInfo} \n              bgColor=\"#741763\" \n              size=\"lg\" \n              color=\"#EBEBEB\"\n              // disabled={loading}\n              // loading={loading}\n            >\n              Get Transaction History\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Button\n              className=\"mt-4\" \n              fullWidth\n              clicked={retrieveAccountInfo} \n              bgColor=\"#741763\" \n              size=\"lg\" \n              color=\"#EBEBEB\"\n              disabled={loading}\n              loading={loading}\n            >\n              Get Account Info\n            </Button>\n          </Col>\n        </Row>\n      </div>\n    </>\n  )\n}\n\n\nconst ProcessorLoanDetails = () => {\n\n  const location = useLocation();\n  const processorRoute = routes[2];\n  const { loanId } = useParams();\n\n  const [visibleSection, setVisibleSection] = useState('basic');\n\n  const navArray = [\n    {\n      title: \"Basic Info\",\n      shortlink: \"basic\"\n    },\n    {\n      title: \"Decision & Approval\",\n      shortlink: \"decision\"\n    },\n    {\n      title: \"Repayment Setup\",\n      shortlink: \"setup\"\n    },\n    {\n      title: \"Repayment Schedule\",\n      shortlink: \"repay\"\n    },\n    {\n      title: \"Offer Letter\",\n      shortlink: \"offer\"\n    },\n    { \n      title: \"Mono\",\n      shortlink: \"mono\"\n    }\n  ]\n\n  const setActiveTab = (link) => {\n    setVisibleSection(link);\n  }\n\n  const { state: { loanDetails }, retrieveLoan } = useContext(LoanContext);\n  const { state: { user } } = useContext(AuthContext);\n\n  useEffect(() => {\n    retrieveLoan(loanId);\n    // ReactPDF.render(<MyDocument />, `${__dirname}/example.pdf`);\n  }, [])\n\n  console.log(loanDetails);\n  \n  return(\n    <Dashboard sidebarRoutes={processorRoute} location={location}>\n      <NavTabs navs={navArray} setActive={setActiveTab} currentTab={visibleSection} />\n      <div className={styles.detailFields}>\n        { visibleSection === \"basic\" ? \n          <BasicInfo \n            data={loanDetails ? { \n              client: {...loanDetails?.client[0]?.bioData},\n              ...loanDetails?.loan\n            } : null }\n            userRole={user.role}\n          /> : null \n        }\n        { visibleSection === \"decision\" ?\n          <DecisionApproval loanId={loanId} loanData={loanDetails.loan} userRole={user.role} /> :\n          null\n        }\n        { visibleSection === \"setup\" ? \n          <RepaySetup loanId={loanId} loanData={loanDetails.loan} /> :\n          null\n        }\n        { visibleSection === \"repay\" ? \n          <RepaymentSchedule \n            data={ loanDetails ? {\n              ...loanDetails?.loan,\n              payments: loanDetails?.payments\n            } : null }\n            userRole={user.role}\n          /> : \n          null\n        }\n        { visibleSection === \"offer\" ? \n          // <PDFViewer width=\"100%\" height={500}><OfferLetterPdf /></PDFViewer> \n          <ProcessOffer /> :\n          null\n        }\n        { visibleSection === \"mono\" ? \n          <MonoTab clientId={loanDetails?.client[0]?.clientId} /> :\n          null\n        }\n      </div>\n    </Dashboard>\n  )\n}\n\n\nexport default ProcessorLoanDetails;","/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerLoans/AuthorizerLoans.jsx",["250","251"],"import React, { useContext, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport LoanList from '../../components/LoanList/LoanList';\nimport { routes } from '../../routes/sidebarRoutes';\nimport styles from './AuthorizerLoans.module.scss';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { Context as LoanContext } from '../../context/LoanContext';\nimport Loader from '../../components/Loader/Loader';\n\n\nconst AuthorizerLoans = () => {\n\n  const authorizerRoutes = routes[3];\n  const location = useLocation();\n\n  const { state: { user } } = useContext(AuthContext);\n  const { state: { loading, loans }, retrieveClientLoans } = useContext(LoanContext);\n\n  useEffect(() => {\n    retrieveClientLoans();\n  }, [])\n\n  return (\n    <Dashboard sidebarRoutes={authorizerRoutes} location={location}>\n      { !loading ? <LoanList loanList={loans} userRole={user.role} /> : <Loader /> }\n    </Dashboard>\n  )\n}\n\n\nexport default AuthorizerLoans;","/home/tga/Desktop/gypsy-capital/src/routes/sidebarRoutes.js",["252"],"import pageUrl from './pageUrl';\nimport { FiLayers } from 'react-icons/fi';\nimport { BiCreditCard } from 'react-icons/bi';\nimport { AiOutlineUser } from 'react-icons/ai';\nimport { GiTakeMyMoney, GiMoneyStack } from 'react-icons/gi';\nimport { FaUser } from 'react-icons/fa';\nimport { BiSupport } from 'react-icons/bi';\nimport { RiUser3Fill } from 'react-icons/ri';\n\n\nexport const clientRoutes = [\n  {\n      label: \"Dashboard\",\n      link: pageUrl.DASHBOARD_HOMEPAGE,\n      rootLink: pageUrl.DASHBOARD_HOMEPAGE,\n      icon: FiLayers\n    },\n    {\n      label: \"Consumer Credit\",\n      link: '/dashboard/consumer-credit/history',\n      rootLink: pageUrl.CONSUMER_CREDIT_PAGE,\n      icon: GiTakeMyMoney\n    },\n    {\n      label: \"Credit Report\",\n      link: pageUrl.CREDIT_REPORT_PAGE,\n      rootLink: pageUrl.CREDIT_REPORT_PAGE,\n      icon: BiCreditCard\n    },\n    {\n      label: \"Profile\",\n      link: pageUrl.PROFILE_PAGE,\n      rootLink: pageUrl.PROFILE_PAGE,\n      icon: AiOutlineUser\n    },\n]\n\n\nconst salesRoutes = [\n  {\n    label: \"Dashboard\",\n    link: pageUrl.SALES_AGENT_OVERVIEW,\n    rootLink: pageUrl.SALES_AGENT_OVERVIEW,\n    icon: FiLayers\n  },\n  {\n    label: \"Clients\",\n    link: pageUrl.CLIENT_LIST_PAGE,\n    rootLink: '/sales-agent/client',\n    icon: FaUser\n  },\n  {\n    label: \"Loans\",\n    link: pageUrl.LOAN_LIST_PAGE,\n    rootLink: '/sales-agent/loan',\n    icon: GiMoneyStack\n  }, \n  {\n    label: \"Support\",\n    link: pageUrl.SUPPORT_PAGE,\n    rootLink: pageUrl.SUPPORT_PAGE,\n    icon: BiSupport\n  }\n]\n\n\nconst processorRoutes = [\n  {\n    label: \"Dashboard\",\n    link: pageUrl.PROCESSORS_DASHBOARD,\n    rootLink: pageUrl.PROCESSORS_DASHBOARD,\n    icon: FiLayers\n  },\n  {\n    label: \"Clients\",\n    link: pageUrl.PROCESSORS_CLIENTS_PAGE,\n    rootLink: '/processor/client',\n    icon: FaUser\n  },\n  {\n    label: \"Loans\",\n    link: pageUrl.PROCESSORS_LOANS_PAGE,\n    rootLink: '/processor/loan',\n    icon: GiMoneyStack\n  }, \n  {\n    label: \"Support\",\n    link: pageUrl.SUPPORT_PAGE,\n    rootLink: pageUrl.SUPPORT_PAGE,\n    icon: BiSupport\n  }\n]\n\nconst authorizerRoutes = [\n  {\n    label: \"Dashboard\",\n    link: pageUrl.AUTHORIZER_OVERVIEW,\n    rootLink: pageUrl.AUTHORIZER_OVERVIEW,\n    icon: FiLayers\n  },\n  {\n    label: \"Clients\",\n    link: pageUrl.AUTHORIZER_CLIENTS,\n    rootLink: '/authorizer/client',\n    icon: FaUser\n  },\n  {\n    label: \"Loans\",\n    link: pageUrl.AUTHORIZER_LOANS,\n    rootLink: '/authorizer/loan',\n    icon: GiMoneyStack\n  }, \n  {\n    label: \"Support\",\n    link: pageUrl.SUPPORT_PAGE,\n    rootLink: pageUrl.SUPPORT_PAGE,\n    icon: BiSupport\n  }\n]\n\n\nexport const routes = [\n  clientRoutes,\n  salesRoutes,\n  processorRoutes,\n  authorizerRoutes\n]","/home/tga/Desktop/gypsy-capital/src/hooks/useLoanDetails.js",["253","254","255","256"],"/home/tga/Desktop/gypsy-capital/src/components/Dashboard/Dashboard.jsx",["257"],"/home/tga/Desktop/gypsy-capital/src/components/Loader/Loader.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/StatBox/StatBox.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/ProcessOffer/ProcessOffer.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/Footer/Footer.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/FaqSection/FaqSection.jsx",["258"],"/home/tga/Desktop/gypsy-capital/src/components/LoanCalculatorForm/LoanCalculatorForm.jsx",["259","260"],"/home/tga/Desktop/gypsy-capital/src/components/FileUploadButton/FileUploadButton.js",[],"/home/tga/Desktop/gypsy-capital/src/components/BvnForm/BvnForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/MonoWidget/MonoWidget.jsx",["261","262","263"],"import React, { useContext, useEffect } from 'react';\nimport MonoConnect from '@mono.co/connect.js';\nimport Button from '../Button/Button';\nimport { Context as MonoContext } from '../../context/MonoContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { toast, ToastContainer } from 'react-toastify';\n\nexport default function Mono() {\n\n  const { \n    state : { linkSuccess, error }, \n    authenticateUser, \n    resetLinkSuccess,\n    clearErrors\n  } = useContext(MonoContext);\n  const { state: { user } } = useContext(AuthContext);\n\n  const monoConnect = React.useMemo(() => {\n    const monoInstance = new MonoConnect({\n      onClose: () => console.log('Widget closed'),\n      onLoad: () => console.log('Widget loaded successfully'),\n      onSuccess: ({ code }) => {\n        console.log(`Linked successfully: ${code}`);\n        authenticateUser(user.user_id, code)\n      },\n      // key: \"test_pk_4f5soJVmo31hCbKePbfo\",\n      key: \"live_pk_PvDfizVtAJPsoplNU8r2\"\n    })\n\n    monoInstance.setup()\n    \n    return monoInstance;\n  }, [])\n\n  useEffect(() => {\n    if(linkSuccess) {\n      toast.success(\"Your financial account has been successfully linked\")\n      // resetLinkSuccess();\n    }\n  }, [linkSuccess]);\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error)\n      clearErrors();\n    }\n  }, [error])\n\n  return (\n    <>\n      <ToastContainer position=\"top-center\" />\n      <Button\n        className=\"mt-2\" \n        bgColor=\"#741763\" \n        size=\"lg\" \n        color=\"#EBEBEB\"\n        clicked={() => monoConnect.open()}\n      >\n        Link Your Financial Account\n      </Button>\n    </>\n  )\n}","/home/tga/Desktop/gypsy-capital/src/context/LoanContext.js",[],"/home/tga/Desktop/gypsy-capital/src/context/createDataContext.js",["264"],"/home/tga/Desktop/gypsy-capital/src/pages/CreditReport/CreditReport.jsx",["265","266","267"],"/home/tga/Desktop/gypsy-capital/src/pages/Overview/Overview.jsx",["268","269"],"/home/tga/Desktop/gypsy-capital/src/pages/ClientListPage/ClientListPage.jsx",["270","271"],"/home/tga/Desktop/gypsy-capital/src/pages/AgentOverview/AgentOverview.jsx",["272"],"/home/tga/Desktop/gypsy-capital/src/pages/AboutUs/AboutUs.jsx",["273","274","275"],"/home/tga/Desktop/gypsy-capital/src/pages/ResetSuccess/ResetSuccess.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/ForgotPassword/ForgotPassword.jsx",["276"],"/home/tga/Desktop/gypsy-capital/src/pages/ProcessorClientDetails/ProcessorClientDetails.jsx",["277","278"],"/home/tga/Desktop/gypsy-capital/src/pages/ResetPassword/ResetPassword.jsx",["279"],"/home/tga/Desktop/gypsy-capital/src/pages/ProcessorLoans/ProcessorLoans.jsx",["280","281"],"/home/tga/Desktop/gypsy-capital/src/pages/ProcessorDashboard/ProcessorDashboard.jsx",["282"],"/home/tga/Desktop/gypsy-capital/src/hooks/useNavigateAfterAuth.js",["283"],"/home/tga/Desktop/gypsy-capital/src/components/IdentityForm/IdentityForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/NavTabs/NavTabs.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/ClientList/ClientList.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/LoanList/LoanList.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/OfferLetter/OfferLetter.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/LoanContactForm/LoanContactForm.jsx",["284"],"/home/tga/Desktop/gypsy-capital/src/components/AccountSetupModal/AccountSetupModal.jsx",["285","286","287","288","289","290"],{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","severity":1,"message":"296","line":9,"column":30,"nodeType":"297","messageId":"298","endLine":9,"endColumn":34},{"ruleId":"299","severity":1,"message":"300","line":4,"column":1,"nodeType":"301","endLine":34,"endColumn":2},{"ruleId":"302","severity":1,"message":"303","line":47,"column":6,"nodeType":"304","endLine":47,"endColumn":13,"suggestions":"305"},{"ruleId":"306","severity":1,"message":"307","line":64,"column":33,"nodeType":"308","messageId":"309","endLine":64,"endColumn":34,"suggestions":"310"},{"ruleId":"306","severity":1,"message":"307","line":64,"column":58,"nodeType":"308","messageId":"309","endLine":64,"endColumn":59,"suggestions":"311"},{"ruleId":"302","severity":1,"message":"303","line":29,"column":6,"nodeType":"304","endLine":29,"endColumn":13,"suggestions":"312"},{"ruleId":"302","severity":1,"message":"313","line":36,"column":5,"nodeType":"304","endLine":36,"endColumn":15,"suggestions":"314"},{"ruleId":"295","severity":1,"message":"315","line":5,"column":8,"nodeType":"297","messageId":"298","endLine":5,"endColumn":14},{"ruleId":"295","severity":1,"message":"316","line":1,"column":28,"nodeType":"297","messageId":"298","endLine":1,"endColumn":36},{"ruleId":"295","severity":1,"message":"315","line":3,"column":8,"nodeType":"297","messageId":"298","endLine":3,"endColumn":14},{"ruleId":"302","severity":1,"message":"317","line":21,"column":6,"nodeType":"304","endLine":21,"endColumn":8,"suggestions":"318"},{"ruleId":"295","severity":1,"message":"319","line":9,"column":25,"nodeType":"297","messageId":"298","endLine":9,"endColumn":29},{"ruleId":"320","severity":1,"message":"321","line":33,"column":11,"nodeType":"322","endLine":40,"endColumn":14},{"ruleId":"295","severity":1,"message":"315","line":6,"column":8,"nodeType":"297","messageId":"298","endLine":6,"endColumn":14},{"ruleId":"302","severity":1,"message":"317","line":22,"column":6,"nodeType":"304","endLine":22,"endColumn":8,"suggestions":"323"},{"ruleId":"302","severity":1,"message":"324","line":23,"column":6,"nodeType":"304","endLine":23,"endColumn":8,"suggestions":"325"},{"ruleId":"295","severity":1,"message":"326","line":17,"column":8,"nodeType":"297","messageId":"298","endLine":17,"endColumn":22},{"ruleId":"295","severity":1,"message":"327","line":18,"column":8,"nodeType":"297","messageId":"298","endLine":18,"endColumn":16},{"ruleId":"295","severity":1,"message":"328","line":18,"column":20,"nodeType":"297","messageId":"298","endLine":18,"endColumn":29},{"ruleId":"295","severity":1,"message":"329","line":19,"column":8,"nodeType":"297","messageId":"298","endLine":19,"endColumn":23},{"ruleId":"295","severity":1,"message":"330","line":29,"column":36,"nodeType":"297","messageId":"298","endLine":29,"endColumn":50},{"ruleId":"295","severity":1,"message":"331","line":29,"column":96,"nodeType":"297","messageId":"298","endLine":29,"endColumn":115},{"ruleId":"302","severity":1,"message":"332","line":37,"column":6,"nodeType":"304","endLine":37,"endColumn":13,"suggestions":"333"},{"ruleId":"302","severity":1,"message":"334","line":72,"column":6,"nodeType":"304","endLine":72,"endColumn":8,"suggestions":"335"},{"ruleId":"302","severity":1,"message":"336","line":87,"column":6,"nodeType":"304","endLine":87,"endColumn":16,"suggestions":"337"},{"ruleId":"302","severity":1,"message":"338","line":167,"column":8,"nodeType":"304","endLine":167,"endColumn":22,"suggestions":"339"},{"ruleId":"302","severity":1,"message":"340","line":381,"column":6,"nodeType":"304","endLine":381,"endColumn":16,"suggestions":"341"},{"ruleId":"302","severity":1,"message":"342","line":648,"column":6,"nodeType":"304","endLine":648,"endColumn":8,"suggestions":"343"},{"ruleId":"295","severity":1,"message":"315","line":6,"column":8,"nodeType":"297","messageId":"298","endLine":6,"endColumn":14},{"ruleId":"302","severity":1,"message":"324","line":22,"column":6,"nodeType":"304","endLine":22,"endColumn":8,"suggestions":"344"},{"ruleId":"295","severity":1,"message":"345","line":8,"column":10,"nodeType":"297","messageId":"298","endLine":8,"endColumn":21},{"ruleId":"299","severity":1,"message":"300","line":4,"column":1,"nodeType":"301","endLine":28,"endColumn":2},{"ruleId":"302","severity":1,"message":"324","line":11,"column":7,"nodeType":"304","endLine":11,"endColumn":9,"suggestions":"346"},{"ruleId":"302","severity":1,"message":"347","line":15,"column":6,"nodeType":"304","endLine":15,"endColumn":13,"suggestions":"348"},{"ruleId":"302","severity":1,"message":"349","line":19,"column":6,"nodeType":"304","endLine":19,"endColumn":17,"suggestions":"350"},{"ruleId":"351","severity":1,"message":"352","line":66,"column":21,"nodeType":"322","endLine":66,"endColumn":74},{"ruleId":"302","severity":1,"message":"353","line":42,"column":6,"nodeType":"304","endLine":42,"endColumn":8,"suggestions":"354"},{"ruleId":"295","severity":1,"message":"355","line":36,"column":31,"nodeType":"297","messageId":"298","endLine":36,"endColumn":40},{"ruleId":"302","severity":1,"message":"356","line":95,"column":6,"nodeType":"304","endLine":95,"endColumn":70,"suggestions":"357"},{"ruleId":"295","severity":1,"message":"358","line":13,"column":5,"nodeType":"297","messageId":"298","endLine":13,"endColumn":21},{"ruleId":"302","severity":1,"message":"359","line":33,"column":6,"nodeType":"304","endLine":33,"endColumn":8,"suggestions":"360"},{"ruleId":"302","severity":1,"message":"303","line":47,"column":6,"nodeType":"304","endLine":47,"endColumn":13,"suggestions":"361"},{"ruleId":"299","severity":1,"message":"300","line":4,"column":1,"nodeType":"301","endLine":22,"endColumn":2},{"ruleId":"295","severity":1,"message":"315","line":2,"column":8,"nodeType":"297","messageId":"298","endLine":2,"endColumn":14},{"ruleId":"295","severity":1,"message":"319","line":5,"column":25,"nodeType":"297","messageId":"298","endLine":5,"endColumn":29},{"ruleId":"295","severity":1,"message":"362","line":10,"column":11,"nodeType":"297","messageId":"298","endLine":10,"endColumn":14},{"ruleId":"295","severity":1,"message":"363","line":18,"column":11,"nodeType":"297","messageId":"298","endLine":18,"endColumn":15},{"ruleId":"302","severity":1,"message":"324","line":28,"column":6,"nodeType":"304","endLine":28,"endColumn":8,"suggestions":"364"},{"ruleId":"302","severity":1,"message":"365","line":33,"column":6,"nodeType":"304","endLine":33,"endColumn":8,"suggestions":"366"},{"ruleId":"302","severity":1,"message":"367","line":41,"column":6,"nodeType":"304","endLine":41,"endColumn":22,"suggestions":"368"},{"ruleId":"302","severity":1,"message":"369","line":36,"column":6,"nodeType":"304","endLine":36,"endColumn":8,"suggestions":"370"},{"ruleId":"371","severity":1,"message":"372","line":45,"column":15,"nodeType":"322","endLine":45,"endColumn":26},{"ruleId":"371","severity":1,"message":"372","line":48,"column":15,"nodeType":"322","endLine":48,"endColumn":26},{"ruleId":"371","severity":1,"message":"372","line":51,"column":15,"nodeType":"322","endLine":51,"endColumn":26},{"ruleId":"302","severity":1,"message":"303","line":20,"column":6,"nodeType":"304","endLine":20,"endColumn":13,"suggestions":"373"},{"ruleId":"374","severity":1,"message":"375","line":44,"column":11,"nodeType":"322","endLine":44,"endColumn":45},{"ruleId":"302","severity":1,"message":"376","line":89,"column":6,"nodeType":"304","endLine":89,"endColumn":8,"suggestions":"377"},{"ruleId":"302","severity":1,"message":"303","line":35,"column":6,"nodeType":"304","endLine":35,"endColumn":13,"suggestions":"378"},{"ruleId":"295","severity":1,"message":"315","line":3,"column":8,"nodeType":"297","messageId":"298","endLine":3,"endColumn":14},{"ruleId":"302","severity":1,"message":"324","line":22,"column":6,"nodeType":"304","endLine":22,"endColumn":8,"suggestions":"379"},{"ruleId":"302","severity":1,"message":"369","line":39,"column":6,"nodeType":"304","endLine":39,"endColumn":8,"suggestions":"380"},{"ruleId":"299","severity":1,"message":"300","line":7,"column":1,"nodeType":"301","endLine":29,"endColumn":2},{"ruleId":"295","severity":1,"message":"381","line":39,"column":22,"nodeType":"297","messageId":"298","endLine":39,"endColumn":35},{"ruleId":"302","severity":1,"message":"382","line":103,"column":6,"nodeType":"304","endLine":103,"endColumn":8,"suggestions":"383"},{"ruleId":"302","severity":1,"message":"384","line":116,"column":6,"nodeType":"304","endLine":116,"endColumn":37,"suggestions":"385"},{"ruleId":"302","severity":1,"message":"334","line":500,"column":6,"nodeType":"304","endLine":500,"endColumn":8,"suggestions":"386"},{"ruleId":"302","severity":1,"message":"387","line":515,"column":6,"nodeType":"304","endLine":515,"endColumn":49,"suggestions":"388"},{"ruleId":"302","severity":1,"message":"389","line":523,"column":6,"nodeType":"304","endLine":523,"endColumn":23,"suggestions":"390"},{"ruleId":"302","severity":1,"message":"391","line":713,"column":6,"nodeType":"304","endLine":713,"endColumn":8,"suggestions":"392"},"no-native-reassign",["393"],"no-negated-in-lhs",["394"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clearErrors'. Either include it or remove the dependency array.","ArrayExpression",["395"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["396","397"],["398","399"],["400"],"React Hook useEffect has a missing dependency: 'loanData'. Either include it or remove the dependency array. You can also do a functional update 'setLoanData(l => ...)' if you only need 'loanData' in the 'setLoanData' call.",["401"],"'styles' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getClientListForRole'. Either include it or remove the dependency array.",["402"],"'Link' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement",["403"],"React Hook useEffect has a missing dependency: 'retrieveClientLoans'. Either include it or remove the dependency array.",["404"],"'OfferLetterPdf' is defined but never used.","'ReactPDF' is defined but never used.","'PDFViewer' is defined but never used.","'OfferLetterForm' is defined but never used.","'approvedStatus' is assigned a value but never used.","'resetApprovalStatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'clearError'. Either include it or remove the dependency array.",["405"],"React Hook useEffect has a missing dependency: 'getBankList'. Either include it or remove the dependency array.",["406"],"React Hook useEffect has a missing dependency: 'approvalData'. Either include it or remove the dependency array. You can also do a functional update 'setApprovalData(a => ...)' if you only need 'approvalData' in the 'setApprovalData' call.",["407"],"React Hook useEffect has a missing dependency: 'clientBank'. Either include it or remove the dependency array. Outer scope values like 'disburseBank' aren't valid dependencies because mutating them doesn't re-render the component.",["408"],"React Hook useEffect has a missing dependency: 'repayData'. Either include it or remove the dependency array. You can also do a functional update 'setRepayData(r => ...)' if you only need 'repayData' in the 'setRepayData' call.",["409"],"React Hook useEffect has missing dependencies: 'loanId' and 'retrieveLoan'. Either include them or remove the dependency array.",["410"],["411"],"'RiUser3Fill' is defined but never used.",["412"],"React Hook useMemo has a missing dependency: 'clientId'. Either include it or remove the dependency array.",["413"],"React Hook useEffect has a missing dependency: 'retrieveLoan'. Either include it or remove the dependency array.",["414"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has a missing dependency: 'returnNumber'. Either include it or remove the dependency array. If 'setFaqs' needs the current value of 'returnNumber', you can also switch to useReducer instead of useState and read 'returnNumber' in the reducer.",["415"],"'loanApply' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loanCalcData'. Either include it or remove the dependency array. You can also do a functional update 'setLoanCalcData(l => ...)' if you only need 'loanCalcData' in the 'setLoanCalcData' call.",["416"],"'resetLinkSuccess' is assigned a value but never used.","React Hook React.useMemo has missing dependencies: 'authenticateUser' and 'user.user_id'. Either include them or remove the dependency array.",["417"],["418"],"'url' is assigned a value but never used.","'path' is assigned a value but never used.",["419"],"React Hook useEffect has missing dependencies: 'clearErrors' and 'getClientListForRole'. Either include them or remove the dependency array.",["420"],"React Hook useMemo has a missing dependency: 'user.user_id'. Either include it or remove the dependency array.",["421"],"React Hook useEffect has missing dependencies: 'getClientListForRole' and 'retrieveClientLoans'. Either include them or remove the dependency array.",["422"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["423"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'clientId' and 'getClientDetails'. Either include them or remove the dependency array.",["424"],["425"],["426"],["427"],"'setLgaLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentAddedUser' and 'getClientDetails'. Either include them or remove the dependency array.",["428"],"React Hook useEffect has a missing dependency: 'biodata'. Either include it or remove the dependency array. You can also do a functional update 'setBiodata(b => ...)' if you only need 'biodata' in the 'setBiodata' call.",["429"],["430"],"React Hook useEffect has missing dependencies: 'bankList' and 'verifyBankInfo'. Either include them or remove the dependency array.",["431"],"React Hook useEffect has a missing dependency: 'bankInfo'. Either include it or remove the dependency array. You can also do a functional update 'setBankInfo(b => ...)' if you only need 'bankInfo' in the 'setBankInfo' call.",["432"],"React Hook useEffect has a missing dependency: 'close'. Either include it or remove the dependency array. If 'close' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["433"],"no-global-assign","no-unsafe-negation",{"desc":"434","fix":"435"},{"messageId":"436","fix":"437","desc":"438"},{"messageId":"439","fix":"440","desc":"441"},{"messageId":"436","fix":"442","desc":"438"},{"messageId":"439","fix":"443","desc":"441"},{"desc":"434","fix":"444"},{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},{"desc":"447","fix":"449"},{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"450","fix":"464"},{"desc":"450","fix":"465"},{"desc":"466","fix":"467"},{"desc":"468","fix":"469"},{"desc":"470","fix":"471"},{"desc":"472","fix":"473"},{"desc":"474","fix":"475"},{"desc":"434","fix":"476"},{"desc":"450","fix":"477"},{"desc":"478","fix":"479"},{"desc":"480","fix":"481"},{"desc":"482","fix":"483"},{"desc":"434","fix":"484"},{"desc":"485","fix":"486"},{"desc":"434","fix":"487"},{"desc":"450","fix":"488"},{"desc":"482","fix":"489"},{"desc":"490","fix":"491"},{"desc":"492","fix":"493"},{"desc":"454","fix":"494"},{"desc":"495","fix":"496"},{"desc":"497","fix":"498"},{"desc":"499","fix":"500"},"Update the dependencies array to be: [clearErrors, error]",{"range":"501","text":"502"},"removeEscape",{"range":"503","text":"504"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"505","text":"506"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"507","text":"504"},{"range":"508","text":"506"},{"range":"509","text":"502"},"Update the dependencies array to be: [loanData, location]",{"range":"510","text":"511"},"Update the dependencies array to be: [getClientListForRole]",{"range":"512","text":"513"},{"range":"514","text":"513"},"Update the dependencies array to be: [retrieveClientLoans]",{"range":"515","text":"516"},"Update the dependencies array to be: [clearError, error]",{"range":"517","text":"518"},"Update the dependencies array to be: [getBankList]",{"range":"519","text":"520"},"Update the dependencies array to be: [approvalData, loanData]",{"range":"521","text":"522"},"Update the dependencies array to be: [clientBank]",{"range":"523","text":"524"},"Update the dependencies array to be: [loanData, repayData]",{"range":"525","text":"526"},"Update the dependencies array to be: [loanId, retrieveLoan]",{"range":"527","text":"528"},{"range":"529","text":"516"},{"range":"530","text":"516"},"Update the dependencies array to be: [clientId, loans]",{"range":"531","text":"532"},"Update the dependencies array to be: [retrieveLoan, userLoans]",{"range":"533","text":"534"},"Update the dependencies array to be: [returnNumber]",{"range":"535","text":"536"},"Update the dependencies array to be: [monthlySalary, loanAmount, installmentPeriod, loanCalcData.dti, loanCalcData]",{"range":"537","text":"538"},"Update the dependencies array to be: [authenticateUser, user.user_id]",{"range":"539","text":"540"},{"range":"541","text":"502"},{"range":"542","text":"516"},"Update the dependencies array to be: [clearErrors, getClientListForRole]",{"range":"543","text":"544"},"Update the dependencies array to be: [clientsForRole, user.user_id]",{"range":"545","text":"546"},"Update the dependencies array to be: [getClientListForRole, retrieveClientLoans]",{"range":"547","text":"548"},{"range":"549","text":"502"},"Update the dependencies array to be: [clientId, getClientDetails]",{"range":"550","text":"551"},{"range":"552","text":"502"},{"range":"553","text":"516"},{"range":"554","text":"548"},"Update the dependencies array to be: [currentAddedUser, getClientDetails]",{"range":"555","text":"556"},"Update the dependencies array to be: [biodata, currentAddedUser, userDetails]",{"range":"557","text":"558"},{"range":"559","text":"520"},"Update the dependencies array to be: [bankInfo.accountNumber, bankInfo.bankName, bankList, verifyBankInfo]",{"range":"560","text":"561"},"Update the dependencies array to be: [bankInfo, userBankDetails]",{"range":"562","text":"563"},"Update the dependencies array to be: [close]",{"range":"564","text":"565"},[1192,1199],"[clearErrors, error]",[1464,1465],"",[1464,1464],"\\",[1489,1490],[1489,1489],[868,875],[1043,1053],"[loanData, location]",[844,846],"[getClientListForRole]",[837,839],[904,906],"[retrieveClientLoans]",[1878,1885],"[clearError, error]",[2630,2632],"[getBankList]",[3103,3113],"[approvalData, loanData]",[5816,5830],"[clientBank]",[12338,12348],"[loanData, repayData]",[19659,19661],"[loanId, retrieveLoan]",[819,821],[375,377],[493,500],"[clientId, loans]",[564,575],"[retrieveLoan, userLoans]",[1186,1188],"[returnNumber]",[2869,2933],"[monthlySalary, loanAmount, installmentPeriod, loanCalcData.dti, loanCalcData]",[1060,1062],"[authenticateUser, user.user_id]",[1332,1339],[1105,1107],[1308,1310],"[clearErrors, getClientListForRole]",[1526,1542],"[clientsForRole, user.user_id]",[1596,1598],"[getClientListForRole, retrieveClientLoans]",[664,671],[2829,2831],"[clientId, getClientDetails]",[1036,1043],[812,814],[1811,1813],[2818,2820],"[currentAddedUser, getClientDetails]",[3184,3215],"[biodata, currentAddedUser, userDetails]",[14599,14601],[15039,15082],"[bankInfo.accountNumber, bankInfo.bankName, bankList, verifyBankInfo]",[15255,15272],"[bankInfo, userBankDetails]",[21241,21243],"[close]"]