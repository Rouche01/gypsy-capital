[{"/Users/richardemate/Desktop/gypsy-capital/src/App.js":"1","/Users/richardemate/Desktop/gypsy-capital/src/routes/protectedroute/ProtectedRoute.js":"2","/Users/richardemate/Desktop/gypsy-capital/src/pages/pages.js":"3","/Users/richardemate/Desktop/gypsy-capital/src/pages/Faqs/Faqs.jsx":"4","/Users/richardemate/Desktop/gypsy-capital/src/pages/ProcessorDashboard/ProcessorDashboard.jsx":"5","/Users/richardemate/Desktop/gypsy-capital/src/pages/SignUp/SignUp.jsx":"6","/Users/richardemate/Desktop/gypsy-capital/src/utils/nigeriaStates.js":"7","/Users/richardemate/Desktop/gypsy-capital/src/components/BankInfoForm/BankInfoForm.jsx":"8","/Users/richardemate/Desktop/gypsy-capital/src/components/LoanList/LoanList.jsx":"9","/Users/richardemate/Desktop/gypsy-capital/src/components/FileUploadButton/FileUploadButton.js":"10","/Users/richardemate/Desktop/gypsy-capital/src/components/IdentityForm/IdentityForm.jsx":"11","/Users/richardemate/Desktop/gypsy-capital/src/components/OfferLetter/OfferLetter.jsx":"12","/Users/richardemate/Desktop/gypsy-capital/src/context/UserContext.js":"13","/Users/richardemate/Desktop/gypsy-capital/src/pages/ProcessorLoans/ProcessorLoans.jsx":"14","/Users/richardemate/Desktop/gypsy-capital/src/pages/ResetSuccess/ResetSuccess.jsx":"15","/Users/richardemate/Desktop/gypsy-capital/src/utils/convertInputType.js":"16","/Users/richardemate/Desktop/gypsy-capital/src/components/BvnForm/BvnForm.jsx":"17","/Users/richardemate/Desktop/gypsy-capital/src/components/Loader/Loader.jsx":"18","/Users/richardemate/Desktop/gypsy-capital/src/components/ScrollToTopOnMount/ScrollToTopOnMount.jsx":"19","/Users/richardemate/Desktop/gypsy-capital/src/components/AccountSetupModal/AccountSetupModal.jsx":"20","/Users/richardemate/Desktop/gypsy-capital/src/pages/ConsumerCredit/ConsumerCredit.jsx":"21","/Users/richardemate/Desktop/gypsy-capital/src/components/Dashboard/Dashboard.jsx":"22","/Users/richardemate/Desktop/gypsy-capital/src/pages/Profile/Profile.jsx":"23","/Users/richardemate/Desktop/gypsy-capital/src/index.js":"24","/Users/richardemate/Desktop/gypsy-capital/src/routes/pageUrl.js":"25","/Users/richardemate/Desktop/gypsy-capital/src/pages/AuthorizerClientDetails/AuthorizerClientDetails.jsx":"26","/Users/richardemate/Desktop/gypsy-capital/src/pages/ResetPassword/ResetPassword.jsx":"27","/Users/richardemate/Desktop/gypsy-capital/src/components/CustomDatePicker/CustomDatePicker.jsx":"28","/Users/richardemate/Desktop/gypsy-capital/src/components/EmployerInfoForm/EmployerInfoForm.jsx":"29","/Users/richardemate/Desktop/gypsy-capital/src/pages/AgentOverview/AgentOverview.jsx":"30"},{"size":6121,"mtime":1617198008520,"results":"31","hashOfConfig":"32"},{"size":601,"mtime":1617198008542,"results":"33","hashOfConfig":"32"},{"size":2387,"mtime":1617198008542,"results":"34","hashOfConfig":"32"},{"size":855,"mtime":1617198008538,"results":"35","hashOfConfig":"32"},{"size":5721,"mtime":1617198008540,"results":"36","hashOfConfig":"32"},{"size":8985,"mtime":1617203560445,"results":"37","hashOfConfig":"32"},{"size":6981,"mtime":1617198008543,"results":"38","hashOfConfig":"32"},{"size":5890,"mtime":1617244695541,"results":"39","hashOfConfig":"32"},{"size":3592,"mtime":1617198008533,"results":"40","hashOfConfig":"32"},{"size":665,"mtime":1617198008531,"results":"41","hashOfConfig":"32"},{"size":2560,"mtime":1617198008532,"results":"42","hashOfConfig":"32"},{"size":11980,"mtime":1617198008533,"results":"43","hashOfConfig":"32"},{"size":8357,"mtime":1617198008535,"results":"44","hashOfConfig":"32"},{"size":1038,"mtime":1617198008541,"results":"45","hashOfConfig":"32"},{"size":606,"mtime":1617198008541,"results":"46","hashOfConfig":"32"},{"size":404,"mtime":1617198008542,"results":"47","hashOfConfig":"32"},{"size":1331,"mtime":1617198008531,"results":"48","hashOfConfig":"32"},{"size":244,"mtime":1617198008532,"results":"49","hashOfConfig":"32"},{"size":183,"mtime":1617198008535,"results":"50","hashOfConfig":"32"},{"size":21688,"mtime":1617198008530,"results":"51","hashOfConfig":"32"},{"size":8849,"mtime":1617245402720,"results":"52","hashOfConfig":"32"},{"size":6633,"mtime":1617246062967,"results":"53","hashOfConfig":"32"},{"size":5726,"mtime":1617253166643,"results":"54","hashOfConfig":"32"},{"size":601,"mtime":1617198008536,"results":"55","hashOfConfig":"32"},{"size":2456,"mtime":1617198008542,"results":"56","hashOfConfig":"32"},{"size":2997,"mtime":1617198008536,"results":"57","hashOfConfig":"32"},{"size":3453,"mtime":1617198008541,"results":"58","hashOfConfig":"32"},{"size":794,"mtime":1617198008531,"results":"59","hashOfConfig":"32"},{"size":10134,"mtime":1617245012534,"results":"60","hashOfConfig":"32"},{"size":5859,"mtime":1617260738509,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d9vkda",{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/richardemate/Desktop/gypsy-capital/src/App.js",[],"/Users/richardemate/Desktop/gypsy-capital/src/routes/protectedroute/ProtectedRoute.js",["125"],"/Users/richardemate/Desktop/gypsy-capital/src/pages/pages.js",[],"/Users/richardemate/Desktop/gypsy-capital/src/pages/Faqs/Faqs.jsx",[],"/Users/richardemate/Desktop/gypsy-capital/src/pages/ProcessorDashboard/ProcessorDashboard.jsx",["126"],"/Users/richardemate/Desktop/gypsy-capital/src/pages/SignUp/SignUp.jsx",["127","128","129"],"/Users/richardemate/Desktop/gypsy-capital/src/utils/nigeriaStates.js",[],"/Users/richardemate/Desktop/gypsy-capital/src/components/BankInfoForm/BankInfoForm.jsx",["130","131","132"],"/Users/richardemate/Desktop/gypsy-capital/src/components/LoanList/LoanList.jsx",[],"/Users/richardemate/Desktop/gypsy-capital/src/components/FileUploadButton/FileUploadButton.js",[],["133","134"],"/Users/richardemate/Desktop/gypsy-capital/src/components/IdentityForm/IdentityForm.jsx",[],"/Users/richardemate/Desktop/gypsy-capital/src/components/OfferLetter/OfferLetter.jsx",[],"/Users/richardemate/Desktop/gypsy-capital/src/context/UserContext.js",[],"/Users/richardemate/Desktop/gypsy-capital/src/pages/ProcessorLoans/ProcessorLoans.jsx",["135","136"],"/Users/richardemate/Desktop/gypsy-capital/src/pages/ResetSuccess/ResetSuccess.jsx",[],"/Users/richardemate/Desktop/gypsy-capital/src/utils/convertInputType.js",[],["137","138"],"/Users/richardemate/Desktop/gypsy-capital/src/components/BvnForm/BvnForm.jsx",[],"/Users/richardemate/Desktop/gypsy-capital/src/components/Loader/Loader.jsx",[],"/Users/richardemate/Desktop/gypsy-capital/src/components/ScrollToTopOnMount/ScrollToTopOnMount.jsx",[],"/Users/richardemate/Desktop/gypsy-capital/src/components/AccountSetupModal/AccountSetupModal.jsx",["139","140","141","142","143","144"],"import React, { useContext, useEffect, useMemo, useState, useRef } from 'react';\nimport styles from './AccountSetupModal.module.scss';\nimport { Modal, Row, Col } from 'react-bootstrap';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport { validateInput } from '../../utils/validateInput';\nimport { nigeriaStates } from '../../utils/nigeriaStates';\nimport { Context as BankContext } from '../../context/BankCotext';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport FileUploadButton from '../FileUploadButton/FileUploadButton';\nimport { FaCloudUploadAlt } from 'react-icons/fa';\nimport { toast, ToastContainer } from 'react-toastify';\nimport Loader from '../Loader/Loader';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport BeatLoader from 'react-spinners/BeatLoader';\n\n\nexport const VerifyBvn = ({ submit }) => {\n\n  const [bvn, setBvn] = useState('');\n  const { state: { loading } } = useContext(UserContext);\n\n  const submitBvn = () => {\n    if(bvn) {\n      submit(bvn);\n    }\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Verify BVN</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row>\n            <Col>\n              <InputField \n                type=\"text\"\n                nameAttr=\"otp\"\n                label=\"Enter Client's BVN\"\n                value={bvn}\n                changed={(val) => {\n                  setBvn(val)\n                }}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button\n          fullWidth\n          bgColor=\"#741763\" \n          size=\"lg\" \n          clicked={submitBvn}\n          color=\"#EBEBEB\"\n          loading={loading}\n          disabled={loading}\n        >\n          Verify\n        </Button>\n        <p className={styles.hint}>To get your BVN, Dial *565*0#</p>\n      </Modal.Footer>\n    </>\n  )\n}\n\n\nexport const PersonalInfo = ({ submit }) => {\n\n  const { state: { userDetails }, getClientDetails } = useContext(UserContext);\n  const { state: { currentAddedUser} } = useContext(AuthContext);\n\n\n  const [biodata, setBiodata] = useState({\n    fullName: '',\n    dateOfBirth: '',\n    bvnPhoneNo: '',\n    email: '',\n    phoneNo: '',\n    altPhone: '',\n    gender: ''\n  });\n\n  const [biodataErrors, setBiodataErrors] = useState({\n    fullName: null,\n    dateOfBirth: null,\n    bvnPhoneNo: null,\n    email: null,\n    phoneNo: null,\n    altPhone: null,\n    gender: null\n  });\n\n\n  useEffect(() => {\n    const { user_id } = currentAddedUser;\n    getClientDetails(user_id);\n  }, []);\n\n  useEffect(() => {\n    if(userDetails) {\n      const { bioData } = userDetails;\n      setBiodata({ ...biodata, \n        fullName: `${bioData.firstName} ${bioData.lastName}`,\n        email: bioData.email,\n        phoneNo: bioData.phoneNumber.replace('234', '0'),\n        dateOfBirth: bioData.DOB,\n        bvnPhoneNo: bioData.bvnPhoneNumber\n      })\n    }\n  }, [currentAddedUser, userDetails]);\n\n\n  const addPersonalInfo = () => {\n    const validated = validateInput(biodata, setBiodataErrors);\n    if(validated) {\n      submit(biodata);\n    }\n  }\n  if(!userDetails) {\n    return <Loader />\n  }\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Personal Info</h2>\n        </Modal.Title>\n        {/* <p className={styles.subtitle}>Personal Info</p> */}\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Full name\"\n                type=\"text\"\n                nameAttr=\"fullname\"\n                value={biodata.fullName}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, fullName: null })\n                  setBiodata({ ...biodata, fullName: val})\n                }}\n                error={biodataErrors.fullName && biodataErrors.fullName}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Date of Birth\"\n                type=\"text\"\n                nameAttr=\"dob\"\n                value={biodata.dateOfBirth}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, dateOfBirth: null })\n                  setBiodata({ ...biodata, dateOfBirth: val})\n                }}\n                error={biodataErrors.dateOfBirth && biodataErrors.dateOfBirth}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"BVN-linked Phone Number\"\n                type=\"text\"\n                nameAttr=\"bvnPhoneNo\"\n                value={biodata.bvnPhoneNo}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, bvnPhoneNo: null })\n                  setBiodata({ ...biodata, bvnPhoneNo: val})\n                }}\n                error={biodataErrors.bvnPhoneNo && biodataErrors.bvnPhoneNo}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Email\"\n                type=\"email\"\n                nameAttr=\"email\"\n                value={biodata.email}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, email: null })\n                  setBiodata({ ...biodata, email: val})\n                }}\n                error={biodataErrors.email && biodataErrors.email}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Phone Number\"\n                type=\"text\"\n                nameAttr=\"PhoneNo\"\n                value={biodata.phoneNo}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, phoneNo: null })\n                  setBiodata({ ...biodata, phoneNo: val})\n                }}\n                error={biodataErrors.phoneNo && biodataErrors.phoneNo}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Alternative Phone Number\"\n                type=\"text\"\n                nameAttr=\"altPhoneNo\"\n                value={biodata.altPhone}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, altPhone: null })\n                  setBiodata({ ...biodata, altPhone: val})\n                }}\n                error={biodataErrors.altPhone && biodataErrors.altPhone}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <InputField \n                label=\"Gender\"\n                type=\"select\"\n                options={['Female', 'Male', 'Other']}\n                nameAttr=\"gender\"\n                value={biodata.gender}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, gender: null })\n                  setBiodata({ ...biodata, gender: val})\n                }}\n                error={biodataErrors.gender && biodataErrors.gender}\n              />\n            </Col>\n          </Row>\n          <Modal.Footer>\n            <Button \n              className=\"mt-4\" \n              clicked={addPersonalInfo} \n              fullWidth \n              bgColor=\"#741763\" \n              size=\"lg\" \n              color=\"#EBEBEB\"\n            >\n              Save & Continue\n            </Button>\n          </Modal.Footer>\n        </div>\n      </Modal.Body>\n    </>\n  )\n}\n\n\nexport const Residence = ({ submit }) => {\n\n  const [residentialInfo, setResidentialInfo] = useState({\n    street: '',\n    city: '',\n    state: ''\n  });\n\n  const [residentialErrors, setResidentialErrors] = useState({\n    street: null,\n    city: null,\n    state: null\n  });\n\n  const addResidence = () => {\n    const validated = validateInput(residentialInfo, setResidentialErrors);\n    if(validated) {\n      submit(residentialInfo);\n    }\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Residential Address</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Street\"\n                type=\"text\"\n                nameAttr=\"residentStreet\"\n                value={residentialInfo.street}\n                changed={(val) => {\n                  setResidentialErrors({ ...residentialErrors, street: null })\n                  setResidentialInfo({ ...residentialInfo, street: val})\n                }}\n                error={residentialErrors.street && residentialErrors.street}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"City\"\n                type=\"text\"\n                nameAttr=\"city\"\n                value={residentialInfo.city}\n                changed={(val) => {\n                  setResidentialErrors({ ...residentialErrors, city: null })\n                  setResidentialInfo({ ...residentialInfo, city: val})\n                }}\n                error={residentialErrors.city && residentialErrors.city}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"State\"\n                type=\"select\"\n                options={nigeriaStates}\n                nameAttr=\"state\"\n                value={residentialInfo.state}\n                changed={(val) => {\n                  setResidentialErrors({ ...residentialErrors, state: null })\n                  setResidentialInfo({ ...residentialInfo, state: val})\n                }}\n                error={residentialErrors.state && residentialErrors.state}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addResidence} \n          fullWidth \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\n\nexport const NextOfKin = ({ submit }) => {\n\n  const [kinInfo, setKinInfo] = useState({\n    fullName: '',\n    relationship: '',\n    email: '',\n    phoneNo: '',\n    address: ''\n  });\n\n  const [kinErrors, setKinErrors] = useState({\n    fullName: null,\n    relationship: null,\n    email: null,\n    phoneNo: null,\n    address: null\n  });\n\n  const addNextOfKin = () => {\n    const validated = validateInput(kinInfo, setKinErrors);\n    if(validated) {\n      submit(kinInfo);\n    }\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Next of Kin Info</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Full name\"\n                type=\"text\"\n                nameAttr=\"kinFullname\"\n                value={kinInfo.fullName}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, fullName: null })\n                  setKinInfo({ ...kinInfo, fullName: val})\n                }}\n                error={kinErrors.fullName && kinErrors.fullName}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Relationship\"\n                type=\"text\"\n                nameAttr=\"kinRelationship\"\n                value={kinInfo.relationship}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, relationship: null })\n                  setKinInfo({ ...kinInfo, relationship: val})\n                }}\n                error={kinErrors.relationship && kinErrors.relationship}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Email Address\"\n                type=\"email\"\n                nameAttr=\"kinEmail\"\n                value={kinInfo.email}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, email: null })\n                  setKinInfo({ ...kinInfo, email: val})\n                }}\n                error={kinErrors.email && kinErrors.email}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Phone Number\"\n                type=\"text\"\n                nameAttr=\"kinPhone\"\n                value={kinInfo.phoneNo}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, phoneNo: null })\n                  setKinInfo({ ...kinInfo, phoneNo: val})\n                }}\n                error={kinErrors.phoneNo && kinErrors.phoneNo}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Residential Address\"\n                type=\"text\"\n                nameAttr=\"kinAddress\"\n                placeholder=\"Street address to the nearest bus stop\"\n                value={kinInfo.address}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, address: null })\n                  setKinInfo({ ...kinInfo, address: val})\n                }}  \n                error={kinErrors.address && kinErrors.address}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addNextOfKin} \n          fullWidth \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\nexport const BankInfo = ({ submit }) => {\n\n  const { state: { loading } } = useContext(UserContext);\n\n  const [bankInfo, setBankInfo] = useState({\n    bankName: '',\n    accountType: '',\n    accountNumber: '',\n    accountName: ''\n  });\n\n  const [bankInfoErrors, setBankInfoErrors] = useState({\n    bankName: null,\n    accountType: null,\n    accountNumber: null,\n    accountName: null\n  });\n\n  const { \n    state: { bankList, userBankDetails, bankLoading }, \n    getBankList,\n    verifyBankInfo\n  } = useContext(BankContext);\n\n  useEffect(() => {\n      getBankList();\n  }, []);\n\n  const bankNames = useMemo(() => {\n    return bankList ? \n      bankList.map((bank) => bank.name) :\n      []\n  }, [bankList]);\n\n  useEffect(() => {\n    if(bankInfo.accountNumber.length === 10 && bankInfo.bankName) {\n      const bank = bankList.find(bank => bank.name.toLowerCase() === bankInfo.bankName);\n      const bankCode = bank.code;\n      console.log(bankCode)\n      verifyBankInfo(bankInfo.accountNumber, bankCode)\n    }\n  }, [bankInfo.accountNumber, bankInfo.bankName])\n\n\n  useEffect(() => {\n    console.log(userBankDetails);\n    if(userBankDetails) {\n      setBankInfo({ ...bankInfo, accountName: userBankDetails.account_name })\n    }\n  }, [userBankDetails]);\n\n  const addBankInfo = () => {\n    const validated = validateInput(bankInfo, setBankInfoErrors);\n    if(validated) {\n      submit(bankInfo);\n    }\n  }\n\n  return(\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Bank Info</h2>\n          <p className={styles.subtitle}>Add a bank account where we can send investment proceeds or loan requests to.</p>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"select\"\n                label=\"Bank\"\n                options={bankNames}\n                nameAttr=\"bank\"\n                value={bankInfo.bankName}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, bankName: null })\n                  setBankInfo({ ...bankInfo, bankName: val})\n                }}\n                error={bankInfoErrors.bankName && bankInfoErrors.bankName}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Account Type\"\n                type=\"select\"\n                options={[\"Savings\", \"Current\"]}\n                nameAttr=\"acountType\"\n                value={bankInfo.accountType}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, accountType: null })\n                  setBankInfo({ ...bankInfo, accountType: val})\n                }}\n                error={bankInfoErrors.accountType && bankInfoErrors.accountType}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"text\"\n                label=\"Account Number\"\n                nameAttr=\"accountNo\"\n                value={bankInfo.accountNumber}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, accountNumber: null })\n                  setBankInfo({ ...bankInfo, accountNumber: val})\n                }}\n                error={bankInfoErrors.accountNumber && bankInfoErrors.accountNumber}\n              />\n            </Col>\n            <Col>\n              { !bankLoading ? <InputField \n                label=\"Account Name\"\n                type=\"text\"\n                nameAttr=\"accountName\"\n                value={bankInfo.accountName}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, accountName: null })\n                  setBankInfo({ ...bankInfo, accountName: val})\n                }}\n                error={bankInfoErrors.accountName && bankInfoErrors.accountName}\n              /> : \n              <div className={styles.loaderWrapper}>\n                <BeatLoader color=\"#741763\" size={10} />\n              </div>\n              }\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addBankInfo} \n          fullWidth \n          loading={loading}\n          disabled={loading}\n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\nexport const IdentityForm = ({ submit }) => {\n\n  const { state: { loading } } = useContext(UserContext);\n  const idFileRef = useRef();\n  const passportFileRef= useRef();\n\n  const [idType, setIdType] = useState('');\n\n  const addIdentityInfo = () => {\n    if(idFileRef.current.files.length > 0) {\n      if(passportFileRef.current.files.length > 0) {\n        if(idType) {\n          const idFile = idFileRef.current.files[0];\n          const passportFile = passportFileRef.current.files[0];\n          submit(idFile, passportFile, idType);\n        }\n      } else {\n        toast.error(\"Please upload a passport photograph of yourself\")\n      }\n    } else {\n      toast.error(\"Please upload a verified identification card\")\n    }\n  }\n\n  return (\n    <>\n      <ToastContainer position=\"top-center\" />\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Identity</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <div className={styles.validId}>\n            <p className={styles.validID}>Upload a valid government issued Identification</p>\n            <InputField \n              type=\"select\"\n              options={['International Passport', \"Driver's License\", 'Voters Card', 'National Identity Card']}\n              nameAttr=\"identityType\"\n              value={idType}\n              changed={(val) => setIdType(val)}\n            />\n            <FileUploadButton \n              label=\"Choose File\" \n              icon={<FaCloudUploadAlt className=\"ml-3\" size=\"1.1em\" />}\n              id=\"id-upload\" \n              className=\"mt-3\"\n              fileRef={idFileRef}\n              fullwidth\n            />\n          </div>\n          <div className={styles.passportVerify}>\n            <p className={styles.passportImg}>Please upload a clear and resent passport photograph.</p>\n            <FileUploadButton \n              label=\"Choose File\" \n              icon={<FaCloudUploadAlt className=\"ml-3\" size=\"1.1em\" />}\n              id=\"passport-upload\"  \n              fileRef={passportFileRef}\n              fullwidth\n            />\n          </div>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addIdentityInfo} \n          fullWidth \n          loading={loading}\n          disabled={loading}\n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\n\nexport const OnboardSuccess = ({ close }) => {\n\n  useEffect(() => {\n    setTimeout(() => {\n      close();\n    }, 3000);\n  }, []);\n\n  return (\n    <>\n      <Modal.Body>\n        <div className={styles.onboard}>\n          <FaCheckCircle size=\"4em\" color=\"#741763\" />\n          <h4>User successfully onboarded.</h4>\n          <Button\n            className=\"mt-4\" \n            clicked={close} \n            bgColor=\"#741763\" \n            size=\"sm\" \n            color=\"#EBEBEB\"\n          >\n            Continue\n          </Button>\n        </div>\n      </Modal.Body>\n    </>\n  )\n}","/Users/richardemate/Desktop/gypsy-capital/src/pages/ConsumerCredit/ConsumerCredit.jsx",["145","146"],"/Users/richardemate/Desktop/gypsy-capital/src/components/Dashboard/Dashboard.jsx",[],"/Users/richardemate/Desktop/gypsy-capital/src/pages/Profile/Profile.jsx",[],"/Users/richardemate/Desktop/gypsy-capital/src/index.js",[],"/Users/richardemate/Desktop/gypsy-capital/src/routes/pageUrl.js",[],"/Users/richardemate/Desktop/gypsy-capital/src/pages/AuthorizerClientDetails/AuthorizerClientDetails.jsx",["147"],"/Users/richardemate/Desktop/gypsy-capital/src/pages/ResetPassword/ResetPassword.jsx",["148"],"/Users/richardemate/Desktop/gypsy-capital/src/components/CustomDatePicker/CustomDatePicker.jsx",[],"/Users/richardemate/Desktop/gypsy-capital/src/components/EmployerInfoForm/EmployerInfoForm.jsx",[],"/Users/richardemate/Desktop/gypsy-capital/src/pages/AgentOverview/AgentOverview.jsx",[],{"ruleId":"149","severity":1,"message":"150","line":9,"column":30,"nodeType":"151","messageId":"152","endLine":9,"endColumn":34},{"ruleId":"153","severity":1,"message":"154","line":39,"column":6,"nodeType":"155","endLine":39,"endColumn":8,"suggestions":"156"},{"ruleId":"153","severity":1,"message":"157","line":46,"column":6,"nodeType":"155","endLine":46,"endColumn":13,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":62,"column":33,"nodeType":"161","messageId":"162","endLine":62,"endColumn":34,"suggestions":"163"},{"ruleId":"159","severity":1,"message":"160","line":62,"column":58,"nodeType":"161","messageId":"162","endLine":62,"endColumn":59,"suggestions":"164"},{"ruleId":"153","severity":1,"message":"165","line":42,"column":6,"nodeType":"155","endLine":42,"endColumn":8,"suggestions":"166"},{"ruleId":"153","severity":1,"message":"167","line":82,"column":6,"nodeType":"155","endLine":82,"endColumn":49,"suggestions":"168"},{"ruleId":"153","severity":1,"message":"169","line":89,"column":6,"nodeType":"155","endLine":89,"endColumn":23,"suggestions":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"149","severity":1,"message":"175","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":14},{"ruleId":"153","severity":1,"message":"176","line":22,"column":6,"nodeType":"155","endLine":22,"endColumn":8,"suggestions":"177"},{"ruleId":"171","replacedBy":"178"},{"ruleId":"173","replacedBy":"179"},{"ruleId":"153","severity":1,"message":"180","line":103,"column":6,"nodeType":"155","endLine":103,"endColumn":8,"suggestions":"181"},{"ruleId":"153","severity":1,"message":"182","line":116,"column":6,"nodeType":"155","endLine":116,"endColumn":37,"suggestions":"183"},{"ruleId":"153","severity":1,"message":"165","line":500,"column":6,"nodeType":"155","endLine":500,"endColumn":8,"suggestions":"184"},{"ruleId":"153","severity":1,"message":"167","line":515,"column":6,"nodeType":"155","endLine":515,"endColumn":49,"suggestions":"185"},{"ruleId":"153","severity":1,"message":"169","line":523,"column":6,"nodeType":"155","endLine":523,"endColumn":23,"suggestions":"186"},{"ruleId":"153","severity":1,"message":"187","line":713,"column":6,"nodeType":"155","endLine":713,"endColumn":8,"suggestions":"188"},{"ruleId":"153","severity":1,"message":"176","line":54,"column":6,"nodeType":"155","endLine":54,"endColumn":8,"suggestions":"189"},{"ruleId":"153","severity":1,"message":"190","line":61,"column":6,"nodeType":"155","endLine":61,"endColumn":13,"suggestions":"191"},{"ruleId":"153","severity":1,"message":"192","line":36,"column":6,"nodeType":"155","endLine":36,"endColumn":8,"suggestions":"193"},{"ruleId":"153","severity":1,"message":"157","line":35,"column":6,"nodeType":"155","endLine":35,"endColumn":13,"suggestions":"194"},"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getClientListForRole' and 'retrieveClientLoans'. Either include them or remove the dependency array.","ArrayExpression",["195"],"React Hook useEffect has a missing dependency: 'clearErrors'. Either include it or remove the dependency array.",["196"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["197","198"],["199","200"],"React Hook useEffect has a missing dependency: 'getBankList'. Either include it or remove the dependency array.",["201"],"React Hook useEffect has missing dependencies: 'bankList' and 'verifyBankInfo'. Either include them or remove the dependency array.",["202"],"React Hook useEffect has a missing dependency: 'bankInfo'. Either include it or remove the dependency array. You can also do a functional update 'setBankInfo(b => ...)' if you only need 'bankInfo' in the 'setBankInfo' call.",["203"],"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"'styles' is defined but never used.","React Hook useEffect has a missing dependency: 'retrieveClientLoans'. Either include it or remove the dependency array.",["206"],["204"],["205"],"React Hook useEffect has missing dependencies: 'currentAddedUser' and 'getClientDetails'. Either include them or remove the dependency array.",["207"],"React Hook useEffect has a missing dependency: 'biodata'. Either include it or remove the dependency array. You can also do a functional update 'setBiodata(b => ...)' if you only need 'biodata' in the 'setBiodata' call.",["208"],["209"],["210"],["211"],"React Hook useEffect has a missing dependency: 'close'. Either include it or remove the dependency array. If 'close' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["212"],["213"],"React Hook useEffect has a missing dependency: 'clearError'. Either include it or remove the dependency array.",["214"],"React Hook useEffect has missing dependencies: 'clientId' and 'getClientDetails'. Either include them or remove the dependency array.",["215"],["216"],{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"messageId":"221","fix":"222","desc":"223"},{"messageId":"224","fix":"225","desc":"226"},{"messageId":"221","fix":"227","desc":"223"},{"messageId":"224","fix":"228","desc":"226"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},"no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"229","fix":"241"},{"desc":"231","fix":"242"},{"desc":"233","fix":"243"},{"desc":"244","fix":"245"},{"desc":"235","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"219","fix":"251"},"Update the dependencies array to be: [getClientListForRole, retrieveClientLoans]",{"range":"252","text":"253"},"Update the dependencies array to be: [clearErrors, error]",{"range":"254","text":"255"},"removeEscape",{"range":"256","text":"257"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"258","text":"259"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"260","text":"257"},{"range":"261","text":"259"},"Update the dependencies array to be: [getBankList]",{"range":"262","text":"263"},"Update the dependencies array to be: [bankInfo.accountNumber, bankInfo.bankName, bankList, verifyBankInfo]",{"range":"264","text":"265"},"Update the dependencies array to be: [bankInfo, userBankDetails]",{"range":"266","text":"267"},"Update the dependencies array to be: [retrieveClientLoans]",{"range":"268","text":"269"},"Update the dependencies array to be: [currentAddedUser, getClientDetails]",{"range":"270","text":"271"},"Update the dependencies array to be: [biodata, currentAddedUser, userDetails]",{"range":"272","text":"273"},{"range":"274","text":"263"},{"range":"275","text":"265"},{"range":"276","text":"267"},"Update the dependencies array to be: [close]",{"range":"277","text":"278"},{"range":"279","text":"269"},"Update the dependencies array to be: [clearError, error]",{"range":"280","text":"281"},"Update the dependencies array to be: [clientId, getClientDetails]",{"range":"282","text":"283"},{"range":"284","text":"255"},[1811,1813],"[getClientListForRole, retrieveClientLoans]",[1281,1288],"[clearErrors, error]",[1549,1550],"",[1549,1549],"\\",[1574,1575],[1574,1574],[1278,1280],"[getBankList]",[2585,2628],"[bankInfo.accountNumber, bankInfo.bankName, bankList, verifyBankInfo]",[2803,2820],"[bankInfo, userBankDetails]",[812,814],"[retrieveClientLoans]",[2818,2820],"[currentAddedUser, getClientDetails]",[3184,3215],"[biodata, currentAddedUser, userDetails]",[14599,14601],[15039,15082],[15255,15272],[21241,21243],"[close]",[1906,1908],[2006,2013],"[clearError, error]",[1155,1157],"[clientId, getClientDetails]",[1036,1043]]