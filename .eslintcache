[{"/home/tga/Desktop/gypsy-capital/src/App.js":"1","/home/tga/Desktop/gypsy-capital/src/components/PersonalForm/PersonalForm.jsx":"2","/home/tga/Desktop/gypsy-capital/src/context/BankCotext.js":"3","/home/tga/Desktop/gypsy-capital/src/index.js":"4","/home/tga/Desktop/gypsy-capital/src/context/AuthContext.js":"5","/home/tga/Desktop/gypsy-capital/src/pages/pages.js":"6","/home/tga/Desktop/gypsy-capital/src/context/createDataContext.js":"7","/home/tga/Desktop/gypsy-capital/src/pages/CreditReport/CreditReport.jsx":"8","/home/tga/Desktop/gypsy-capital/src/pages/OtpVerify/OtpVerify.jsx":"9","/home/tga/Desktop/gypsy-capital/src/pages/SignIn/SignIn.jsx":"10","/home/tga/Desktop/gypsy-capital/src/pages/ConsumerCredit/ConsumerCredit.jsx":"11","/home/tga/Desktop/gypsy-capital/src/components/Button/Button.jsx":"12","/home/tga/Desktop/gypsy-capital/src/components/ProgressBar/ProgressBar.jsx":"13","/home/tga/Desktop/gypsy-capital/src/components/IdentityForm/IdentityForm.jsx":"14","/home/tga/Desktop/gypsy-capital/src/components/FaqSection/FaqSection.jsx":"15","/home/tga/Desktop/gypsy-capital/src/utils/nigeriaStates.js":"16","/home/tga/Desktop/gypsy-capital/src/context/ProfileStageContext.js":"17","/home/tga/Desktop/gypsy-capital/src/pages/Profile/Profile.jsx":"18","/home/tga/Desktop/gypsy-capital/src/context/createPersistDataContext.js":"19","/home/tga/Desktop/gypsy-capital/src/api/cloudinary-api.js":"20","/home/tga/Desktop/gypsy-capital/src/hooks/useCloudinary.js":"21","/home/tga/Desktop/gypsy-capital/src/context/UserContext.js":"22","/home/tga/Desktop/gypsy-capital/src/routes/pageUrl.js":"23","/home/tga/Desktop/gypsy-capital/src/routes/protectedroute/ProtectedRoute.js":"24","/home/tga/Desktop/gypsy-capital/src/api/gypsy-web.js":"25","/home/tga/Desktop/gypsy-capital/src/pages/Overview/Overview.jsx":"26","/home/tga/Desktop/gypsy-capital/src/pages/AboutUs/AboutUs.jsx":"27","/home/tga/Desktop/gypsy-capital/src/components/InputField/InputField.js":"28","/home/tga/Desktop/gypsy-capital/src/components/Dashboard/Dashboard.jsx":"29","/home/tga/Desktop/gypsy-capital/src/components/Footer/Footer.jsx":"30","/home/tga/Desktop/gypsy-capital/src/utils/history.js":"31","/home/tga/Desktop/gypsy-capital/src/pages/ContactPage/ContactPage.jsx":"32","/home/tga/Desktop/gypsy-capital/src/pages/LoanCalculator/LoanCalculator.jsx":"33","/home/tga/Desktop/gypsy-capital/src/pages/AgentOverview/AgentOverview.jsx":"34"},{"size":2082,"mtime":1612641903204,"results":"35","hashOfConfig":"36"},{"size":14850,"mtime":1612613170828,"results":"37","hashOfConfig":"36"},{"size":1701,"mtime":1612604883562,"results":"38","hashOfConfig":"36"},{"size":548,"mtime":1611990348106,"results":"39","hashOfConfig":"36"},{"size":5710,"mtime":1612614859559,"results":"40","hashOfConfig":"36"},{"size":895,"mtime":1612648130721,"results":"41","hashOfConfig":"36"},{"size":533,"mtime":1612421501467,"results":"42","hashOfConfig":"36"},{"size":992,"mtime":1611281322795,"results":"43","hashOfConfig":"36"},{"size":2391,"mtime":1612574568451,"results":"44","hashOfConfig":"36"},{"size":2461,"mtime":1612416917086,"results":"45","hashOfConfig":"36"},{"size":22062,"mtime":1611816481408,"results":"46","hashOfConfig":"36"},{"size":917,"mtime":1612416700603,"results":"47","hashOfConfig":"36"},{"size":1565,"mtime":1611429643367,"results":"48","hashOfConfig":"36"},{"size":2237,"mtime":1612621589961,"results":"49","hashOfConfig":"36"},{"size":2704,"mtime":1612099926099,"results":"50","hashOfConfig":"36"},{"size":449,"mtime":1612595713808,"results":"51","hashOfConfig":"36"},{"size":976,"mtime":1612617033879,"results":"52","hashOfConfig":"36"},{"size":9841,"mtime":1612628949281,"results":"53","hashOfConfig":"36"},{"size":896,"mtime":1612614837095,"results":"54","hashOfConfig":"36"},{"size":158,"mtime":1612620359637,"results":"55","hashOfConfig":"36"},{"size":481,"mtime":1612621802620,"results":"56","hashOfConfig":"36"},{"size":3294,"mtime":1612626827881,"results":"57","hashOfConfig":"36"},{"size":985,"mtime":1612647735213,"results":"58","hashOfConfig":"36"},{"size":837,"mtime":1611816481484,"results":"59","hashOfConfig":"36"},{"size":147,"mtime":1612318782772,"results":"60","hashOfConfig":"36"},{"size":4748,"mtime":1611816481432,"results":"61","hashOfConfig":"36"},{"size":6181,"mtime":1612507865727,"results":"62","hashOfConfig":"36"},{"size":2349,"mtime":1612099100962,"results":"63","hashOfConfig":"36"},{"size":2137,"mtime":1612142678320,"results":"64","hashOfConfig":"36"},{"size":1152,"mtime":1612102534435,"results":"65","hashOfConfig":"36"},{"size":84,"mtime":1611990348110,"results":"66","hashOfConfig":"36"},{"size":4431,"mtime":1612641325177,"results":"67","hashOfConfig":"36"},{"size":3289,"mtime":1612646261243,"results":"68","hashOfConfig":"36"},{"size":473,"mtime":1612647772133,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"t9s37o",{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"75"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/tga/Desktop/gypsy-capital/src/App.js",["144"],"/home/tga/Desktop/gypsy-capital/src/components/PersonalForm/PersonalForm.jsx",["145","146","147","148","149","150"],"import React, { useState, useContext, useEffect, useMemo } from 'react';\nimport styles from './PersonalForm.module.scss';\nimport { Row, Col } from 'react-bootstrap';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport InputField from '../InputField/InputField';\nimport Button from '../Button/Button';\nimport { Context as UserContext } from '../../context/UserContext';\nimport nigeriaStates from '../../utils/nigeriaStates';\nimport { Context as BankContext } from '../../context/BankCotext';\n\n\nconst PersonalForm = ({ submit }) => {\n\n  const { \n    state: { bankList, userBankDetails }, \n    getBankList, \n    verifyBankInfo,\n  } = useContext(BankContext);\n  const { state: { user } } = useContext(AuthContext);\n  const {\n    state: { userDetails },\n    getClientDetails\n  } = useContext(UserContext);\n\n  useEffect(() => {\n    (async() => {\n      await getClientDetails(user.user_id);\n      await getBankList();\n    })()\n  }, [])\n \n  const bankNames = useMemo(() => {\n    return bankList ? \n      bankList.map((bank) => bank.name) :\n      []\n  }, [bankList])\n\n\n  const [biodata, setBiodata] = useState({\n    fullName: '',\n    dateOfBirth: '',\n    bvnPhoneNo: '',\n    email: '',\n    phoneNo: '',\n    altPhone: '',\n    gender: ''\n  });\n  const [biodataErrors, setBiodataErrors] = useState({\n    fullName: null,\n    dateOfBirth: null,\n    bvnPhoneNo: null,\n    email: null,\n    phoneNo: null,\n    altPhone: null,\n    gender: null\n  });\n  const [residentialInfo, setResidentialInfo] = useState({\n    street: '',\n    city: '',\n    state: ''\n  });\n  const [residentialErrors, setResidentialErrors] = useState({\n    street: null,\n    city: null,\n    state: null\n  })\n  const [kinInfo, setKinInfo] = useState({\n    fullName: '',\n    relationship: '',\n    email: '',\n    phoneNo: '',\n    address: ''\n  });\n  const [kinErrors, setKinErrors] = useState({\n    fullName: null,\n    relationship: null,\n    email: null,\n    phoneNo: null,\n    address: null\n  });\n  const [bankInfo, setBankInfo] = useState({\n    bankName: '',\n    accountType: '',\n    accountNumber: '',\n    accountName: ''\n  });\n  const [bankInfoErrors, setBankInfoErrors] = useState({\n    bankName: null,\n    accountType: null,\n    accountNumber: null,\n    accountName: null\n  })\n\n  useEffect(() => {\n    if(bankInfo.accountNumber.length === 10 && bankInfo.bankName) {\n      const bank = bankList.find(bank => bank.name.toLowerCase() === bankInfo.bankName);\n      const bankCode = bank.code;\n      console.log(bankCode)\n      verifyBankInfo(bankInfo.accountNumber, bankCode)\n    }\n  }, [bankInfo.accountNumber, bankInfo.bankName])\n\n\n  const validateInput = (inputValues, errorSetter) => {\n\n    const validMail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    let validPhoneNumber = /^[0]\\d{10}$/;\n\n    const errorsInit = {};\n    let fields = { ...inputValues }\n\n    for(const key in fields) {\n      if(!fields[key]) {\n        errorsInit[key] = \"This field is required\";\n      } \n      if(fields.email && !fields.email.match(validMail)) {\n        errorsInit.email = \"Please enter a valid email address\"\n      } \n      if(fields.phoneNo && !fields.phoneNo.match(validPhoneNumber)) {\n        errorsInit.phoneNo = \"Please enter a valid phone number\"\n      } \n    }\n\n    errorSetter(errorsInit);\n    console.log(errorsInit);\n    if(Object.entries(errorsInit).length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n\n  }\n\n\n  useEffect(() => {\n    console.log(userBankDetails);\n    if(userBankDetails) {\n      setBankInfo({ ...bankInfo, accountName: userBankDetails.account_name })\n    }\n  }, [userBankDetails]);\n\n\n  const handleSubmit = () => {\n    const validatedBiodata = validateInput(biodata, setBiodataErrors);\n    const validatedResidence = validateInput(residentialInfo, setResidentialErrors);\n    const validatedKinInfo = validateInput(kinInfo, setKinErrors)\n    const validatedBankInfo = validateInput(bankInfo, setBankInfoErrors)\n    if(validatedBiodata && validatedResidence && validatedKinInfo && validatedBankInfo) {\n      submit(biodata, residentialInfo, kinInfo, bankInfo)\n    }\n  }\n\n\n  useEffect(() => {\n    if(user && userDetails) {\n      const { bioData } = userDetails;\n      setBiodata({ ...biodata, \n        fullName: `${user.firstName} ${user.lastName}`,\n        email: user.email,\n        phoneNo: user.phoneNumber.replace('234', '0'),\n        dateOfBirth: bioData.DOB,\n        bvnPhoneNo: bioData.bvnPhoneNumber\n      })\n    }\n  }, [user, userDetails])\n\n  if(!userDetails) {\n    return null\n  }\n\n  return (\n    <div className={styles.personalInfo}>\n      <div className={styles.biodata}>\n        <h3>Biodata Information</h3>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"Full name\"\n              type=\"text\"\n              nameAttr=\"fullname\"\n              value={biodata.fullName}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, fullName: null })\n                setBiodata({ ...biodata, fullName: val})\n              }}\n              error={biodataErrors.fullName && biodataErrors.fullName}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Date of Birth\"\n              type=\"text\"\n              nameAttr=\"dob\"\n              value={biodata.dateOfBirth}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, dateOfBirth: null })\n                setBiodata({ ...biodata, dateOfBirth: val})\n              }}\n              error={biodataErrors.dateOfBirth && biodataErrors.dateOfBirth}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"BVN-linked Phone Number\"\n              type=\"text\"\n              nameAttr=\"bvnPhoneNo\"\n              value={biodata.bvnPhoneNo}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, bvnPhoneNo: null })\n                setBiodata({ ...biodata, bvnPhoneNo: val})\n              }}\n              error={biodataErrors.bvnPhoneNo && biodataErrors.bvnPhoneNo}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Email\"\n              type=\"email\"\n              nameAttr=\"email\"\n              value={biodata.email}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, email: null })\n                setBiodata({ ...biodata, email: val})\n              }}\n              error={biodataErrors.email && biodataErrors.email}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"Phone Number\"\n              type=\"text\"\n              nameAttr=\"PhoneNo\"\n              value={biodata.phoneNo}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, phoneNo: null })\n                setBiodata({ ...biodata, phoneNo: val})\n              }}\n              error={biodataErrors.phoneNo && biodataErrors.phoneNo}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Alternative Phone Number\"\n              type=\"text\"\n              nameAttr=\"altPhoneNo\"\n              value={biodata.altPhone}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, altPhone: null })\n                setBiodata({ ...biodata, altPhone: val})\n              }}\n              error={biodataErrors.altPhone && biodataErrors.altPhone}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <InputField \n              label=\"Gender\"\n              type=\"select\"\n              options={['Female', 'Male', 'Other']}\n              nameAttr=\"gender\"\n              value={biodata.gender}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, gender: null })\n                setBiodata({ ...biodata, gender: val})\n              }}\n              error={biodataErrors.gender && biodataErrors.gender}\n            />\n          </Col>\n        </Row>\n      </div>\n      <div className={styles.residentialInfo}>\n        <h3>Residential Address</h3>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"Street\"\n              type=\"text\"\n              nameAttr=\"residentStreet\"\n              value={residentialInfo.street}\n              changed={(val) => {\n                setResidentialErrors({ ...residentialErrors, street: null })\n                setResidentialInfo({ ...residentialInfo, street: val})\n              }}\n              error={residentialErrors.street && residentialErrors.street}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <InputField \n              label=\"City\"\n              type=\"text\"\n              nameAttr=\"city\"\n              value={residentialInfo.city}\n              changed={(val) => {\n                setResidentialErrors({ ...residentialErrors, city: null })\n                setResidentialInfo({ ...residentialInfo, city: val})\n              }}\n              error={residentialErrors.city && residentialErrors.city}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"State\"\n              type=\"select\"\n              options={nigeriaStates}\n              nameAttr=\"state\"\n              value={residentialInfo.state}\n              changed={(val) => {\n                setResidentialErrors({ ...residentialErrors, state: null })\n                setResidentialInfo({ ...residentialInfo, state: val})\n              }}\n              error={residentialErrors.state && residentialErrors.state}\n            />\n          </Col>\n        </Row>\n      </div>\n      <div className={styles.kinInfo}>\n        <h3>Next of Kin Information</h3>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"Full name\"\n              type=\"text\"\n              nameAttr=\"kinFullname\"\n              value={kinInfo.fullName}\n              changed={(val) => {\n                setKinErrors({ ...kinErrors, fullName: null })\n                setKinInfo({ ...kinInfo, fullName: val})\n              }}\n              error={kinErrors.fullName && kinErrors.fullName}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Relationship\"\n              type=\"text\"\n              nameAttr=\"kinRelationship\"\n              value={kinInfo.relationship}\n              changed={(val) => {\n                setKinErrors({ ...kinErrors, relationship: null })\n                setKinInfo({ ...kinInfo, relationship: val})\n              }}\n              error={kinErrors.relationship && kinErrors.relationship}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"Email Address\"\n              type=\"email\"\n              nameAttr=\"kinEmail\"\n              value={kinInfo.email}\n              changed={(val) => {\n                setKinErrors({ ...kinErrors, email: null })\n                setKinInfo({ ...kinInfo, email: val})\n              }}\n              error={kinErrors.email && kinErrors.email}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Phone Number\"\n              type=\"text\"\n              nameAttr=\"kinPhone\"\n              value={kinInfo.phoneNo}\n              changed={(val) => {\n                setKinErrors({ ...kinErrors, phoneNo: null })\n                setKinInfo({ ...kinInfo, phoneNo: val})\n              }}\n              error={kinErrors.phoneNo && kinErrors.phoneNo}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <InputField \n              label=\"Residential Address\"\n              type=\"text\"\n              nameAttr=\"kinAddress\"\n              placeholder=\"Street address to the nearest bus stop\"\n              value={kinInfo.address}\n              changed={(val) => {\n                setKinErrors({ ...kinErrors, address: null })\n                setKinInfo({ ...kinInfo, address: val})\n              }}\n              error={kinErrors.address && kinErrors.address}\n            />\n          </Col>\n        </Row>\n      </div>\n      <div className={styles.bankInfo}>\n        <h3>Bank Information</h3>\n        <p>Please provide a bank account where we can send your investment proceeds or loan requests to.</p>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"select\"\n              label=\"Bank\"\n              options={bankNames}\n              nameAttr=\"bank\"\n              value={bankInfo.bankName}\n              changed={(val) => {\n                setBankInfoErrors({ ...bankInfoErrors, bankName: null })\n                setBankInfo({ ...bankInfo, bankName: val})\n              }}\n              error={bankInfoErrors.bankName && bankInfoErrors.bankName}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Account Type\"\n              type=\"select\"\n              options={[\"Savings\", \"Current\"]}\n              nameAttr=\"acountType\"\n              value={bankInfo.accountType}\n              changed={(val) => {\n                setBankInfoErrors({ ...bankInfoErrors, accountType: null })\n                setBankInfo({ ...bankInfo, accountType: val})\n              }}\n              error={bankInfoErrors.accountType && bankInfoErrors.accountType}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Account Number\"\n              nameAttr=\"accountNo\"\n              value={bankInfo.accountNumber}\n              changed={(val) => {\n                setBankInfoErrors({ ...bankInfoErrors, accountNumber: null })\n                setBankInfo({ ...bankInfo, accountNumber: val})\n              }}\n              error={bankInfoErrors.accountNumber && bankInfoErrors.accountNumber}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Account Name\"\n              type=\"text\"\n              nameAttr=\"accountName\"\n              value={bankInfo.accountName}\n              changed={(val) => {\n                setBankInfoErrors({ ...bankInfoErrors, accountName: null })\n                setBankInfo({ ...bankInfo, accountName: val})\n              }}\n              error={bankInfoErrors.accountName && bankInfoErrors.accountName}\n            />\n          </Col>\n        </Row>\n      </div>\n      <Button \n        className=\"mt-4\" \n        clicked={handleSubmit} \n        fullWidth \n        bgColor=\"#741763\" \n        size=\"lg\" \n        color=\"#EBEBEB\"\n      >\n        Save & Continue\n      </Button>\n    </div>\n  )\n}\n\nexport default PersonalForm;",["151","152"],"/home/tga/Desktop/gypsy-capital/src/context/BankCotext.js",[],"/home/tga/Desktop/gypsy-capital/src/index.js",[],"/home/tga/Desktop/gypsy-capital/src/context/AuthContext.js",[],"/home/tga/Desktop/gypsy-capital/src/pages/pages.js",[],"/home/tga/Desktop/gypsy-capital/src/context/createDataContext.js",["153"],"/home/tga/Desktop/gypsy-capital/src/pages/CreditReport/CreditReport.jsx",["154"],"/home/tga/Desktop/gypsy-capital/src/pages/OtpVerify/OtpVerify.jsx",["155"],"import React, { useContext, useEffect, useState } from 'react';\nimport styles from './OtpVerify.module.scss';\nimport Logo from '../../assets/logo.png';\nimport { Row, Col } from 'react-bootstrap';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport { Link } from 'react-router-dom';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst OtpVerify = () => {\n\n  const [otp, setOtp] = useState('');\n  const [validationErr, setValidationErr] = useState(null);\n\n  const { \n      state: { error, loading, message, user }, \n      verifyOtp, \n      getActiveUser, \n      resendOtp,\n      clearErrors \n  } = useContext(AuthContext);\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearErrors();\n    }\n  }, [error])\n\n  useEffect(() => {\n    if(message) {\n      toast.success(message);\n    }\n  }, [message])\n\n  const handleSubmit = () => {\n    if(!otp) {\n      setValidationErr('You need to enter your otp to verify your account')\n    } else {\n      verifyOtp(otp, user.email, getActiveUser);\n    }\n  }\n\n  const resendCode = () => {\n    resendOtp(user.email);\n  }\n\n  return(\n    <div className={styles.container}>\n      <img src={Logo} alt=\"Gypsy Logo\" />\n      <h1>Verify Your Details</h1>\n      <p>Please enter the OTP sent to your email to continue</p>\n      <div className={styles.verifyBox}>\n        <ToastContainer position=\"top-center\" />\n        <Row>\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"One Time Password\"\n              nameAttr=\"otp\"\n              value={otp}\n              changed={(val) => {\n                setValidationErr(null)\n                setOtp(val)\n              }}\n              error={validationErr && validationErr}\n            />\n          </Col>\n        </Row>\n        <Button \n          clicked={handleSubmit} \n          fullWidth \n          className=\"mt-4\" \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n          disabled={loading}\n          loading={loading}\n        >\n          Verify Code\n        </Button>\n        <p className={[styles.authLink, 'mt-3'].join(' ')}>\n          Didn’t receive code? <Link onClick={resendCode}>Resend OTP</Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n\n\nexport default OtpVerify;",["156","157"],"/home/tga/Desktop/gypsy-capital/src/pages/SignIn/SignIn.jsx",["158"],"/home/tga/Desktop/gypsy-capital/src/pages/ConsumerCredit/ConsumerCredit.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/Button/Button.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/ProgressBar/ProgressBar.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/IdentityForm/IdentityForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/FaqSection/FaqSection.jsx",[],"/home/tga/Desktop/gypsy-capital/src/utils/nigeriaStates.js",["159"],"export default [\n  \"Abia\",\n  \"Adamawa\",\n  \"Akwa Ibom\",\n  \"Anambra\",\n  \"Bauchi\",\n  \"Bayelsa\",\n  \"Benue\",\n  \"Borno\",\n  \"Cross River\",\n  \"Delta\",\n  \"Ebonyi\",\n  \"Edo\",\n  \"Ekiti\",\n  \"Enugu\",\n  \"FCT - Abuja\",\n  \"Gombe\",\n  \"Imo\",\n  \"Jigawa\",\n  \"Kaduna\",\n  \"Kano\",\n  \"Katsina\",\n  \"Kebbi\",\n  \"Kogi\",\n  \"Kwara\",\n  \"Lagos\",\n  \"Nasarawa\",\n  \"Niger\",\n  \"Ogun\",\n  \"Ondo\",\n  \"Osun\",\n  \"Oyo\",\n  \"Plateau\",\n  \"Rivers\",\n  \"Sokoto\",\n  \"Taraba\",\n  \"Yobe\",\n  \"Zamfara\"\n]","/home/tga/Desktop/gypsy-capital/src/context/ProfileStageContext.js",[],"/home/tga/Desktop/gypsy-capital/src/pages/Profile/Profile.jsx",["160","161","162","163","164","165"],"/home/tga/Desktop/gypsy-capital/src/context/createPersistDataContext.js",["166"],"/home/tga/Desktop/gypsy-capital/src/api/cloudinary-api.js",[],"/home/tga/Desktop/gypsy-capital/src/hooks/useCloudinary.js",["167"],"/home/tga/Desktop/gypsy-capital/src/context/UserContext.js",["168"],"import createDataContext from './createDataContext';\nimport gypsy from '../api/gypsy-web';\nimport resolveToken from '../utils/resolveToken';\nimport history from '../utils/history';\n\nconst userReducer = (state, action) => {\n  switch(action.type) {\n    case 'set_loading':\n      return { ...state, loading: action.payload }\n    case 'verify_bvn':\n      return { ...state, bvnVerified: action.payload }\n    case 'set_user_details':\n      return { ...state, userDetails: action.payload }\n    case 'set_error':\n      return { ...state, error: action.payload }\n    default:\n      return state;\n  }\n}\n\n\nconst completeSetup = dispatch => async(userId, updateData, callback) => {\n  dispatch({ type: 'set_error', payload: null });\n  dispatch({ type: \"set_loading\", payload: true });\n  try {\n    const token = resolveToken();\n    const response = await gypsy.patch(`/client_details/${userId}`, updateData, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    console.log(response.data);\n    if(callback) {\n      callback();\n    }\n    dispatch({ type: \"set_loading\", payload: false });\n  } catch(err) {  \n    console.log(err.response);\n    dispatch({\n      type: \"set_error\",\n      payload: err.message\n    });\n    dispatch({ type: \"set_loading\", payload: false });\n  }\n}\n\n\nconst verifyBvn = dispatch => async(userId, bvn, callback) => {\n  dispatch({ type: 'set_error', payload: null });\n  dispatch({ type: \"set_loading\", payload: true });\n  try {\n    const token = resolveToken();\n    const response = await gypsy.get(`/verify_bvn/${userId}/${bvn}`, {\n      headers: {\n        \"Authorization\": `Bearer ${token}`\n      }\n    });\n    console.log(response);\n    dispatch({\n      type: \"verify_bvn\",\n      payload: true\n    })\n    if(callback) {\n      callback();\n    }\n    dispatch({ type: \"set_loading\", payload: false });\n  } catch(err) {\n    if(err.response) {\n      console.log(err.response.data);\n      if(err.response.data.error){\n        if(err.response.data.error.includes('duplicate key')) {\n          dispatch({\n            type: 'set_error',\n            payload: \"This BVN already exists in our system\"\n          })\n        }\n      } else {\n        dispatch({\n          type: 'set_error',\n          payload: err.response.data.message\n        })\n      }\n    }\n    dispatch({ type: \"set_loading\", payload: false })\n  }\n}\n\nconst getClientDetails = dispatch => async(userId) => {\n  try {\n    const token = resolveToken();\n    const response = await gypsy.get(`/client/details/${userId}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    console.log(response.data.data)\n    dispatch({ type: 'set_user_details', payload: response.data.data });\n    console.log(response.data);\n  } catch(err) {\n    if(err.response) {\n      console.log(err.response)\n      const { error } = err.response.data\n      console.log(error)\n      // if()\n      dispatch({\n        type: 'set_error',\n        payload: err.response.error\n      })\n    }\n  }\n}\n\nconst clearErrors = dispatch => () => {\n  dispatch({\n    type: 'set_error',\n    payload: null\n  })\n}\n\nexport const { Context, Provider } = createDataContext(\n  userReducer,\n  { completeSetup, verifyBvn, clearErrors, getClientDetails },\n  { loading: false, error: null, bvnVerified: false, userDetails: null }\n)","/home/tga/Desktop/gypsy-capital/src/routes/pageUrl.js",[],"/home/tga/Desktop/gypsy-capital/src/routes/protectedroute/ProtectedRoute.js",["169"],"/home/tga/Desktop/gypsy-capital/src/api/gypsy-web.js",[],"/home/tga/Desktop/gypsy-capital/src/pages/Overview/Overview.jsx",["170"],"/home/tga/Desktop/gypsy-capital/src/pages/AboutUs/AboutUs.jsx",["171","172","173"],"/home/tga/Desktop/gypsy-capital/src/components/InputField/InputField.js",[],"/home/tga/Desktop/gypsy-capital/src/components/Dashboard/Dashboard.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/Footer/Footer.jsx",[],"/home/tga/Desktop/gypsy-capital/src/utils/history.js",[],"/home/tga/Desktop/gypsy-capital/src/pages/ContactPage/ContactPage.jsx",["174"],"/home/tga/Desktop/gypsy-capital/src/pages/LoanCalculator/LoanCalculator.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/AgentOverview/AgentOverview.jsx",["175","176"],{"ruleId":"177","severity":1,"message":"178","line":2,"column":18,"nodeType":"179","messageId":"180","endLine":2,"endColumn":24},{"ruleId":"181","severity":1,"message":"182","line":30,"column":6,"nodeType":"183","endLine":30,"endColumn":8,"suggestions":"184"},{"ruleId":"181","severity":1,"message":"185","line":101,"column":6,"nodeType":"183","endLine":101,"endColumn":49,"suggestions":"186"},{"ruleId":"187","severity":1,"message":"188","line":106,"column":33,"nodeType":"189","messageId":"190","endLine":106,"endColumn":34,"suggestions":"191"},{"ruleId":"187","severity":1,"message":"188","line":106,"column":58,"nodeType":"189","messageId":"190","endLine":106,"endColumn":59,"suggestions":"192"},{"ruleId":"181","severity":1,"message":"193","line":141,"column":6,"nodeType":"183","endLine":141,"endColumn":23,"suggestions":"194"},{"ruleId":"181","severity":1,"message":"195","line":166,"column":6,"nodeType":"183","endLine":166,"endColumn":25,"suggestions":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":4,"column":1,"nodeType":"203","endLine":22,"endColumn":2},{"ruleId":"177","severity":1,"message":"204","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":14},{"ruleId":"181","severity":1,"message":"205","line":29,"column":6,"nodeType":"183","endLine":29,"endColumn":13,"suggestions":"206"},{"ruleId":"197","replacedBy":"207"},{"ruleId":"199","replacedBy":"208"},{"ruleId":"181","severity":1,"message":"205","line":27,"column":6,"nodeType":"183","endLine":27,"endColumn":13,"suggestions":"209"},{"ruleId":"201","severity":1,"message":"210","line":1,"column":1,"nodeType":"203","endLine":39,"endColumn":2},{"ruleId":"177","severity":1,"message":"211","line":33,"column":25,"nodeType":"179","messageId":"180","endLine":33,"endColumn":41},{"ruleId":"177","severity":1,"message":"212","line":63,"column":14,"nodeType":"179","messageId":"180","endLine":63,"endColumn":21},{"ruleId":"181","severity":1,"message":"213","line":80,"column":6,"nodeType":"183","endLine":80,"endColumn":8,"suggestions":"214"},{"ruleId":"181","severity":1,"message":"215","line":91,"column":6,"nodeType":"183","endLine":91,"endColumn":19,"suggestions":"216"},{"ruleId":"181","severity":1,"message":"205","line":98,"column":6,"nodeType":"183","endLine":98,"endColumn":13,"suggestions":"217"},{"ruleId":"181","severity":1,"message":"218","line":317,"column":6,"nodeType":"183","endLine":317,"endColumn":18,"suggestions":"219"},{"ruleId":"201","severity":1,"message":"202","line":4,"column":1,"nodeType":"203","endLine":34,"endColumn":2},{"ruleId":"201","severity":1,"message":"202","line":3,"column":1,"nodeType":"203","endLine":19,"endColumn":2},{"ruleId":"177","severity":1,"message":"220","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":15},{"ruleId":"177","severity":1,"message":"221","line":13,"column":30,"nodeType":"179","messageId":"180","endLine":13,"endColumn":34},{"ruleId":"177","severity":1,"message":"222","line":19,"column":22,"nodeType":"179","messageId":"180","endLine":19,"endColumn":35},{"ruleId":"223","severity":1,"message":"224","line":41,"column":15,"nodeType":"225","endLine":41,"endColumn":26},{"ruleId":"223","severity":1,"message":"224","line":44,"column":15,"nodeType":"225","endLine":44,"endColumn":26},{"ruleId":"223","severity":1,"message":"224","line":47,"column":15,"nodeType":"225","endLine":47,"endColumn":26},{"ruleId":"226","severity":1,"message":"227","line":31,"column":11,"nodeType":"225","endLine":38,"endColumn":14},{"ruleId":"177","severity":1,"message":"204","line":5,"column":8,"nodeType":"179","messageId":"180","endLine":5,"endColumn":14},{"ruleId":"177","severity":1,"message":"228","line":10,"column":9,"nodeType":"179","messageId":"180","endLine":10,"endColumn":22},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getBankList', 'getClientDetails', and 'user.user_id'. Either include them or remove the dependency array.","ArrayExpression",["229"],"React Hook useEffect has missing dependencies: 'bankList' and 'verifyBankInfo'. Either include them or remove the dependency array.",["230"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["231","232"],["233","234"],"React Hook useEffect has a missing dependency: 'bankInfo'. Either include it or remove the dependency array. You can also do a functional update 'setBankInfo(b => ...)' if you only need 'bankInfo' in the 'setBankInfo' call.",["235"],"React Hook useEffect has a missing dependency: 'biodata'. Either include it or remove the dependency array. You can also do a functional update 'setBiodata(b => ...)' if you only need 'biodata' in the 'setBiodata' call.",["236"],"no-native-reassign",["237"],"no-negated-in-lhs",["238"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'styles' is defined but never used.","React Hook useEffect has a missing dependency: 'clearErrors'. Either include it or remove the dependency array.",["239"],["237"],["238"],["240"],"Assign array to a variable before exporting as module default","'setSetupComplete' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getClientDetails' and 'user.user_id'. Either include them or remove the dependency array.",["241"],"React Hook useEffect has missing dependencies: 'incrementStage' and 'profileStage'. Either include them or remove the dependency array.",["242"],["243"],"React Hook useMemo has missing dependencies: 'submitBvn', 'submitIdentityInfo', and 'submitPersonalInfo'. Either include them or remove the dependency array.",["244"],"'history' is defined but never used.","'user' is assigned a value but never used.","'setLoanStatus' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'sidebarRoutes' is assigned a value but never used.",{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"messageId":"249","fix":"250","desc":"251"},{"messageId":"252","fix":"253","desc":"254"},{"messageId":"249","fix":"255","desc":"251"},{"messageId":"252","fix":"256","desc":"254"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},"no-global-assign","no-unsafe-negation",{"desc":"261","fix":"262"},{"desc":"261","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"261","fix":"268"},{"desc":"269","fix":"270"},"Update the dependencies array to be: [getBankList, getClientDetails, user.user_id]",{"range":"271","text":"272"},"Update the dependencies array to be: [bankInfo.accountNumber, bankInfo.bankName, bankList, verifyBankInfo]",{"range":"273","text":"274"},"removeEscape",{"range":"275","text":"276"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"277","text":"278"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"279","text":"276"},{"range":"280","text":"278"},"Update the dependencies array to be: [bankInfo, userBankDetails]",{"range":"281","text":"282"},"Update the dependencies array to be: [biodata, user, userDetails]",{"range":"283","text":"284"},"Update the dependencies array to be: [clearErrors, error]",{"range":"285","text":"286"},{"range":"287","text":"286"},"Update the dependencies array to be: [getClientDetails, user.user_id]",{"range":"288","text":"289"},"Update the dependencies array to be: [incrementStage, profileStage, userDetails]",{"range":"290","text":"291"},{"range":"292","text":"286"},"Update the dependencies array to be: [setupStage, submitBvn, submitIdentityInfo, submitPersonalInfo]",{"range":"293","text":"294"},[948,950],"[getBankList, getClientDetails, user.user_id]",[2561,2604],"[bankInfo.accountNumber, bankInfo.bankName, bankList, verifyBankInfo]",[2697,2698],"",[2697,2697],"\\",[2722,2723],[2722,2722],[3692,3709],"[bankInfo, userBankDetails]",[4556,4575],"[biodata, user, userDetails]",[868,875],"[clearErrors, error]",[776,783],[2523,2525],"[getClientDetails, user.user_id]",[2795,2808],"[incrementStage, profileStage, userDetails]",[2905,2912],[9121,9133],"[setupStage, submitBvn, submitIdentityInfo, submitPersonalInfo]"]