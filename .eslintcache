[{"/home/tga/Desktop/gypsy-capital/src/reportWebVitals.js":"1","/home/tga/Desktop/gypsy-capital/src/App.js":"2","/home/tga/Desktop/gypsy-capital/src/routes/pageUrl.js":"3","/home/tga/Desktop/gypsy-capital/src/context/createPersistDataContext.js":"4","/home/tga/Desktop/gypsy-capital/src/pages/SignUp/SignUp.jsx":"5","/home/tga/Desktop/gypsy-capital/src/pages/ConsumerCredit/ConsumerCredit.jsx":"6","/home/tga/Desktop/gypsy-capital/src/pages/LoanCalculator/LoanCalculator.jsx":"7","/home/tga/Desktop/gypsy-capital/src/pages/Overview/Overview.jsx":"8","/home/tga/Desktop/gypsy-capital/src/components/InputField/InputField.js":"9","/home/tga/Desktop/gypsy-capital/src/components/Footer/Footer.jsx":"10","/home/tga/Desktop/gypsy-capital/src/components/ProfileView/ProfileView.jsx":"11","/home/tga/Desktop/gypsy-capital/src/components/BvnForm/BvnForm.jsx":"12","/home/tga/Desktop/gypsy-capital/src/utils/nigeriaStates.js":"13","/home/tga/Desktop/gypsy-capital/src/context/AuthContext.js":"14","/home/tga/Desktop/gypsy-capital/src/api/gypsy-web.js":"15","/home/tga/Desktop/gypsy-capital/src/pages/Profile/Profile.jsx":"16","/home/tga/Desktop/gypsy-capital/src/pages/OtpVerify/OtpVerify.jsx":"17","/home/tga/Desktop/gypsy-capital/src/pages/AboutUs/AboutUs.jsx":"18","/home/tga/Desktop/gypsy-capital/src/pages/HomePage/HomePage.jsx":"19","/home/tga/Desktop/gypsy-capital/src/pages/MonoWidget/MonoWidget.jsx":"20","/home/tga/Desktop/gypsy-capital/src/components/ProgressBar/ProgressBar.jsx":"21","/home/tga/Desktop/gypsy-capital/src/components/NavBar/NavBar.jsx":"22","/home/tga/Desktop/gypsy-capital/src/components/LoanCalculatorForm/LoanCalculatorForm.jsx":"23","/home/tga/Desktop/gypsy-capital/src/components/LoanContactForm/LoanContactForm.jsx":"24","/home/tga/Desktop/gypsy-capital/src/components/EmployerInfoForm/EmployerInfoForm.jsx":"25","/home/tga/Desktop/gypsy-capital/src/components/BankInfoForm/BankInfoForm.jsx":"26","/home/tga/Desktop/gypsy-capital/src/components/PersonalForm/PersonalForm.jsx":"27","/home/tga/Desktop/gypsy-capital/src/index.js":"28","/home/tga/Desktop/gypsy-capital/src/utils/history.js":"29","/home/tga/Desktop/gypsy-capital/src/context/UserContext.js":"30","/home/tga/Desktop/gypsy-capital/src/context/BankCotext.js":"31","/home/tga/Desktop/gypsy-capital/src/context/createDataContext.js":"32","/home/tga/Desktop/gypsy-capital/src/pages/CreditReport/CreditReport.jsx":"33","/home/tga/Desktop/gypsy-capital/src/pages/ContactPage/ContactPage.jsx":"34","/home/tga/Desktop/gypsy-capital/src/components/Dashboard/Dashboard.jsx":"35","/home/tga/Desktop/gypsy-capital/src/components/FileUploadButton/FileUploadButton.js":"36","/home/tga/Desktop/gypsy-capital/src/utils/resolveToken.js":"37","/home/tga/Desktop/gypsy-capital/src/pages/AgentOverview/AgentOverview.jsx":"38","/home/tga/Desktop/gypsy-capital/src/pages/ClientListPage/ClientListPage.jsx":"39","/home/tga/Desktop/gypsy-capital/src/components/IdentityForm/IdentityForm.jsx":"40","/home/tga/Desktop/gypsy-capital/src/utils/validateInput.js":"41","/home/tga/Desktop/gypsy-capital/src/components/FaqSection/FaqSection.jsx":"42","/home/tga/Desktop/gypsy-capital/src/pages/Products/Products.jsx":"43","/home/tga/Desktop/gypsy-capital/src/pages/pages.js":"44"},{"size":362,"mtime":1611009045300,"results":"45","hashOfConfig":"46"},{"size":2154,"mtime":1612764690640,"results":"47","hashOfConfig":"46"},{"size":1120,"mtime":1612714255611,"results":"48","hashOfConfig":"46"},{"size":821,"mtime":1612688150601,"results":"49","hashOfConfig":"46"},{"size":7692,"mtime":1612416738695,"results":"50","hashOfConfig":"46"},{"size":5405,"mtime":1612765327419,"results":"51","hashOfConfig":"46"},{"size":3289,"mtime":1612646261243,"results":"52","hashOfConfig":"46"},{"size":5081,"mtime":1612757099487,"results":"53","hashOfConfig":"46"},{"size":2349,"mtime":1612099100962,"results":"54","hashOfConfig":"46"},{"size":1152,"mtime":1612102534435,"results":"55","hashOfConfig":"46"},{"size":7010,"mtime":1612714255563,"results":"56","hashOfConfig":"46"},{"size":1331,"mtime":1612592363525,"results":"57","hashOfConfig":"46"},{"size":449,"mtime":1612595713808,"results":"58","hashOfConfig":"46"},{"size":5804,"mtime":1612764452830,"results":"59","hashOfConfig":"46"},{"size":147,"mtime":1612318782772,"results":"60","hashOfConfig":"46"},{"size":5770,"mtime":1612757371705,"results":"61","hashOfConfig":"46"},{"size":2391,"mtime":1612574568451,"results":"62","hashOfConfig":"46"},{"size":6259,"mtime":1612758512034,"results":"63","hashOfConfig":"46"},{"size":12956,"mtime":1612758194357,"results":"64","hashOfConfig":"46"},{"size":749,"mtime":1612714255563,"results":"65","hashOfConfig":"46"},{"size":1565,"mtime":1611429643367,"results":"66","hashOfConfig":"46"},{"size":2541,"mtime":1612758253232,"results":"67","hashOfConfig":"46"},{"size":6531,"mtime":1612721534992,"results":"68","hashOfConfig":"46"},{"size":3077,"mtime":1612717296974,"results":"69","hashOfConfig":"46"},{"size":4663,"mtime":1612717866701,"results":"70","hashOfConfig":"46"},{"size":2686,"mtime":1612718317089,"results":"71","hashOfConfig":"46"},{"size":14056,"mtime":1612718612499,"results":"72","hashOfConfig":"46"},{"size":548,"mtime":1612763106807,"results":"73","hashOfConfig":"46"},{"size":84,"mtime":1612764469627,"results":"74","hashOfConfig":"46"},{"size":4381,"mtime":1612688150601,"results":"75","hashOfConfig":"46"},{"size":1701,"mtime":1612604883562,"results":"76","hashOfConfig":"46"},{"size":533,"mtime":1612421501467,"results":"77","hashOfConfig":"46"},{"size":1078,"mtime":1612757856971,"results":"78","hashOfConfig":"46"},{"size":4507,"mtime":1612758575858,"results":"79","hashOfConfig":"46"},{"size":2128,"mtime":1612757978787,"results":"80","hashOfConfig":"46"},{"size":665,"mtime":1611816481368,"results":"81","hashOfConfig":"46"},{"size":192,"mtime":1612142197425,"results":"82","hashOfConfig":"46"},{"size":473,"mtime":1612647772133,"results":"83","hashOfConfig":"46"},{"size":256,"mtime":1612648091349,"results":"84","hashOfConfig":"46"},{"size":2429,"mtime":1612688150589,"results":"85","hashOfConfig":"46"},{"size":871,"mtime":1612718532240,"results":"86","hashOfConfig":"46"},{"size":2704,"mtime":1612099926099,"results":"87","hashOfConfig":"46"},{"size":11666,"mtime":1612758387346,"results":"88","hashOfConfig":"46"},{"size":959,"mtime":1612714255603,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"t9s37o",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"92"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"111"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"106"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"106"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"106"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/tga/Desktop/gypsy-capital/src/reportWebVitals.js",[],["191","192"],"/home/tga/Desktop/gypsy-capital/src/App.js",[],"/home/tga/Desktop/gypsy-capital/src/routes/pageUrl.js",[],"/home/tga/Desktop/gypsy-capital/src/context/createPersistDataContext.js",["193"],"import React, {createContext, useReducer, useEffect } from 'react';\n\n\nexport default (reducer, actions, initialState, persist, saveData) => {\n  const Context = createContext();\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState, () => {\n      if(persist) {\n        const localData = localStorage.getItem('gypsy');\n        return localData ? JSON.parse(localData) : {}\n      }\n    });\n\n    useEffect(() => {\n      if(persist) {\n        saveData(state);\n        // console.log(state);\n      }\n    }, [state])\n\n    const boundActions = {}\n\n    for(let key in actions) {\n      boundActions[key] = actions[key](dispatch);\n    }\n\n    return (\n      <Context.Provider value={{ state, ...boundActions }}>{children}</Context.Provider>\n    )\n  }\n\n  return { Context, Provider }\n}","/home/tga/Desktop/gypsy-capital/src/pages/SignUp/SignUp.jsx",["194","195","196"],"/home/tga/Desktop/gypsy-capital/src/pages/ConsumerCredit/ConsumerCredit.jsx",["197","198","199","200","201"],"/home/tga/Desktop/gypsy-capital/src/pages/LoanCalculator/LoanCalculator.jsx",[],["202","203"],"/home/tga/Desktop/gypsy-capital/src/pages/Overview/Overview.jsx",["204","205","206"],"/home/tga/Desktop/gypsy-capital/src/components/InputField/InputField.js",[],["207","208"],"/home/tga/Desktop/gypsy-capital/src/components/Footer/Footer.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/ProfileView/ProfileView.jsx",["209","210"],"import React, { useState, useContext, useRef, useEffect } from 'react';\nimport styles from './ProfileView.module.scss';\nimport { Row, Col } from 'react-bootstrap';\nimport InputField from '../InputField/InputField';\nimport Button from '../Button/Button';\nimport { BiCreditCard, BiPlus } from 'react-icons/bi';\nimport { RiBankFill } from 'react-icons/ri';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { Context as UserContext } from '../../context/UserContext';\n\n\nconst ProfileView = () => {\n\n  const [visibleSection, setVisibleSection] = useState('personalInfo');\n  const [profileImg, setProfileImg] = useState(null);\n  const [visiblePaymentSection, setVisiblePaymentSection] = useState('card');\n\n  const [profileData, setProfileData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phoneNo: \"\",\n    bvn: \"\",\n    residence: \"\"\n  })\n\n  const profilePicRef = useRef();\n\n  const { state: { user } } = useContext(AuthContext);\n  const { \n    state: { userDetails },\n    getClientDetails, \n  } = useContext(UserContext);\n\n  useEffect(() => {\n    getClientDetails(user.user_id);\n  }, [])\n\n  useEffect(() => {\n    if(userDetails) {\n      // setProfileData({\n      //   firstName\n      // })\n      console.log(userDetails)\n      const { bioData, identity, residence } = userDetails;\n      setProfileData({\n        firstName: bioData.firstName,\n        lastName: bioData.lastName,\n        email: bioData.email,\n        phoneNo: bioData.phoneNumber.replace('234', '0'),\n        bvn: bioData.BVN,\n        residence: residence.street\n      })\n      setProfileImg(identity.profilePhoto)\n    }\n  }, [userDetails])\n\n  const goToProfileSection = (section) => {\n    console.log('works');\n    setVisibleSection(section);\n  }\n\n  return (\n    <div className={styles.profileBox}>\n      <div className={styles.header}>\n        <Row>\n          <Col \n            onClick={() => goToProfileSection('personalInfo')} \n            className={[styles.borderStyle, styles.tabCol].join(' ')}\n          >\n            <p \n              className={[styles.tabMenu, visibleSection === \"personalInfo\" && styles.activeTab1].join(' ')}\n            >\n              Personal Information\n            </p>\n          </Col>\n          <Col \n            onClick={() => goToProfileSection('security')} \n            className={[styles.borderStyle, styles.tabCol].join(' ')}\n          >\n            <p\n              className={[styles.tabMenu, visibleSection === \"security\" && styles.activeTab2].join(' ')}\n            >\n              Security\n            </p>\n          </Col>\n          <Col\n            onClick={() => goToProfileSection('payment')} \n            className={styles.tabCol}\n          >\n            <p\n              className={[styles.tabMenu, visibleSection === \"payment\" && styles.activeTab3].join(' ')}\n            >\n              Payment\n            </p>\n          </Col>\n        </Row>\n      </div>\n      <div className={styles.body}>\n        {visibleSection === \"personalInfo\" && <div>\n          <div className={styles.profilePictureSection}>\n            { profileImg && <img src={profileImg} alt=\"profile image\"/> }\n          </div>\n          <div className={styles.uploadBtn}>\n            <input type=\"file\" id=\"profilePic\" hidden ref={profilePicRef} />\n            <label  \n              htmlFor=\"profilePic\"\n            >\n              Change Profile Picture\n            </label>\n          </div>\n          <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"First Name\"\n              type=\"text\"\n              nameAttr=\"firstName\"\n              value={profileData.firstName}\n            />\n          </Col> \n          <Col>\n            <InputField \n              label=\"Last Name\"\n              type=\"text\"\n              nameAttr=\"lastName\"\n              value={profileData.lastName}\n            />\n          </Col> \n          </Row> \n          <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"Email\"\n              type=\"email\"\n              nameAttr=\"email\"\n              value={profileData.email}\n            />\n          </Col> \n          <Col>\n            <InputField \n              label=\"Phone Number\"\n              type=\"text\"\n              nameAttr=\"phoneNumber\"\n              value={profileData.phoneNo}\n            />\n          </Col> \n          </Row> \n          <Row>\n          <Col>\n            <InputField \n              label=\"BVN\"\n              type=\"text\"\n              nameAttr=\"bvn\"\n              value={profileData.bvn}\n            />\n          </Col> \n          <Col>\n            <InputField \n              label=\"Residential Address\"\n              type=\"text\"\n              nameAttr=\"address\"\n              value={profileData.residence}\n            />\n          </Col> \n          </Row> \n          <Button className=\"mt-5\" fullWidth  bgColor=\"#741763\" size=\"lg\" color=\"#EBEBEB\">\n            Edit Info\n          </Button>\n        </div>}\n        { visibleSection === \"security\" &&\n          <div className={styles.security}>\n            <h2>CHANGE PASSWORD</h2>\n            <Row className=\"mb-4\">\n              <Col>\n                <InputField \n                  type=\"password\"\n                  label=\"Current Password\"\n                  nameAttr=\"currPassword\"\n                />\n              </Col>\n            </Row>\n            <Row className=\"mb-4\">\n              <Col>\n                <InputField \n                  type=\"password\"\n                  label=\"Current Password\"\n                  nameAttr=\"currPassword\"\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <InputField \n                  type=\"password\"\n                  label=\"Current Password\"\n                  nameAttr=\"currPassword\"\n                />\n              </Col>\n            </Row>\n          </div>\n        }\n        { visibleSection === \"payment\" && \n          <div className={styles.payment}>\n            <div className={styles.btnGroup}>\n              <button \n                className={ visiblePaymentSection === 'card' && styles.activeMenu }\n                onClick={() => setVisiblePaymentSection('card')}\n              >\n                <BiCreditCard className={styles.icon} />\n                Card\n              </button>\n              <button\n                className={ visiblePaymentSection === 'bank' && styles.activeMenu }\n                onClick={() => setVisiblePaymentSection('bank')}\n              >\n                <RiBankFill className={styles.icon} />\n                Bank\n              </button>\n            </div>\n            <div className={styles.content}>\n              { visiblePaymentSection === \"card\" && <div className={styles.addCard}>\n                <div className={styles.cardInner}>\n                  <BiPlus size=\"2em\" />\n                  <p>Add Card</p>\n                </div>\n              </div> }\n            </div>\n          </div>\n        }\n      </div>\n    </div>\n  )\n}\n\n\nexport default ProfileView;","/home/tga/Desktop/gypsy-capital/src/components/BvnForm/BvnForm.jsx",[],["211","212"],"/home/tga/Desktop/gypsy-capital/src/utils/nigeriaStates.js",["213"],"export default [\n  \"Abia\",\n  \"Adamawa\",\n  \"Akwa Ibom\",\n  \"Anambra\",\n  \"Bauchi\",\n  \"Bayelsa\",\n  \"Benue\",\n  \"Borno\",\n  \"Cross River\",\n  \"Delta\",\n  \"Ebonyi\",\n  \"Edo\",\n  \"Ekiti\",\n  \"Enugu\",\n  \"FCT - Abuja\",\n  \"Gombe\",\n  \"Imo\",\n  \"Jigawa\",\n  \"Kaduna\",\n  \"Kano\",\n  \"Katsina\",\n  \"Kebbi\",\n  \"Kogi\",\n  \"Kwara\",\n  \"Lagos\",\n  \"Nasarawa\",\n  \"Niger\",\n  \"Ogun\",\n  \"Ondo\",\n  \"Osun\",\n  \"Oyo\",\n  \"Plateau\",\n  \"Rivers\",\n  \"Sokoto\",\n  \"Taraba\",\n  \"Yobe\",\n  \"Zamfara\"\n]","/home/tga/Desktop/gypsy-capital/src/context/AuthContext.js",[],"/home/tga/Desktop/gypsy-capital/src/api/gypsy-web.js",[],"/home/tga/Desktop/gypsy-capital/src/pages/Profile/Profile.jsx",["214","215","216","217","218"],"import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport styles from './Profile.module.scss';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport pageUrl from '../../routes/pageUrl';\nimport { FiLayers } from 'react-icons/fi';\nimport { BiCreditCard } from 'react-icons/bi';\nimport { AiOutlineUser } from 'react-icons/ai';\nimport { GiTakeMyMoney } from 'react-icons/gi';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport ProgressBar from '../../components/ProgressBar/ProgressBar';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { ToastContainer, toast } from 'react-toastify';\nimport PersonalForm from '../../components/PersonalForm/PersonalForm';\nimport BvnForm from '../../components/BvnForm/BvnForm';\nimport IdentityForm from '../../components/IdentityForm/IdentityForm';\nimport ProfileView from '../../components/ProfileView/ProfileView';\nimport { useRouteMatch, Link } from 'react-router-dom';\n\n\nconst Profile = ({ location }) => {\n\n  const { url } = useRouteMatch();\n  const [setupStage, setSetupStage] = useState(0);\n  const [setupComplete, setSetupComplete] = useState(false);\n\n  const sidebarRoutes = [\n    {\n      label: \"Dashboard\",\n      link: pageUrl.DASHBOARD_HOMEPAGE,\n      icon: FiLayers\n    },\n    {\n      label: \"Consumer Credit\",\n      link: pageUrl.CONSUMER_CREDIT_PAGE,\n      icon: GiTakeMyMoney\n    },\n    {\n      label: \"Credit Report\",\n      link: pageUrl.CREDIT_REPORT_PAGE,\n      icon: BiCreditCard\n    },\n    {\n      label: \"Profile\",\n      link: pageUrl.PROFILE_PAGE,\n      icon: AiOutlineUser\n    },\n  ]\n\n  const { \n    state: { error, bvnVerified, userDetails, completeState, personalInfoStatus }, \n    verifyBvn, \n    clearErrors,\n    getClientDetails,\n    updatePersonalInfo,\n    updateIdentityInfo\n  } = useContext(UserContext);\n  const { state: { user }, getActiveUser } = useContext(AuthContext);\n\n  useEffect(() => {\n    getClientDetails(user.user_id);\n  }, [])\n\n  useEffect(() => {\n    if(userDetails) {\n      const { bioData, identity, bank } = userDetails;\n      if(identity.identityType) {\n        setSetupComplete(true);\n      } else if(bank.accountName) {\n        setSetupStage(2)\n      } else if(bioData.BVN) {\n        setSetupStage(1)\n      }\n    }\n  }, [userDetails])\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearErrors();\n    }\n  }, [error])\n\n  useEffect(() => {\n    if(bvnVerified) {\n      setSetupStage(1);\n    }\n  }, [bvnVerified])\n\n\n  useEffect(() => {\n    if(personalInfoStatus) {\n      setSetupStage(2)\n    }\n  }, [personalInfoStatus])\n\n  useEffect(() => {\n    if(completeState) {\n      setSetupStage(3)\n    }\n  }, [completeState])\n\n\n  const submitBvn = async(bvn) => {\n    await verifyBvn(user.user_id, bvn, getActiveUser);\n  }\n\n\n  const submitPersonalInfo = async(biodata, residence, kin, bank) => {\n    console.log(biodata, residence, bank, kin);\n    const { altPhone, gender } = biodata;\n    const { city, state, street } = residence;\n    const { accountName, accountNumber, accountType, bankName } = bank;\n    const { address, email, fullName, phoneNo, relationship } = kin;\n\n    const data = {\n      alternativePhoneNumber: altPhone,\n      gender,\n      residence_street: street,\n      residence_city: city,\n      residence_state: state,\n      nextOfKin_fullName: fullName,\n      nextOfKin_relationship: relationship,\n      nextOfKin_email: email,\n      nextOfKin_phoneNumber: phoneNo,\n      nextOfKin_residentialAddress: address,\n      bank_name: bankName,\n      bank_accountType: accountType,\n      bank_accountNumber: accountNumber,\n      bank_accountName: accountName,\n      identity_type: null,\n      identity_imageUrl: null,\n      identity_profilePhoto: null\n    }\n\n    await updatePersonalInfo(user.user_id, data)\n  }\n\n  \n  const submitIdentityInfo = async(idRef, passportRef, idType) => {\n    \n    console.log(idRef, passportRef, idType);\n    const data = new FormData();\n    data.append('identification', idRef);\n    data.append('passport', passportRef);\n    data.append('identity_type', idType)\n    await updateIdentityInfo(user.user_id, data);\n  }\n\n\n\n  const goToProfileView = () => {\n    setSetupComplete(true);\n  }\n  \n\n  const CompleteStage = ({ redirect }) => {\n\n    useEffect(() => {\n      setTimeout(() => {\n        redirect();\n      }, 3000)\n    }, [])\n\n    return (\n      <div className={styles.stageComplete}>\n        <FaCheckCircle size=\"4em\" color=\"#741763\" />\n        <h2>Congratulations!</h2>\n        <p>Account setup completed.</p>\n        <p>Enjoy our amazing loan offer</p>\n      </div>\n    )\n  }\n\n\n  const resolveStageView = useMemo(() => {\n    if(setupStage === 0) {\n      return <BvnForm submit={submitBvn} />\n    } else if (setupStage === 1) {\n      return <PersonalForm submit={submitPersonalInfo} />\n    } else if(setupStage === 2) {\n      return <IdentityForm submit={submitIdentityInfo} />\n    } else if(setupStage === 3) {\n      return <CompleteStage redirect={goToProfileView} />\n    }\n  }, [setupStage])\n\n  // if(!userDetails && setupStage === 1) {\n  //   return null;\n  // }\n\n  return(\n    <Dashboard sidebarRoutes={sidebarRoutes} location={url}>\n      <div className={styles.container}>\n        <ToastContainer position=\"top-center\" />\n        { !setupComplete && <div>\n          <h1>Account Setup</h1>\n          <p className={styles.leadText}>Fill the field to complete your profile</p>\n          <ProgressBar stage={setupStage} className={styles.profileProgress} />\n          {resolveStageView}\n        </div>}\n        { setupComplete &&\n          <div>\n            <h2>Profile</h2>\n            <ProfileView />\n          </div> \n        }\n      </div>\n    </Dashboard>\n  );\n}\n\n\nexport default Profile;","/home/tga/Desktop/gypsy-capital/src/pages/OtpVerify/OtpVerify.jsx",["219"],"import React, { useContext, useEffect, useState } from 'react';\nimport styles from './OtpVerify.module.scss';\nimport Logo from '../../assets/logo.png';\nimport { Row, Col } from 'react-bootstrap';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport { Link } from 'react-router-dom';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst OtpVerify = () => {\n\n  const [otp, setOtp] = useState('');\n  const [validationErr, setValidationErr] = useState(null);\n\n  const { \n      state: { error, loading, message, user }, \n      verifyOtp, \n      getActiveUser, \n      resendOtp,\n      clearErrors \n  } = useContext(AuthContext);\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearErrors();\n    }\n  }, [error])\n\n  useEffect(() => {\n    if(message) {\n      toast.success(message);\n    }\n  }, [message])\n\n  const handleSubmit = () => {\n    if(!otp) {\n      setValidationErr('You need to enter your otp to verify your account')\n    } else {\n      verifyOtp(otp, user.email, getActiveUser);\n    }\n  }\n\n  const resendCode = () => {\n    resendOtp(user.email);\n  }\n\n  return(\n    <div className={styles.container}>\n      <img src={Logo} alt=\"Gypsy Logo\" />\n      <h1>Verify Your Details</h1>\n      <p>Please enter the OTP sent to your email to continue</p>\n      <div className={styles.verifyBox}>\n        <ToastContainer position=\"top-center\" />\n        <Row>\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"One Time Password\"\n              nameAttr=\"otp\"\n              value={otp}\n              changed={(val) => {\n                setValidationErr(null)\n                setOtp(val)\n              }}\n              error={validationErr && validationErr}\n            />\n          </Col>\n        </Row>\n        <Button \n          clicked={handleSubmit} \n          fullWidth \n          className=\"mt-4\" \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n          disabled={loading}\n          loading={loading}\n        >\n          Verify Code\n        </Button>\n        <p className={[styles.authLink, 'mt-3'].join(' ')}>\n          Didn’t receive code? <Link onClick={resendCode}>Resend OTP</Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n\n\nexport default OtpVerify;","/home/tga/Desktop/gypsy-capital/src/pages/AboutUs/AboutUs.jsx",["220","221","222","223"],"/home/tga/Desktop/gypsy-capital/src/pages/HomePage/HomePage.jsx",["224"],"/home/tga/Desktop/gypsy-capital/src/pages/MonoWidget/MonoWidget.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/ProgressBar/ProgressBar.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/NavBar/NavBar.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/LoanCalculatorForm/LoanCalculatorForm.jsx",["225"],"import React, { useState, useEffect } from 'react';\nimport styles from './LoanCalculatorForm.module.scss';\nimport InputField from '../InputField/InputField';\nimport Button from '../Button/Button';\nimport { Row, Col } from 'react-bootstrap';\nimport { validateInput } from '../../utils/validateInput';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\nconst LoanCalculatorForm = () => {\n\n  const [daysOfMonth, setDaysOfMonth] = useState([]);\n  const [limitError, setLimitError] = useState(null);\n  const [loanCalcData, setLoanCalcData] = useState({\n    monthlySalary: \"\",\n    payDay: \"\",\n    loanAmount: \"\",\n    installmentPeriod: \"\",\n    loanPurpose: \"\",\n    estimatedMonthlyPayment: \"\"\n  });\n\n  const [loanCalcDataErrors, setLoanCalcDataErrors] = useState({\n    monthlySalary: null,\n    payDay: null,\n    loanAmount: null,\n    installmentPeriod: null,\n    loanPurpose: null,\n    estimatedMonthlyPayment: null\n  });\n\n  useEffect(() => {\n    setDaysOfMonth(fillUpDaysArray);\n  }, [])\n\n  const fillUpDaysArray = () => {\n    let daysArray = [];\n    for(let i=0; i < 31; i++) {\n      daysArray.push(i+1)\n    }\n    return daysArray;\n  }\n\n  const { monthlySalary, loanAmount, installmentPeriod } = loanCalcData;\n\n  useEffect(() => {\n    if(monthlySalary && loanAmount && installmentPeriod) {\n      console.log(typeof monthlySalary, typeof loanAmount, installmentPeriod);\n      const tenor = Number(installmentPeriod.split(' ')[0]);\n      const toRepay = Number(loanAmount) + (Number(loanAmount)  * 0.04);\n      const monthlyRepay = toRepay / tenor;\n      if(monthlyRepay > (0.333 * Number(monthlySalary))) {\n        setLimitError('You are not eligible for this amount, kindly enter a lower loan amount');\n      } else {\n        setLimitError(null)\n      }\n      setLoanCalcData({ ...loanCalcData, estimatedMonthlyPayment: Math.ceil(monthlyRepay) })\n    }\n  }, [monthlySalary, loanAmount, installmentPeriod])\n\n  const submitLoanCalcData = () => {\n    const validated = validateInput(loanCalcData, setLoanCalcDataErrors);\n    if(validated) {\n      limitError ? toast.error(limitError) : console.log(validated);\n    }\n  }\n\n  if(daysOfMonth.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={styles.calculatorForm}>\n      <ToastContainer position=\"top-center\" />\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            label=\"Monthly Salary\" \n            type=\"number\" \n            nameAttr=\"salary\"\n            value={loanCalcData.monthlySalary}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, monthlySalary: null })\n              setLoanCalcData({ ...loanCalcData, monthlySalary: val })\n            }}\n            error={loanCalcDataErrors.monthlySalary && loanCalcDataErrors.monthlySalary}\n          />\n        </Col>\n        <Col>\n          <InputField \n            label=\"Pay Day\"\n            type=\"select\"\n            options={daysOfMonth}\n            nameAttr=\"payday\"\n            value={loanCalcData.payDay}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, payDay: null })\n              setLoanCalcData({ ...loanCalcData, payDay: val })\n            }}\n            error={loanCalcDataErrors.payDay && loanCalcDataErrors.payDay}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            label=\"Loan Amount\" \n            type=\"number\" \n            nameAttr=\"loanAmt\"\n            value={loanCalcData.loanAmount}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, loanAmount: null })\n              setLoanCalcData({ ...loanCalcData, loanAmount: val })\n            }}\n            error={loanCalcDataErrors.loanAmount && loanCalcDataErrors.loanAmount}\n          />\n          <p className={styles.inputHint}>\n            <span>min amt:</span> #50,000; <span>max amt:</span> #500,000\n          </p>\n        </Col>\n        <Col>\n          <InputField \n            label=\"Installment Period\"\n            type=\"select\"\n            options={['1 Month', '2 Months', '3 Months']}\n            nameAttr=\"installmentCycle\"\n            value={loanCalcData.installmentPeriod}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, installmentPeriod: null })\n              setLoanCalcData({ ...loanCalcData, installmentPeriod: val })\n            }}\n            error={loanCalcDataErrors.installmentPeriod && loanCalcDataErrors.installmentPeriod}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            label=\"Loan Purpose\"\n            type=\"select\"\n            options={[\n              'Debt Consolidation',\n              'Home Remodelling',\n              'Moving Costs',\n              'Emergency Expenses',\n              'Medical Bills',\n              'Education',\n              'Appliance Purchase',\n              'Vehicle Financing',\n              'Vacation Costs',\n              'Wedding Expenses',\n              'Others'\n            ]}\n            nameAttr=\"loanPurpose\"\n            value={loanCalcData.loanPurpose}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, loanPurpose: null })\n              setLoanCalcData({ ...loanCalcData, loanPurpose: val })\n            }}\n            error={loanCalcDataErrors.loanPurpose && loanCalcDataErrors.loanPurpose}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Estimated Monthly Payment\"\n            nameAttr=\"monthlyPayment\"\n            value={loanCalcData.estimatedMonthlyPayment}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, estimatedMonthlyPayment: null })\n              setLoanCalcData({ ...loanCalcData, estimatedMonthlyPayment: val })\n            }}\n            error={loanCalcDataErrors.estimatedMonthlyPayment && loanCalcDataErrors.estimatedMonthlyPayment}\n          />\n          <p className={styles.inputHint}>\n            <span>Eventual repayment amount may differ after risk assessment.</span>\n          </p>\n          { limitError && <p className={styles.limitError}>{limitError}</p> }\n        </Col>\n      </Row>\n      <Button \n        className=\"mt-5\" \n        fullWidth \n        clicked={submitLoanCalcData} \n        bgColor=\"#741763\" \n        size=\"lg\" \n        color=\"#EBEBEB\"\n      >\n        Continue\n      </Button>\n    </div>\n  )\n}\n\n\nexport default LoanCalculatorForm;","/home/tga/Desktop/gypsy-capital/src/components/LoanContactForm/LoanContactForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/EmployerInfoForm/EmployerInfoForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/BankInfoForm/BankInfoForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/PersonalForm/PersonalForm.jsx",["226","227","228","229"],"import React, { useState, useContext, useEffect, useMemo } from 'react';\nimport styles from './PersonalForm.module.scss';\nimport { Row, Col } from 'react-bootstrap';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport InputField from '../InputField/InputField';\nimport Button from '../Button/Button';\nimport { Context as UserContext } from '../../context/UserContext';\nimport nigeriaStates from '../../utils/nigeriaStates';\nimport { Context as BankContext } from '../../context/BankCotext';\nimport { validateInput } from '../../utils/validateInput';\n\n\nconst PersonalForm = ({ submit }) => {\n\n  const { \n    state: { bankList, userBankDetails }, \n    getBankList, \n    verifyBankInfo,\n  } = useContext(BankContext);\n  const { state: { user } } = useContext(AuthContext);\n  const {\n    state: { userDetails, loading },\n    getClientDetails\n  } = useContext(UserContext);\n\n  useEffect(() => {\n    (async() => {\n      await getClientDetails(user.user_id);\n      await getBankList();\n    })()\n  }, [])\n \n  const bankNames = useMemo(() => {\n    return bankList ? \n      bankList.map((bank) => bank.name) :\n      []\n  }, [bankList])\n\n\n  const [biodata, setBiodata] = useState({\n    fullName: '',\n    dateOfBirth: '',\n    bvnPhoneNo: '',\n    email: '',\n    phoneNo: '',\n    altPhone: '',\n    gender: ''\n  });\n  const [biodataErrors, setBiodataErrors] = useState({\n    fullName: null,\n    dateOfBirth: null,\n    bvnPhoneNo: null,\n    email: null,\n    phoneNo: null,\n    altPhone: null,\n    gender: null\n  });\n  const [residentialInfo, setResidentialInfo] = useState({\n    street: '',\n    city: '',\n    state: ''\n  });\n  const [residentialErrors, setResidentialErrors] = useState({\n    street: null,\n    city: null,\n    state: null\n  })\n  const [kinInfo, setKinInfo] = useState({\n    fullName: '',\n    relationship: '',\n    email: '',\n    phoneNo: '',\n    address: ''\n  });\n  const [kinErrors, setKinErrors] = useState({\n    fullName: null,\n    relationship: null,\n    email: null,\n    phoneNo: null,\n    address: null\n  });\n  const [bankInfo, setBankInfo] = useState({\n    bankName: '',\n    accountType: '',\n    accountNumber: '',\n    accountName: ''\n  });\n  const [bankInfoErrors, setBankInfoErrors] = useState({\n    bankName: null,\n    accountType: null,\n    accountNumber: null,\n    accountName: null\n  })\n\n  useEffect(() => {\n    if(bankInfo.accountNumber.length === 10 && bankInfo.bankName) {\n      const bank = bankList.find(bank => bank.name.toLowerCase() === bankInfo.bankName);\n      const bankCode = bank.code;\n      console.log(bankCode)\n      verifyBankInfo(bankInfo.accountNumber, bankCode)\n    }\n  }, [bankInfo.accountNumber, bankInfo.bankName])\n\n\n  useEffect(() => {\n    console.log(userBankDetails);\n    if(userBankDetails) {\n      setBankInfo({ ...bankInfo, accountName: userBankDetails.account_name })\n    }\n  }, [userBankDetails]);\n\n\n  const handleSubmit = () => {\n    const validatedBiodata = validateInput(biodata, setBiodataErrors);\n    const validatedResidence = validateInput(residentialInfo, setResidentialErrors);\n    const validatedKinInfo = validateInput(kinInfo, setKinErrors)\n    const validatedBankInfo = validateInput(bankInfo, setBankInfoErrors)\n    if(validatedBiodata && validatedResidence && validatedKinInfo && validatedBankInfo) {\n      submit(biodata, residentialInfo, kinInfo, bankInfo)\n    }\n  }\n\n\n  useEffect(() => {\n    if(user && userDetails) {\n      const { bioData } = userDetails;\n      setBiodata({ ...biodata, \n        fullName: `${user.firstName} ${user.lastName}`,\n        email: user.email,\n        phoneNo: user.phoneNumber.replace('234', '0'),\n        dateOfBirth: bioData.DOB,\n        bvnPhoneNo: bioData.bvnPhoneNumber\n      })\n    }\n  }, [user, userDetails])\n\n  if(!userDetails) {\n    return null\n  }\n\n  return (\n    <div className={styles.personalInfo}>\n      <div className={styles.biodata}>\n        <h3>Biodata Information</h3>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"Full name\"\n              type=\"text\"\n              nameAttr=\"fullname\"\n              value={biodata.fullName}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, fullName: null })\n                setBiodata({ ...biodata, fullName: val})\n              }}\n              error={biodataErrors.fullName && biodataErrors.fullName}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Date of Birth\"\n              type=\"text\"\n              nameAttr=\"dob\"\n              value={biodata.dateOfBirth}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, dateOfBirth: null })\n                setBiodata({ ...biodata, dateOfBirth: val})\n              }}\n              error={biodataErrors.dateOfBirth && biodataErrors.dateOfBirth}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"BVN-linked Phone Number\"\n              type=\"text\"\n              nameAttr=\"bvnPhoneNo\"\n              value={biodata.bvnPhoneNo}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, bvnPhoneNo: null })\n                setBiodata({ ...biodata, bvnPhoneNo: val})\n              }}\n              error={biodataErrors.bvnPhoneNo && biodataErrors.bvnPhoneNo}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Email\"\n              type=\"email\"\n              nameAttr=\"email\"\n              value={biodata.email}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, email: null })\n                setBiodata({ ...biodata, email: val})\n              }}\n              error={biodataErrors.email && biodataErrors.email}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"Phone Number\"\n              type=\"text\"\n              nameAttr=\"PhoneNo\"\n              value={biodata.phoneNo}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, phoneNo: null })\n                setBiodata({ ...biodata, phoneNo: val})\n              }}\n              error={biodataErrors.phoneNo && biodataErrors.phoneNo}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Alternative Phone Number\"\n              type=\"text\"\n              nameAttr=\"altPhoneNo\"\n              value={biodata.altPhone}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, altPhone: null })\n                setBiodata({ ...biodata, altPhone: val})\n              }}\n              error={biodataErrors.altPhone && biodataErrors.altPhone}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <InputField \n              label=\"Gender\"\n              type=\"select\"\n              options={['Female', 'Male', 'Other']}\n              nameAttr=\"gender\"\n              value={biodata.gender}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, gender: null })\n                setBiodata({ ...biodata, gender: val})\n              }}\n              error={biodataErrors.gender && biodataErrors.gender}\n            />\n          </Col>\n        </Row>\n      </div>\n      <div className={styles.residentialInfo}>\n        <h3>Residential Address</h3>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"Street\"\n              type=\"text\"\n              nameAttr=\"residentStreet\"\n              value={residentialInfo.street}\n              changed={(val) => {\n                setResidentialErrors({ ...residentialErrors, street: null })\n                setResidentialInfo({ ...residentialInfo, street: val})\n              }}\n              error={residentialErrors.street && residentialErrors.street}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <InputField \n              label=\"City\"\n              type=\"text\"\n              nameAttr=\"city\"\n              value={residentialInfo.city}\n              changed={(val) => {\n                setResidentialErrors({ ...residentialErrors, city: null })\n                setResidentialInfo({ ...residentialInfo, city: val})\n              }}\n              error={residentialErrors.city && residentialErrors.city}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"State\"\n              type=\"select\"\n              options={nigeriaStates}\n              nameAttr=\"state\"\n              value={residentialInfo.state}\n              changed={(val) => {\n                setResidentialErrors({ ...residentialErrors, state: null })\n                setResidentialInfo({ ...residentialInfo, state: val})\n              }}\n              error={residentialErrors.state && residentialErrors.state}\n            />\n          </Col>\n        </Row>\n      </div>\n      <div className={styles.kinInfo}>\n        <h3>Next of Kin Information</h3>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"Full name\"\n              type=\"text\"\n              nameAttr=\"kinFullname\"\n              value={kinInfo.fullName}\n              changed={(val) => {\n                setKinErrors({ ...kinErrors, fullName: null })\n                setKinInfo({ ...kinInfo, fullName: val})\n              }}\n              error={kinErrors.fullName && kinErrors.fullName}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Relationship\"\n              type=\"text\"\n              nameAttr=\"kinRelationship\"\n              value={kinInfo.relationship}\n              changed={(val) => {\n                setKinErrors({ ...kinErrors, relationship: null })\n                setKinInfo({ ...kinInfo, relationship: val})\n              }}\n              error={kinErrors.relationship && kinErrors.relationship}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"Email Address\"\n              type=\"email\"\n              nameAttr=\"kinEmail\"\n              value={kinInfo.email}\n              changed={(val) => {\n                setKinErrors({ ...kinErrors, email: null })\n                setKinInfo({ ...kinInfo, email: val})\n              }}\n              error={kinErrors.email && kinErrors.email}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Phone Number\"\n              type=\"text\"\n              nameAttr=\"kinPhone\"\n              value={kinInfo.phoneNo}\n              changed={(val) => {\n                setKinErrors({ ...kinErrors, phoneNo: null })\n                setKinInfo({ ...kinInfo, phoneNo: val})\n              }}\n              error={kinErrors.phoneNo && kinErrors.phoneNo}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <InputField \n              label=\"Residential Address\"\n              type=\"text\"\n              nameAttr=\"kinAddress\"\n              placeholder=\"Street address to the nearest bus stop\"\n              value={kinInfo.address}\n              changed={(val) => {\n                setKinErrors({ ...kinErrors, address: null })\n                setKinInfo({ ...kinInfo, address: val})\n              }}\n              error={kinErrors.address && kinErrors.address}\n            />\n          </Col>\n        </Row>\n      </div>\n      <div className={styles.bankInfo}>\n        <h3>Bank Information</h3>\n        <p>Please provide a bank account where we can send your investment proceeds or loan requests to.</p>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"select\"\n              label=\"Bank\"\n              options={bankNames}\n              nameAttr=\"bank\"\n              value={bankInfo.bankName}\n              changed={(val) => {\n                setBankInfoErrors({ ...bankInfoErrors, bankName: null })\n                setBankInfo({ ...bankInfo, bankName: val})\n              }}\n              error={bankInfoErrors.bankName && bankInfoErrors.bankName}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Account Type\"\n              type=\"select\"\n              options={[\"Savings\", \"Current\"]}\n              nameAttr=\"acountType\"\n              value={bankInfo.accountType}\n              changed={(val) => {\n                setBankInfoErrors({ ...bankInfoErrors, accountType: null })\n                setBankInfo({ ...bankInfo, accountType: val})\n              }}\n              error={bankInfoErrors.accountType && bankInfoErrors.accountType}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Account Number\"\n              nameAttr=\"accountNo\"\n              value={bankInfo.accountNumber}\n              changed={(val) => {\n                setBankInfoErrors({ ...bankInfoErrors, accountNumber: null })\n                setBankInfo({ ...bankInfo, accountNumber: val})\n              }}\n              error={bankInfoErrors.accountNumber && bankInfoErrors.accountNumber}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Account Name\"\n              type=\"text\"\n              nameAttr=\"accountName\"\n              value={bankInfo.accountName}\n              changed={(val) => {\n                setBankInfoErrors({ ...bankInfoErrors, accountName: null })\n                setBankInfo({ ...bankInfo, accountName: val})\n              }}\n              error={bankInfoErrors.accountName && bankInfoErrors.accountName}\n            />\n          </Col>\n        </Row>\n      </div>\n      <Button \n        className=\"mt-4\" \n        clicked={handleSubmit} \n        loading={loading}\n        disabled={loading}\n        fullWidth \n        bgColor=\"#741763\" \n        size=\"lg\" \n        color=\"#EBEBEB\"\n      >\n        Save & Continue\n      </Button>\n    </div>\n  )\n}\n\nexport default PersonalForm;","/home/tga/Desktop/gypsy-capital/src/index.js",[],"/home/tga/Desktop/gypsy-capital/src/utils/history.js",[],"/home/tga/Desktop/gypsy-capital/src/context/UserContext.js",[],"/home/tga/Desktop/gypsy-capital/src/context/BankCotext.js",[],"/home/tga/Desktop/gypsy-capital/src/context/createDataContext.js",["230"],"import React, {createContext, useReducer } from 'react';\n\n\nexport default (reducer, actions, initialState, persist, saveData) => {\n  const Context = createContext();\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    const boundActions = {}\n\n    for(let key in actions) {\n      boundActions[key] = actions[key](dispatch);\n    }\n\n    return (\n      <Context.Provider value={{ state, ...boundActions }}>{children}</Context.Provider>\n    )\n  }\n\n  return { Context, Provider }\n}","/home/tga/Desktop/gypsy-capital/src/pages/CreditReport/CreditReport.jsx",["231","232"],"/home/tga/Desktop/gypsy-capital/src/pages/ContactPage/ContactPage.jsx",["233","234"],"/home/tga/Desktop/gypsy-capital/src/components/Dashboard/Dashboard.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/FileUploadButton/FileUploadButton.js",[],"/home/tga/Desktop/gypsy-capital/src/utils/resolveToken.js",["235"],"/home/tga/Desktop/gypsy-capital/src/pages/AgentOverview/AgentOverview.jsx",["236","237"],"/home/tga/Desktop/gypsy-capital/src/pages/ClientListPage/ClientListPage.jsx",["238"],"/home/tga/Desktop/gypsy-capital/src/components/IdentityForm/IdentityForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/utils/validateInput.js",["239","240"],"export const validateInput = (inputValues, errorSetter) => {\n\n  const validMail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  let validPhoneNumber = /^[0]\\d{10}$/;\n\n  const errorsInit = {};\n  let fields = { ...inputValues }\n\n  for(const key in fields) {\n    if(!fields[key]) {\n      errorsInit[key] = \"This field is required\";\n    } \n    if(fields.email && !fields.email.match(validMail)) {\n      errorsInit.email = \"Please enter a valid email address\"\n    } \n    if(fields.phoneNo && !fields.phoneNo.match(validPhoneNumber)) {\n      errorsInit.phoneNo = \"Please enter a valid phone number\"\n    } \n  }\n\n  errorSetter(errorsInit);\n  console.log(errorsInit);\n  if(Object.entries(errorsInit).length === 0) {\n    return true;\n  } else {\n    return false;\n  }\n\n}","/home/tga/Desktop/gypsy-capital/src/components/FaqSection/FaqSection.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/Products/Products.jsx",["241"],"/home/tga/Desktop/gypsy-capital/src/pages/pages.js",[],{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","severity":1,"message":"247","line":4,"column":1,"nodeType":"248","endLine":34,"endColumn":2},{"ruleId":"249","severity":1,"message":"250","line":47,"column":6,"nodeType":"251","endLine":47,"endColumn":13,"suggestions":"252"},{"ruleId":"253","severity":1,"message":"254","line":64,"column":33,"nodeType":"255","messageId":"256","endLine":64,"endColumn":34,"suggestions":"257"},{"ruleId":"253","severity":1,"message":"254","line":64,"column":58,"nodeType":"255","messageId":"256","endLine":64,"endColumn":59,"suggestions":"258"},{"ruleId":"259","severity":1,"message":"260","line":1,"column":17,"nodeType":"261","messageId":"262","endLine":1,"endColumn":23},{"ruleId":"259","severity":1,"message":"263","line":18,"column":10,"nodeType":"261","messageId":"262","endLine":18,"endColumn":15},{"ruleId":"259","severity":1,"message":"264","line":18,"column":32,"nodeType":"261","messageId":"262","endLine":18,"endColumn":38},{"ruleId":"259","severity":1,"message":"265","line":18,"column":40,"nodeType":"261","messageId":"262","endLine":18,"endColumn":44},{"ruleId":"259","severity":1,"message":"266","line":68,"column":9,"nodeType":"261","messageId":"262","endLine":68,"endColumn":21},{"ruleId":"242","replacedBy":"267"},{"ruleId":"244","replacedBy":"268"},{"ruleId":"259","severity":1,"message":"265","line":16,"column":25,"nodeType":"261","messageId":"262","endLine":16,"endColumn":29},{"ruleId":"259","severity":1,"message":"269","line":21,"column":16,"nodeType":"261","messageId":"262","endLine":21,"endColumn":20},{"ruleId":"259","severity":1,"message":"270","line":22,"column":22,"nodeType":"261","messageId":"262","endLine":22,"endColumn":35},{"ruleId":"242","replacedBy":"271"},{"ruleId":"244","replacedBy":"272"},{"ruleId":"249","severity":1,"message":"273","line":37,"column":6,"nodeType":"251","endLine":37,"endColumn":8,"suggestions":"274"},{"ruleId":"275","severity":1,"message":"276","line":102,"column":29,"nodeType":"277","endLine":102,"endColumn":72},{"ruleId":"242","replacedBy":"278"},{"ruleId":"244","replacedBy":"279"},{"ruleId":"246","severity":1,"message":"280","line":1,"column":1,"nodeType":"248","endLine":39,"endColumn":2},{"ruleId":"259","severity":1,"message":"265","line":18,"column":25,"nodeType":"261","messageId":"262","endLine":18,"endColumn":29},{"ruleId":"249","severity":1,"message":"273","line":62,"column":6,"nodeType":"251","endLine":62,"endColumn":8,"suggestions":"281"},{"ruleId":"249","severity":1,"message":"250","line":82,"column":6,"nodeType":"251","endLine":82,"endColumn":13,"suggestions":"282"},{"ruleId":"249","severity":1,"message":"283","line":163,"column":8,"nodeType":"251","endLine":163,"endColumn":10,"suggestions":"284"},{"ruleId":"249","severity":1,"message":"285","line":186,"column":6,"nodeType":"251","endLine":186,"endColumn":18,"suggestions":"286"},{"ruleId":"249","severity":1,"message":"250","line":29,"column":6,"nodeType":"251","endLine":29,"endColumn":13,"suggestions":"287"},{"ruleId":"259","severity":1,"message":"265","line":15,"column":25,"nodeType":"261","messageId":"262","endLine":15,"endColumn":29},{"ruleId":"288","severity":1,"message":"289","line":42,"column":15,"nodeType":"277","endLine":42,"endColumn":26},{"ruleId":"288","severity":1,"message":"289","line":45,"column":15,"nodeType":"277","endLine":45,"endColumn":26},{"ruleId":"288","severity":1,"message":"289","line":48,"column":15,"nodeType":"277","endLine":48,"endColumn":26},{"ruleId":"259","severity":1,"message":"265","line":22,"column":25,"nodeType":"261","messageId":"262","endLine":22,"endColumn":29},{"ruleId":"249","severity":1,"message":"290","line":59,"column":6,"nodeType":"251","endLine":59,"endColumn":52,"suggestions":"291"},{"ruleId":"249","severity":1,"message":"292","line":31,"column":6,"nodeType":"251","endLine":31,"endColumn":8,"suggestions":"293"},{"ruleId":"249","severity":1,"message":"294","line":102,"column":6,"nodeType":"251","endLine":102,"endColumn":49,"suggestions":"295"},{"ruleId":"249","severity":1,"message":"296","line":110,"column":6,"nodeType":"251","endLine":110,"endColumn":23,"suggestions":"297"},{"ruleId":"249","severity":1,"message":"298","line":135,"column":6,"nodeType":"251","endLine":135,"endColumn":25,"suggestions":"299"},{"ruleId":"246","severity":1,"message":"247","line":4,"column":1,"nodeType":"248","endLine":22,"endColumn":2},{"ruleId":"259","severity":1,"message":"300","line":2,"column":8,"nodeType":"261","messageId":"262","endLine":2,"endColumn":14},{"ruleId":"259","severity":1,"message":"265","line":9,"column":25,"nodeType":"261","messageId":"262","endLine":9,"endColumn":29},{"ruleId":"259","severity":1,"message":"265","line":9,"column":25,"nodeType":"261","messageId":"262","endLine":9,"endColumn":29},{"ruleId":"301","severity":1,"message":"302","line":33,"column":11,"nodeType":"277","endLine":40,"endColumn":14},{"ruleId":"246","severity":1,"message":"247","line":1,"column":1,"nodeType":"248","endLine":7,"endColumn":2},{"ruleId":"259","severity":1,"message":"300","line":5,"column":8,"nodeType":"261","messageId":"262","endLine":5,"endColumn":14},{"ruleId":"259","severity":1,"message":"303","line":10,"column":9,"nodeType":"261","messageId":"262","endLine":10,"endColumn":22},{"ruleId":"259","severity":1,"message":"300","line":3,"column":8,"nodeType":"261","messageId":"262","endLine":3,"endColumn":14},{"ruleId":"253","severity":1,"message":"254","line":3,"column":31,"nodeType":"255","messageId":"256","endLine":3,"endColumn":32,"suggestions":"304"},{"ruleId":"253","severity":1,"message":"254","line":3,"column":56,"nodeType":"255","messageId":"256","endLine":3,"endColumn":57,"suggestions":"305"},{"ruleId":"259","severity":1,"message":"265","line":20,"column":25,"nodeType":"261","messageId":"262","endLine":20,"endColumn":29},"no-native-reassign",["306"],"no-negated-in-lhs",["307"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clearErrors'. Either include it or remove the dependency array.","ArrayExpression",["308"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["309","310"],["311","312"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'handleSubmit' is assigned a value but never used.",["306"],["307"],"'path' is assigned a value but never used.","'setLoanStatus' is assigned a value but never used.",["306"],["307"],"React Hook useEffect has missing dependencies: 'getClientDetails' and 'user.user_id'. Either include them or remove the dependency array.",["313"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["306"],["307"],"Assign array to a variable before exporting as module default",["314"],["315"],"React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array. If 'redirect' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["316"],"React Hook useMemo has missing dependencies: 'submitBvn', 'submitIdentityInfo', and 'submitPersonalInfo'. Either include them or remove the dependency array.",["317"],["318"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'loanCalcData'. Either include it or remove the dependency array. You can also do a functional update 'setLoanCalcData(l => ...)' if you only need 'loanCalcData' in the 'setLoanCalcData' call.",["319"],"React Hook useEffect has missing dependencies: 'getBankList', 'getClientDetails', and 'user.user_id'. Either include them or remove the dependency array.",["320"],"React Hook useEffect has missing dependencies: 'bankList' and 'verifyBankInfo'. Either include them or remove the dependency array.",["321"],"React Hook useEffect has a missing dependency: 'bankInfo'. Either include it or remove the dependency array. You can also do a functional update 'setBankInfo(b => ...)' if you only need 'bankInfo' in the 'setBankInfo' call.",["322"],"React Hook useEffect has a missing dependency: 'biodata'. Either include it or remove the dependency array. You can also do a functional update 'setBiodata(b => ...)' if you only need 'biodata' in the 'setBiodata' call.",["323"],"'styles' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'sidebarRoutes' is assigned a value but never used.",["324","325"],["326","327"],"no-global-assign","no-unsafe-negation",{"desc":"328","fix":"329"},{"messageId":"330","fix":"331","desc":"332"},{"messageId":"333","fix":"334","desc":"335"},{"messageId":"330","fix":"336","desc":"332"},{"messageId":"333","fix":"337","desc":"335"},{"desc":"338","fix":"339"},{"desc":"338","fix":"340"},{"desc":"328","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"328","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"messageId":"330","fix":"357","desc":"332"},{"messageId":"333","fix":"358","desc":"335"},{"messageId":"330","fix":"359","desc":"332"},{"messageId":"333","fix":"360","desc":"335"},"Update the dependencies array to be: [clearErrors, error]",{"range":"361","text":"362"},"removeEscape",{"range":"363","text":"364"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"365","text":"366"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"367","text":"364"},{"range":"368","text":"366"},"Update the dependencies array to be: [getClientDetails, user.user_id]",{"range":"369","text":"370"},{"range":"371","text":"370"},{"range":"372","text":"362"},"Update the dependencies array to be: [redirect]",{"range":"373","text":"374"},"Update the dependencies array to be: [setupStage, submitBvn, submitIdentityInfo, submitPersonalInfo]",{"range":"375","text":"376"},{"range":"377","text":"362"},"Update the dependencies array to be: [monthlySalary, loanAmount, installmentPeriod, loanCalcData]",{"range":"378","text":"379"},"Update the dependencies array to be: [getBankList, getClientDetails, user.user_id]",{"range":"380","text":"381"},"Update the dependencies array to be: [bankInfo.accountNumber, bankInfo.bankName, bankList, verifyBankInfo]",{"range":"382","text":"383"},"Update the dependencies array to be: [bankInfo, userBankDetails]",{"range":"384","text":"385"},"Update the dependencies array to be: [biodata, user, userDetails]",{"range":"386","text":"387"},{"range":"388","text":"364"},{"range":"389","text":"366"},{"range":"390","text":"364"},{"range":"391","text":"366"},[1192,1199],"[clearErrors, error]",[1464,1465],"",[1464,1464],"\\",[1489,1490],[1489,1489],[1128,1130],"[getClientDetails, user.user_id]",[2035,2037],[2449,2456],[4394,4396],"[redirect]",[5055,5067],"[setupStage, submitBvn, submitIdentityInfo, submitPersonalInfo]",[868,875],[1861,1907],"[monthlySalary, loanAmount, installmentPeriod, loanCalcData]",[1016,1018],"[getBankList, getClientDetails, user.user_id]",[2629,2672],"[bankInfo.accountNumber, bankInfo.bankName, bankList, verifyBankInfo]",[2845,2862],"[bankInfo, userBankDetails]",[3709,3728],"[biodata, user, userDetails]",[92,93],[92,92],[117,118],[117,117]]