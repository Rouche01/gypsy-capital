[{"/home/tga/Desktop/gypsy-capital/src/reportWebVitals.js":"1","/home/tga/Desktop/gypsy-capital/src/context/BankCotext.js":"2","/home/tga/Desktop/gypsy-capital/src/context/LoanContext.js":"3","/home/tga/Desktop/gypsy-capital/src/context/createPersistDataContext.js":"4","/home/tga/Desktop/gypsy-capital/src/api/gypsy-web.js":"5","/home/tga/Desktop/gypsy-capital/src/pages/CreditReport/CreditReport.jsx":"6","/home/tga/Desktop/gypsy-capital/src/pages/Overview/Overview.jsx":"7","/home/tga/Desktop/gypsy-capital/src/pages/ContactPage/ContactPage.jsx":"8","/home/tga/Desktop/gypsy-capital/src/pages/ConsumerCredit/ConsumerCredit.jsx":"9","/home/tga/Desktop/gypsy-capital/src/pages/Products/Products.jsx":"10","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorLoans/ProcessorLoans.jsx":"11","/home/tga/Desktop/gypsy-capital/src/pages/ResetPassword/ResetPassword.jsx":"12","/home/tga/Desktop/gypsy-capital/src/pages/LoanDetail/LoanDetail.jsx":"13","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorClients/ProcessorClients.jsx":"14","/home/tga/Desktop/gypsy-capital/src/utils/validateInput.js":"15","/home/tga/Desktop/gypsy-capital/src/hooks/useNavigateAfterAuth.js":"16","/home/tga/Desktop/gypsy-capital/src/components/Dashboard/Dashboard.jsx":"17","/home/tga/Desktop/gypsy-capital/src/components/LoanModal/LoanModal.jsx":"18","/home/tga/Desktop/gypsy-capital/src/components/FaqSection/FaqSection.jsx":"19","/home/tga/Desktop/gypsy-capital/src/components/LoanCalculatorForm/LoanCalculatorForm.jsx":"20","/home/tga/Desktop/gypsy-capital/src/components/BvnForm/BvnForm.jsx":"21","/home/tga/Desktop/gypsy-capital/src/components/FileUploadButton/FileUploadButton.js":"22","/home/tga/Desktop/gypsy-capital/src/hooks/usePagination.js":"23","/home/tga/Desktop/gypsy-capital/src/pages/ClientListPage/ClientListPage.jsx":"24","/home/tga/Desktop/gypsy-capital/src/context/UserContext.js":"25","/home/tga/Desktop/gypsy-capital/src/pages/SignUp/SignUp.jsx":"26","/home/tga/Desktop/gypsy-capital/src/pages/Profile/Profile.jsx":"27","/home/tga/Desktop/gypsy-capital/src/pages/AgentOverview/AgentOverview.jsx":"28","/home/tga/Desktop/gypsy-capital/src/pages/Faqs/Faqs.jsx":"29","/home/tga/Desktop/gypsy-capital/src/pages/HomePage/HomePage.jsx":"30","/home/tga/Desktop/gypsy-capital/src/pages/ClientDetails/ClientDetails.jsx":"31","/home/tga/Desktop/gypsy-capital/src/components/Button/Button.jsx":"32","/home/tga/Desktop/gypsy-capital/src/components/ProgressBar/ProgressBar.jsx":"33","/home/tga/Desktop/gypsy-capital/src/components/StatBox/StatBox.jsx":"34","/home/tga/Desktop/gypsy-capital/src/components/LoanContactForm/LoanContactForm.jsx":"35","/home/tga/Desktop/gypsy-capital/src/components/IdentityForm/IdentityForm.jsx":"36","/home/tga/Desktop/gypsy-capital/src/components/AccountSetupModal/AccountSetupModal.jsx":"37","/home/tga/Desktop/gypsy-capital/src/App.js":"38","/home/tga/Desktop/gypsy-capital/src/utils/history.js":"39","/home/tga/Desktop/gypsy-capital/src/routes/protectedroute/ProtectedRoute.js":"40","/home/tga/Desktop/gypsy-capital/src/context/createDataContext.js":"41","/home/tga/Desktop/gypsy-capital/src/pages/AboutUs/AboutUs.jsx":"42","/home/tga/Desktop/gypsy-capital/src/pages/ForgotPassword/ForgotPassword.jsx":"43","/home/tga/Desktop/gypsy-capital/src/pages/LoanList/LoanList.jsx":"44","/home/tga/Desktop/gypsy-capital/src/components/PersonalForm/PersonalForm.jsx":"45","/home/tga/Desktop/gypsy-capital/src/components/NavTabs/NavTabs.jsx":"46","/home/tga/Desktop/gypsy-capital/src/components/Footer/Footer.jsx":"47","/home/tga/Desktop/gypsy-capital/src/components/ModalForm/ModalForm.jsx":"48","/home/tga/Desktop/gypsy-capital/src/context/AuthContext.js":"49","/home/tga/Desktop/gypsy-capital/src/pages/SignIn/SignIn.jsx":"50","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorDashboard/ProcessorDashboard.jsx":"51","/home/tga/Desktop/gypsy-capital/src/pages/Support/Support.jsx":"52","/home/tga/Desktop/gypsy-capital/src/utils/dummyData.js":"53","/home/tga/Desktop/gypsy-capital/src/components/ProfileView/ProfileView.jsx":"54","/home/tga/Desktop/gypsy-capital/src/components/Loader/Loader.jsx":"55","/home/tga/Desktop/gypsy-capital/src/utils/mappedLgas.js":"56","/home/tga/Desktop/gypsy-capital/src/components/EmployerInfoForm/EmployerInfoForm.jsx":"57","/home/tga/Desktop/gypsy-capital/src/index.js":"58","/home/tga/Desktop/gypsy-capital/src/utils/resolveToken.js":"59","/home/tga/Desktop/gypsy-capital/src/pages/OtpVerify/OtpVerify.jsx":"60","/home/tga/Desktop/gypsy-capital/src/pages/LoanCalculator/LoanCalculator.jsx":"61","/home/tga/Desktop/gypsy-capital/src/routes/sidebarRoutes.js":"62","/home/tga/Desktop/gypsy-capital/src/components/InputField/InputField.js":"63","/home/tga/Desktop/gypsy-capital/src/utils/nigeriaStates.js":"64","/home/tga/Desktop/gypsy-capital/src/routes/pageUrl.js":"65"},{"size":362,"mtime":1611009045300,"results":"66","hashOfConfig":"67"},{"size":1962,"mtime":1613897814424,"results":"68","hashOfConfig":"67"},{"size":6834,"mtime":1614471054916,"results":"69","hashOfConfig":"67"},{"size":821,"mtime":1612688150601,"results":"70","hashOfConfig":"67"},{"size":147,"mtime":1612318782772,"results":"71","hashOfConfig":"67"},{"size":498,"mtime":1613049821733,"results":"72","hashOfConfig":"67"},{"size":5197,"mtime":1613938100761,"results":"73","hashOfConfig":"67"},{"size":4507,"mtime":1612758575858,"results":"74","hashOfConfig":"67"},{"size":8165,"mtime":1613929899661,"results":"75","hashOfConfig":"67"},{"size":11900,"mtime":1613037045371,"results":"76","hashOfConfig":"67"},{"size":478,"mtime":1613661295795,"results":"77","hashOfConfig":"67"},{"size":3453,"mtime":1613889706632,"results":"78","hashOfConfig":"67"},{"size":4731,"mtime":1613387224280,"results":"79","hashOfConfig":"67"},{"size":2912,"mtime":1613664452829,"results":"80","hashOfConfig":"67"},{"size":1153,"mtime":1613889253169,"results":"81","hashOfConfig":"67"},{"size":883,"mtime":1614272170767,"results":"82","hashOfConfig":"67"},{"size":4301,"mtime":1614470843592,"results":"83","hashOfConfig":"67"},{"size":4849,"mtime":1614451456706,"results":"84","hashOfConfig":"67"},{"size":2175,"mtime":1613020166641,"results":"85","hashOfConfig":"67"},{"size":7458,"mtime":1613642079250,"results":"86","hashOfConfig":"67"},{"size":1331,"mtime":1612592363525,"results":"87","hashOfConfig":"67"},{"size":665,"mtime":1611816481368,"results":"88","hashOfConfig":"67"},{"size":1259,"mtime":1614323784801,"results":"89","hashOfConfig":"67"},{"size":4584,"mtime":1614471092181,"results":"90","hashOfConfig":"67"},{"size":7378,"mtime":1614471137585,"results":"91","hashOfConfig":"67"},{"size":7692,"mtime":1612416738695,"results":"92","hashOfConfig":"67"},{"size":5481,"mtime":1614264491903,"results":"93","hashOfConfig":"67"},{"size":3480,"mtime":1614471025731,"results":"94","hashOfConfig":"67"},{"size":737,"mtime":1613020227334,"results":"95","hashOfConfig":"67"},{"size":13172,"mtime":1613019608220,"results":"96","hashOfConfig":"67"},{"size":13202,"mtime":1614470926942,"results":"97","hashOfConfig":"67"},{"size":917,"mtime":1612416700603,"results":"98","hashOfConfig":"67"},{"size":1565,"mtime":1611429643367,"results":"99","hashOfConfig":"67"},{"size":359,"mtime":1613662172186,"results":"100","hashOfConfig":"67"},{"size":6013,"mtime":1614449713718,"results":"101","hashOfConfig":"67"},{"size":2430,"mtime":1613916529415,"results":"102","hashOfConfig":"67"},{"size":21688,"mtime":1614430258872,"results":"103","hashOfConfig":"67"},{"size":3479,"mtime":1613845593685,"results":"104","hashOfConfig":"67"},{"size":84,"mtime":1612764469627,"results":"105","hashOfConfig":"67"},{"size":601,"mtime":1613641026802,"results":"106","hashOfConfig":"67"},{"size":533,"mtime":1612421501467,"results":"107","hashOfConfig":"67"},{"size":6259,"mtime":1612758512034,"results":"108","hashOfConfig":"67"},{"size":1549,"mtime":1613844663739,"results":"109","hashOfConfig":"67"},{"size":3582,"mtime":1613400272340,"results":"110","hashOfConfig":"67"},{"size":14395,"mtime":1613915891204,"results":"111","hashOfConfig":"67"},{"size":504,"mtime":1613386895718,"results":"112","hashOfConfig":"67"},{"size":1152,"mtime":1612102534435,"results":"113","hashOfConfig":"67"},{"size":11735,"mtime":1614471117577,"results":"114","hashOfConfig":"67"},{"size":8060,"mtime":1614238661290,"results":"115","hashOfConfig":"67"},{"size":3627,"mtime":1614158877511,"results":"116","hashOfConfig":"67"},{"size":3746,"mtime":1613663780278,"results":"117","hashOfConfig":"67"},{"size":156,"mtime":1613199246806,"results":"118","hashOfConfig":"67"},{"size":3716,"mtime":1613283327274,"results":"119","hashOfConfig":"67"},{"size":7010,"mtime":1612714255563,"results":"120","hashOfConfig":"67"},{"size":244,"mtime":1614263157725,"results":"121","hashOfConfig":"67"},{"size":14356,"mtime":1614449747162,"results":"122","hashOfConfig":"67"},{"size":9416,"mtime":1614451042975,"results":"123","hashOfConfig":"67"},{"size":548,"mtime":1612763106807,"results":"124","hashOfConfig":"67"},{"size":192,"mtime":1612142197425,"results":"125","hashOfConfig":"67"},{"size":2391,"mtime":1612574568451,"results":"126","hashOfConfig":"67"},{"size":3598,"mtime":1613010165972,"results":"127","hashOfConfig":"67"},{"size":2154,"mtime":1613661255554,"results":"128","hashOfConfig":"67"},{"size":2389,"mtime":1612921206368,"results":"129","hashOfConfig":"67"},{"size":6576,"mtime":1613018961113,"results":"130","hashOfConfig":"67"},{"size":1933,"mtime":1613845508055,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"t9s37o",{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"134"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"134"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"155"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"155"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"161"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"161"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"134"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"161"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"142"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"142"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"161"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"161"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"142"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"161"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"142"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"161"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/tga/Desktop/gypsy-capital/src/reportWebVitals.js",[],["286","287"],"/home/tga/Desktop/gypsy-capital/src/context/BankCotext.js",[],"/home/tga/Desktop/gypsy-capital/src/context/LoanContext.js",[],"/home/tga/Desktop/gypsy-capital/src/context/createPersistDataContext.js",["288"],"import React, {createContext, useReducer, useEffect } from 'react';\n\n\nexport default (reducer, actions, initialState, persist, saveData) => {\n  const Context = createContext();\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState, () => {\n      if(persist) {\n        const localData = localStorage.getItem('gypsy');\n        return localData ? JSON.parse(localData) : {}\n      }\n    });\n\n    useEffect(() => {\n      if(persist) {\n        saveData(state);\n        // console.log(state);\n      }\n    }, [state])\n\n    const boundActions = {}\n\n    for(let key in actions) {\n      boundActions[key] = actions[key](dispatch);\n    }\n\n    return (\n      <Context.Provider value={{ state, ...boundActions }}>{children}</Context.Provider>\n    )\n  }\n\n  return { Context, Provider }\n}",["289","290"],"/home/tga/Desktop/gypsy-capital/src/api/gypsy-web.js",[],"/home/tga/Desktop/gypsy-capital/src/pages/CreditReport/CreditReport.jsx",["291","292","293"],"/home/tga/Desktop/gypsy-capital/src/pages/Overview/Overview.jsx",["294","295"],"/home/tga/Desktop/gypsy-capital/src/pages/ContactPage/ContactPage.jsx",["296","297"],"import React, { useState } from 'react';\nimport {Row, Col} from 'react-bootstrap';\nimport styles from './ContactPage.module.scss';\nimport NavBar from '../../components/NavBar/NavBar';\nimport { HiLocationMarker, HiMail, HiPhone } from 'react-icons/hi';\nimport { IoLogoWhatsapp } from 'react-icons/io';\nimport Footer from '../../components/Footer/Footer';\nimport InputField from '../../components/InputField/InputField';\nimport { useRouteMatch, Link } from 'react-router-dom';\n\n\nconst ContactPage = ({ history }) => {\n\n  const { url } = useRouteMatch();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    subject: '',\n    message: ''\n  });\n\n  return (\n    <>\n      <NavBar history={history} location={url} />\n      <div className={styles.heroSection}>\n        <div className={styles.container}>\n          <h2>Contact Us</h2>\n        </div>\n        <div className={styles.bgOverlay}></div>\n      </div>\n      <div className={styles.mapSection}>\n        <div className={styles.container}>\n          <iframe\n              className={styles.map}\n              frameBorder={0}\n              scrolling=\"no\"\n              marginHeight={0}\n              marginWidth={0}\n              src=\"https://maps.google.com/maps?hl=en&amp;q=Landmark%20Towers,%205B%20Water%20Corporation%20Rd,Oniru%20Rd,%20Victoria%20Island%20101241,%20Lagos+(Gypsy%20Capital)&amp;t=&amp;z=15&amp;ie=UTF8&amp;iwloc=B&amp;output=embed\"\n            >\n            </iframe>\n        </div>\n      </div>\n      <div className={styles.contactSection}>\n        <div className={styles.container}>\n          <Row>\n            <Col md={7}>\n              <div className={styles.contactForm}>\n                <h3>Send Us A Message</h3>\n                <Row className=\"mb-4\">\n                  <Col>\n                    <InputField \n                      type=\"text\"\n                      placeholder=\"Name\"\n                      nameAttr=\"name\"\n                      value={formData.name}\n                      changed={(val) => setFormData({ ...formData, name: val })}\n                    />\n                  </Col>\n                  <Col>\n                    <InputField \n                      type=\"email\"\n                      placeholder=\"Email\"\n                      nameAttr=\"email\"\n                      value={formData.email}\n                      changed={(val) => setFormData({ ...formData, email: val })}\n                    />\n                  </Col>\n                </Row>\n                <Row className=\"mb-4\">\n                  <Col>\n                    <InputField \n                      type=\"text\"\n                      placeholder=\"Subject\"\n                      nameAttr=\"subject\"\n                      value={formData.subject}\n                      changed={(val) => setFormData({ ...formData, subject: val })}\n                    />\n                  </Col>\n                </Row>\n                <Row className=\"mb-4\">\n                  <Col>\n                    <InputField \n                      type=\"textarea\"\n                      placeholder=\"Message\"\n                      nameAttr=\"message\"\n                      value={formData.message}\n                      changed={(val) => setFormData({ ...formData, message: val })}\n                    />\n                  </Col>\n                </Row>\n                <button>\n                  Submit\n                </button>\n              </div>\n            </Col>\n            <Col md={5}>\n              <div className={styles.addressBox}>\n                <h3>Get In Touch</h3>\n                <div className={styles.addressGroup}>\n                  <HiLocationMarker className={styles.icon} size=\"4em\" />\n                  <p>Landmark Towers, 5B Water Corporation Rd,Oniru Rd, Victoria Island 101241, Lagos</p>\n                </div>\n                <div className={styles.addressGroup}>\n                  <HiMail className={styles.icon} size=\"1.8em\" />\n                  <p>hello@gypsycapital.com</p>\n                </div>\n                <div className={styles.addressGroup}>\n                  <HiPhone className={styles.icon} size=\"1.8em\" />\n                  <p>+234 809 9907 888</p>\n                </div>\n                <div className={styles.addressGroup}>\n                  <IoLogoWhatsapp className={styles.icon} size=\"1.8em\" />\n                  <p>+234 809 9907 888</p>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </div>\n      <Footer />\n    </>\n\n  )\n}\n\n\nexport default ContactPage;","/home/tga/Desktop/gypsy-capital/src/pages/ConsumerCredit/ConsumerCredit.jsx",["298","299"],"import React, { useContext, useEffect } from 'react';\nimport styles from './ConsumerCredit.module.scss';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport Button from '../../components/Button/Button';\nimport { Table } from 'react-bootstrap';\nimport noLoan from '../../assets/no-loan.png';\nimport { Row, Col, Modal } from 'react-bootstrap';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport LoanCalculatorForm from '../../components/LoanCalculatorForm/LoanCalculatorForm';\nimport LoanContactForm from '../../components/LoanContactForm/LoanContactForm';\nimport EmployerInfoForm from '../../components/EmployerInfoForm/EmployerInfoForm';\nimport BankInfoForm from '../../components/BankInfoForm/BankInfoForm';\nimport { Route, useRouteMatch, Switch, useLocation, useHistory } from 'react-router-dom';\nimport { Context as LoanContext } from '../../context/LoanContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { clientRoutes } from '../../routes/sidebarRoutes';\n\n\nconst ConsumerCredit = () => {\n\n  const { path } = useRouteMatch();\n  const location = useLocation();\n  const history = useHistory();\n\n  const applyStageArray = {\n    '/dashboard/consumer-credit/apply/calculator': 0,\n    '/dashboard/consumer-credit/apply/contact-info': 1,\n    '/dashboard/consumer-credit/apply/employer-info': 2,\n    '/dashboard/consumer-credit/apply/bank-info': 3\n  }\n\n\n  const { \n    state: { loans, error, currentLoanId, incomplete, loanApplicationStage }, \n    retrieveClientLoans,\n    clearError,\n    loanApply,\n    addAddressForLoan,\n    addWorkInfoForLoan,\n    addBankInfoForLoan,\n    clearCompleteState\n  } = useContext(LoanContext);\n  const { state: { user } } = useContext(AuthContext);\n\n  useEffect(() => {\n    retrieveClientLoans();\n  }, [])\n\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearError();\n    }\n  }, [error])\n\n\n  const numberWithCommas = (x) => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  const calculateLoan = (data) => {\n    loanApply(data, user.user_id)\n  }\n\n  const updateAddress = (data) => {\n    addAddressForLoan(data, currentLoanId)\n  }\n\n  const updateEmployerInfo = (data) => {\n    addWorkInfoForLoan(data, currentLoanId)\n  }\n\n  const updateBankInfo = (data) => {\n    addBankInfoForLoan(data, currentLoanId)\n  }\n\n  const resumeApplication = () => {\n    clearCompleteState();\n    if(loanApplicationStage === 'calculated') {\n      history.push('/dashboard/consumer-credit/apply/contact-info')\n    }\n    if(loanApplicationStage === 'address_added') {\n      history.push('/dashboard/consumer-credit/apply/employer-info')\n    }\n    if(loanApplicationStage === 'employer_added') {\n      history.push('/dashboard/consumer-credit/apply/bank-info')\n    }\n  }\n\n  return (\n    <>\n      <Dashboard sidebarRoutes={clientRoutes} location={location}>\n        <ToastContainer position=\"top-center\" />\n        <div className={styles.heading}>\n          <div>\n            <h2>Consumer Credit</h2>\n            <p>Get a loan with ease</p>\n          </div>\n          { location.pathname === '/dashboard/consumer-credit/history' && <Button\n              bgColor=\"#741763\"\n              size=\"sm\"\n              color=\"#fff\"\n              className=\"mt-4\"\n              clicked={() => history.push('/dashboard/consumer-credit/apply/calculator')}\n            >\n              Apply for a loan\n            </Button>}\n        </div>\n        <Switch>\n          <Route path={`${path}/history`}>\n            <div className={styles.creditTable}>\n              <Table striped hover className={styles.tableStyles}>\n                <thead>\n                  <tr>\n                    <th>Loan ID</th>\n                    <th>Monthly Repayment</th>\n                    <th>Tenor</th>\n                    <th>Status</th>\n                    <th>Repayment Source</th>\n                    <th>Loan Amount</th>\n                    <th>Balance</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {loans.map((loanInstance, idx) => {\n                    return (\n                      <tr>\n                        <td>{loanInstance._id.substring(0, 5)}</td>\n                        <td>{`N ${numberWithCommas(loanInstance.monthlyRepayment)}`}</td>\n                        <td>{!loanInstance.approvedTenure ? loanInstance.paymentPeriod : loanInstance.approvedTenure}</td>\n                        <td>{loanInstance.status}</td>\n                        <td>Salary</td>\n                        <td>{`N ${numberWithCommas(loanInstance.amount)}`}</td>\n                        <td>______</td>\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </Table>\n              { (!loans || loans.length === 0) && <div className={styles.noLoanMessage}>\n                <p>Sorry you currently have no loan</p>\n                <img src={noLoan} alt=\"No loan history\" height=\"250\" />\n              </div>}\n            </div>\n          </Route>\n          <Route path={`${path}/apply`}>\n            <div className={styles.applyContainer}>\n              <Row>\n                <Col md={4}>\n                  <ul className={styles.joinedBullets}>\n                    <li className={styles.active}>\n                      Loan Calculator\n                    </li>\n                    <li \n                      className={applyStageArray[location.pathname] > 0 && styles.active}\n                    >\n                      Contact Address\n                    </li>\n                    <li\n                      className={applyStageArray[location.pathname] > 1 && styles.active}\n                    >\n                      Employment Information\n                    </li>\n                    <li\n                      className={applyStageArray[location.pathname] > 2 && styles.active}\n                    >\n                      Bank Details\n                    </li>\n                  </ul>\n                </Col>\n                <Col md={8}>\n                  <div className={styles.applyForm}>\n                    <Switch>\n                      <Route path={`${path}/apply/calculator`}>\n                        <LoanCalculatorForm delegateApply={calculateLoan} />\n                      </Route>\n                      <Route path={`${path}/apply/contact-info`}>\n                        <LoanContactForm submitContact={updateAddress} />\n                      </Route>\n                      <Route path={`${path}/apply/employer-info`}>\n                        <EmployerInfoForm submitEmployerInfo={updateEmployerInfo} />\n                      </Route>\n                      <Route path={`${path}/apply/bank-info`}>\n                        <BankInfoForm submitBankInfo={updateBankInfo} />\n                      </Route>\n                    </Switch>\n                  </div>\n                </Col>\n              </Row>\n            </div>\n          </Route>\n          <Route path={`${path}/success`}>\n            <div className={styles.applicationComplete}>\n              <FaCheckCircle size=\"4em\" color=\"#741763\" />\n              <h2>Congratulations!</h2>\n              <p>Your loan application has been submitted and is being processed</p>\n              <p>Look out for an email from us within the next 24 hours</p>\n            </div>\n          </Route>\n        </Switch>\n      </Dashboard>\n      <Modal \n        className={styles.continueModal} \n        size=\"sm\" \n        show={incomplete}\n        onHide={() => {\n          clearCompleteState();\n        }}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>\n            <h3>Continue Application</h3>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>You have an incomplete loan request, please continue where you left off</p>\n          <Button\n            clicked={resumeApplication} \n            fullWidth\n            className=\"mt-4\" \n            bgColor=\"#741763\" \n            size=\"sm\" \n            color=\"#EBEBEB\"\n          >\n            Continue\n          </Button>\n        </Modal.Body>\n      </Modal>\n    </>\n  )\n}\n\n\nexport default ConsumerCredit;",["300","301"],"/home/tga/Desktop/gypsy-capital/src/pages/Products/Products.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/ProcessorLoans/ProcessorLoans.jsx",["302"],"import React from 'react';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport styles from './ProcessorLoans.module.scss';\nimport { routes } from '../../routes/sidebarRoutes';\nimport { useLocation } from 'react-router';\n\n\nconst ProcessorLoans = () => {\n\n  const location = useLocation();\n  const processorRoutes = routes[2];\n\n  return (\n    <Dashboard sidebarRoutes={processorRoutes} location={location}>\n\n    </Dashboard>\n  )\n}\n\n\nexport default ProcessorLoans;",["303","304"],"/home/tga/Desktop/gypsy-capital/src/pages/ResetPassword/ResetPassword.jsx",["305"],"import React, { useContext, useEffect, useState } from 'react';\nimport styles from './ResetPassword.module.scss';\nimport Logo from '../../assets/logo.png';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport { Row, Col } from 'react-bootstrap';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { useLocation } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { validateInput } from '../../utils/validateInput';\n\n\nconst ResetPassword = () => {\n\n  const { state: { loading, error }, createNewPassword, clearErrors } = useContext(UserContext);\n  const location = useLocation();\n\n  const [resetData, setResetData] = useState({\n    otp: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const [fieldErrors, setFieldErrors] = useState({\n    otp: null,\n    password: null,\n    confirmPassword: null\n  });\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearErrors();\n    }\n  }, [error])\n\n  const setNewPassword = () => {\n    const validated = validateInput(resetData, setFieldErrors);\n    console.log(validated);\n    if(validated) {\n      const data = {\n        email: location.state.email,\n        code: resetData.otp,\n        password: resetData.password\n      }\n\n      createNewPassword(data);\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <ToastContainer position=\"top-center\" />\n      <img src={Logo} alt=\"Gypsy Logo\" />\n      <h1>Reset Password</h1>\n      <div className={styles.formBox}>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Enter OTP\"\n              nameAttr=\"email\"\n              value={resetData.otp}\n              changed={(val) => {\n                setFieldErrors({ ...fieldErrors, otp: null })\n                setResetData({ ...resetData, otp: val })\n              }}\n              error={fieldErrors.otp && fieldErrors.otp}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"password\"\n              label=\"New Password\"\n              nameAttr=\"newPassword\"\n              value={resetData.password}\n              changed={(val) => {\n                setFieldErrors({ ...fieldErrors, password: null })\n                setResetData({ ...resetData, password: val })\n              }}\n              error={fieldErrors.password && fieldErrors.password}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"password\"\n              label=\"Confirm Password\"\n              nameAttr=\"confirmPassword\"\n              value={resetData.confirmPassword}\n              changed={(val) => {\n                setFieldErrors({ ...fieldErrors, confirmPassword: null })\n                setResetData({ ...resetData, confirmPassword: val })\n              }}\n              error={fieldErrors.confirmPassword && fieldErrors.confirmPassword}\n            />\n          </Col>\n        </Row>\n        <Button\n          fullWidth \n          className=\"mt-4\" \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n          clicked={setNewPassword}\n          loading={loading}\n          disabled={loading}\n        >\n          Reset Password\n        </Button>\n      </div>\n    </div>\n  )\n}\n\n\nexport default ResetPassword;","/home/tga/Desktop/gypsy-capital/src/pages/LoanDetail/LoanDetail.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/ProcessorClients/ProcessorClients.jsx",[],"/home/tga/Desktop/gypsy-capital/src/utils/validateInput.js",["306","307"],"/home/tga/Desktop/gypsy-capital/src/hooks/useNavigateAfterAuth.js",["308"],"import { useContext, useEffect } from 'react';\nimport { Context as AuthContext } from '../context/AuthContext';\nimport history from '../utils/history';\nimport pageUrl from '../routes/pageUrl';\n\n\nexport default (email, password) => {\n  const { state: { user }, getActiveUser } = useContext(AuthContext);\n\n  useEffect(() => {\n    if(user?.role && user.role === \"client\") {\n      history.push(pageUrl.DASHBOARD_HOMEPAGE)\n    } else if(user?.role && user.role === \"admin\") {\n      history.push(pageUrl.PROCESSORS_DASHBOARD)\n    } else if(user?.role && user.role === \"sales\") {\n      history.push(pageUrl.SALES_AGENT_OVERVIEW)\n    } else if(user?.role && user.role === \"processor\") {\n      history.push(pageUrl.PROCESSORS_DASHBOARD)\n    }\n  }, [user])\n\n  const signinAndNavigate = (signinFunc) => {\n    signinFunc({ email, password }, getActiveUser)\n  }\n\n  return [ signinAndNavigate ];\n}","/home/tga/Desktop/gypsy-capital/src/components/Dashboard/Dashboard.jsx",["309"],"/home/tga/Desktop/gypsy-capital/src/components/LoanModal/LoanModal.jsx",["310","311"],"/home/tga/Desktop/gypsy-capital/src/components/FaqSection/FaqSection.jsx",["312"],"import React, {useEffect, useState} from 'react';\nimport styles from './FaqSection.module.scss';\nimport { useAccordionToggle, Accordion, Card, AccordionCollapse } from 'react-bootstrap';\nimport { FaPlus, FaMinus } from 'react-icons/fa';\nimport { limitFaqContent, faqContent } from '../../utils/nigeriaStates';\nimport { useHistory } from 'react-router';\n\n\nconst CustomToggle = ({ children, eventKey }) => {\n\n  const [open, setOpen] = useState(false);\n\n  const customOnClick = useAccordionToggle(eventKey, () => {\n    setOpen(!open);\n  })\n\n  return (\n    <div\n      className={styles.customAccordionHeader}\n      onClick={customOnClick}\n    >\n      { open ? \n        <FaMinus size=\"1.2em\" className={styles.icon} color=\"#741763\" /> : \n        <FaPlus size=\"1.2em\" className={styles.icon} color=\"#741763\" />\n      }\n      {children}\n    </div>\n  )\n}\n\nconst FaqSection = ({ returnNumber }) => {\n\n  const [faqs, setFaqs] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    if(typeof returnNumber === \"number\") {\n      setFaqs(limitFaqContent(returnNumber))\n    } else if(typeof returnNumber === \"string\" && returnNumber === 'all') {\n      setFaqs(faqContent)\n    }\n  }, [])\n\n  if(faqs.length === 0) {\n    return null\n  }\n\n  return (\n    <div className={styles.faqSection}>\n      <div className={styles.container}>\n        { returnNumber !== 'all' && <h2>Frequently Asked Questions</h2> }\n        <Accordion>\n          { faqs.map((faq, index) => (\n            <Card className={styles.accordionTab}>\n              <Card.Header>\n                <CustomToggle eventKey={index+1}>\n                  {faq.title}\n                </CustomToggle>\n              </Card.Header>\n              <AccordionCollapse eventKey={index+1}>\n                <Card.Body className={styles.cardBody}>\n                  {faq.bodyContent()}\n                </Card.Body>\n              </AccordionCollapse>\n            </Card>\n          ))}\n        </Accordion>\n        { returnNumber !== \"all\" && \n          <button onClick={() => history.push('/frequently-asked-questions')}>\n            View All\n          </button>\n        }\n      </div>\n    </div>\n  );\n}\n\n\nexport default FaqSection;","/home/tga/Desktop/gypsy-capital/src/components/LoanCalculatorForm/LoanCalculatorForm.jsx",["313","314","315"],"import React, { useState, useEffect, useContext } from 'react';\nimport styles from './LoanCalculatorForm.module.scss';\nimport InputField from '../InputField/InputField';\nimport Button from '../Button/Button';\nimport { Row, Col } from 'react-bootstrap';\nimport { validateInput } from '../../utils/validateInput';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Context as LoanContext } from '../../context/LoanContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\n\n\nconst LoanCalculatorForm = ({ delegateApply }) => {\n\n  const { state: { loading }, loanApply } = useContext(LoanContext);\n\n  const [daysOfMonth, setDaysOfMonth] = useState([]);\n  const [limitError, setLimitError] = useState(null);\n  const [loanCalcData, setLoanCalcData] = useState({\n    monthlySalary: \"\",\n    payDay: \"\",\n    loanAmount: \"\",\n    installmentPeriod: \"\",\n    loanPurpose: \"\",\n    estimatedMonthlyPayment: \"\"\n  });\n\n  const [loanCalcDataErrors, setLoanCalcDataErrors] = useState({\n    monthlySalary: null,\n    payDay: null,\n    loanAmount: null,\n    installmentPeriod: null,\n    loanPurpose: null\n  });\n\n  useEffect(() => {\n    setDaysOfMonth(fillUpDaysArray);\n  }, [])\n\n  const fillUpDaysArray = () => {\n    let daysArray = [];\n    for(let i=0; i < 31; i++) {\n      daysArray.push(i+1)\n    }\n    return daysArray;\n  }\n\n  const { monthlySalary, loanAmount, installmentPeriod, payDay, loanPurpose } = loanCalcData;\n\n  useEffect(() => {\n    if(monthlySalary && loanAmount && installmentPeriod) {\n      // console.log(typeof monthlySalary, typeof loanAmount, installmentPeriod);\n      const tenor = Number(installmentPeriod.split(' ')[0]);\n      let initRate = Number(loanAmount);\n      let toRepay = initRate + (initRate * 0.04);\n      toRepay = toRepay + (toRepay * 0.04 * tenor)\n      // for(let i=0; i < tenor; i++) {\n      //   toRepay = initRate + (initRate * 0.04);\n      //   initRate = toRepay;\n      // }\n      const monthlyRepay = toRepay / tenor;\n      console.log(monthlyRepay)\n      if(monthlyRepay > (0.333 * Number(monthlySalary))) {\n        setLimitError('You are not eligible for this amount, kindly enter a lower loan amount');\n      } else {\n        setLimitError(null)\n      }\n      setLoanCalcData({ ...loanCalcData, estimatedMonthlyPayment: Math.floor(monthlyRepay) })\n    }\n  }, [monthlySalary, loanAmount, installmentPeriod])\n\n  const submitLoanCalcData = () => {\n    console.log('works');\n    const fieldsTovalidate = { monthlySalary, payDay, loanAmount, installmentPeriod, loanPurpose }\n    const validated = validateInput(fieldsTovalidate, setLoanCalcDataErrors);\n    if(validated) {\n      const applyData = {\n        monthlySalary,\n        payDay,\n        amount: loanAmount,\n        paymentPeriod: installmentPeriod,\n        loanPurpose,\n        monthlyRepayment: loanCalcData.estimatedMonthlyPayment\n      }\n      console.log(applyData);\n      limitError ? toast.error(limitError) : delegateApply(applyData);\n    }\n  }\n\n  if(daysOfMonth.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={styles.calculatorForm}>\n      <ToastContainer position=\"top-center\" />\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            label=\"Monthly Salary\" \n            type=\"number\" \n            nameAttr=\"salary\"\n            value={loanCalcData.monthlySalary}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, monthlySalary: null })\n              setLoanCalcData({ ...loanCalcData, monthlySalary: val })\n            }}\n            error={loanCalcDataErrors.monthlySalary && loanCalcDataErrors.monthlySalary}\n          />\n        </Col>\n        <Col>\n          <InputField \n            label=\"Pay Day\"\n            type=\"select\"\n            options={daysOfMonth}\n            nameAttr=\"payday\"\n            value={loanCalcData.payDay}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, payDay: null })\n              setLoanCalcData({ ...loanCalcData, payDay: val })\n            }}\n            error={loanCalcDataErrors.payDay && loanCalcDataErrors.payDay}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            label=\"Loan Amount\" \n            type=\"number\" \n            nameAttr=\"loanAmt\"\n            value={loanCalcData.loanAmount}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, loanAmount: null })\n              setLoanCalcData({ ...loanCalcData, loanAmount: val })\n            }}\n            error={loanCalcDataErrors.loanAmount && loanCalcDataErrors.loanAmount}\n          />\n          <p className={styles.inputHint}>\n            <span>min amt:</span> #50,000; <span>max amt:</span> #500,000\n          </p>\n        </Col>\n        <Col>\n          <InputField \n            label=\"Installment Period\"\n            type=\"select\"\n            options={['1 Month', '2 Months', '3 Months']}\n            nameAttr=\"installmentCycle\"\n            value={loanCalcData.installmentPeriod}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, installmentPeriod: null })\n              setLoanCalcData({ ...loanCalcData, installmentPeriod: val })\n            }}\n            error={loanCalcDataErrors.installmentPeriod && loanCalcDataErrors.installmentPeriod}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            label=\"Loan Purpose\"\n            type=\"select\"\n            options={[\n              'Debt Consolidation',\n              'Home Remodelling',\n              'Moving Costs',\n              'Emergency Expenses',\n              'Medical Bills',\n              'Education',\n              'Appliance Purchase',\n              'Vehicle Financing',\n              'Vacation Costs',\n              'Wedding Expenses',\n              'Others'\n            ]}\n            nameAttr=\"loanPurpose\"\n            value={loanCalcData.loanPurpose}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, loanPurpose: null })\n              setLoanCalcData({ ...loanCalcData, loanPurpose: val })\n            }}\n            error={loanCalcDataErrors.loanPurpose && loanCalcDataErrors.loanPurpose}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Estimated Monthly Payment\"\n            nameAttr=\"monthlyPayment\"\n            value={loanCalcData.estimatedMonthlyPayment}\n            disable={true}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, estimatedMonthlyPayment: null })\n              setLoanCalcData({ ...loanCalcData, estimatedMonthlyPayment: val })\n            }}\n            error={loanCalcDataErrors.estimatedMonthlyPayment && loanCalcDataErrors.estimatedMonthlyPayment}\n          />\n          <p className={styles.inputHint}>\n            <span>Eventual repayment amount may differ after risk assessment.</span>\n          </p>\n          { limitError && <p className={styles.limitError}>{limitError}</p> }\n        </Col>\n      </Row>\n      <Button \n        className=\"mt-5\" \n        fullWidth \n        clicked={submitLoanCalcData} \n        bgColor=\"#741763\" \n        size=\"lg\" \n        color=\"#EBEBEB\"\n        disabled={loading}\n        loading={loading}\n      >\n        Continue\n      </Button>\n    </div>\n  )\n}\n\n\nexport default LoanCalculatorForm;","/home/tga/Desktop/gypsy-capital/src/components/BvnForm/BvnForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/FileUploadButton/FileUploadButton.js",[],"/home/tga/Desktop/gypsy-capital/src/hooks/usePagination.js",["316"],"import React, { useMemo } from 'react';\nimport { Pagination } from 'react-bootstrap';\n\n\nexport default (currentPage, postsPerPage, list, setPage, cssStyles) => {\n  const indexOfLastItem = useMemo(() => {\n    return currentPage * postsPerPage\n  }, [currentPage, postsPerPage]);\n\n  const indexOfFirstItem = useMemo(() => {\n    return indexOfLastItem - postsPerPage\n  }, [indexOfLastItem, postsPerPage]);\n\n  const currentList = useMemo(() => {\n    return list.slice(indexOfFirstItem, indexOfLastItem);\n  }, [indexOfFirstItem, indexOfLastItem, list]);\n\n  const goToPage = (event) => {\n    if(event.target.text) {\n      setPage(Number(event.target.text));\n    }\n  }\n\n  let items = [];\n\n  for (let i=1; i <= Math.ceil(list.length / postsPerPage); i++) {\n    items.push(\n      <Pagination.Item \n        className={cssStyles.active} \n        onClick={goToPage} \n        key={i} \n        active={i === currentPage}\n      >\n        {i}\n      </Pagination.Item>\n    )\n  }\n\n  const goToPrevPage = () => {\n    if(currentPage > 1) {\n      setPage(currentPage - 1);\n    }\n  }\n\n  const goToNextPage = () => {\n    if(currentPage < Math.ceil(list.length / postsPerPage)) {\n      setPage(currentPage + 1);\n    }\n  }\n\n  return { currentList, items, goToNextPage, goToPrevPage }\n}","/home/tga/Desktop/gypsy-capital/src/pages/ClientListPage/ClientListPage.jsx",["317","318"],"/home/tga/Desktop/gypsy-capital/src/context/UserContext.js",[],"/home/tga/Desktop/gypsy-capital/src/pages/SignUp/SignUp.jsx",["319","320","321"],"/home/tga/Desktop/gypsy-capital/src/pages/Profile/Profile.jsx",["322","323","324"],"import React, { useContext, useEffect } from 'react';\nimport styles from './Profile.module.scss';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport { clientRoutes } from '../../routes/sidebarRoutes';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport ProgressBar from '../../components/ProgressBar/ProgressBar';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { ToastContainer, toast } from 'react-toastify';\nimport PersonalForm from '../../components/PersonalForm/PersonalForm';\nimport BvnForm from '../../components/BvnForm/BvnForm';\nimport IdentityForm from '../../components/IdentityForm/IdentityForm';\nimport ProfileView from '../../components/ProfileView/ProfileView';\nimport { useRouteMatch, useLocation, Switch, Route, useHistory } from 'react-router-dom';\nimport { Spinner } from 'react-bootstrap';\n\n\nconst Loader = () => {\n  return <div className={styles.loadingStyle}><Spinner animation=\"grow\" /></div>\n}\n\n\nconst Profile = () => {\n\n  const { path } = useRouteMatch();\n  const location = useLocation();\n  const history = useHistory();\n  const setupStage = {\n    '/dashboard/profile/setup/bvn': 0,\n    '/dashboard/profile/setup/info': 1,\n    '/dashboard/profile/setup/identity': 2,\n    '/dashboard/profile/setup/success': 3\n  };\n\n  console.log(location.pathname);\n\n  const { \n    state: { error, userDetails }, \n    verifyBvn, \n    clearErrors,\n    getClientDetails,\n    updatePersonalInfo,\n    updateIdentityInfo\n  } = useContext(UserContext);\n  const { state: { user }, getActiveUser } = useContext(AuthContext);\n\n  useEffect(() => {\n    getClientDetails(user.user_id);\n  }, [])\n\n  useEffect(() => {\n    if(userDetails) {\n      const { bioData, identity, bank } = userDetails;\n      if(identity.identityType) {\n        history.replace('/dashboard/profile/user')\n      } else if(bank.accountName) {\n        history.replace('/dashboard/profile/setup/identity');\n      } else if(bioData.BVN) {\n        history.replace('/dashboard/profile/setup/info');\n      }\n    } else if(!userDetails) {\n      history.replace('/dashboard/profile/setup/bvn');\n    }\n  }, [userDetails])\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearErrors();\n    }\n  }, [error])\n\n\n  const submitBvn = async(bvn) => {\n    await verifyBvn(user.user_id, bvn, getActiveUser);\n  }\n\n\n  const submitPersonalInfo = async(biodata, residence, kin, bank) => {\n    console.log(biodata, residence, bank, kin);\n    const { altPhone, gender } = biodata;\n    const { city, state, street } = residence;\n    const { accountName, accountNumber, accountType, bankName } = bank;\n    const { address, email, fullName, phoneNo, relationship } = kin;\n\n    const data = {\n      alternativePhoneNumber: altPhone,\n      gender,\n      residence_street: street,\n      residence_city: city,\n      residence_state: state,\n      nextOfKin_fullName: fullName,\n      nextOfKin_relationship: relationship,\n      nextOfKin_email: email,\n      nextOfKin_phoneNumber: phoneNo,\n      nextOfKin_residentialAddress: address,\n      bank_name: bankName,\n      bank_accountType: accountType,\n      bank_accountNumber: accountNumber,\n      bank_accountName: accountName,\n      identity_type: null,\n      identity_imageUrl: null,\n      identity_profilePhoto: null\n    }\n\n    await updatePersonalInfo(user.user_id, data)\n  }\n\n  \n  const submitIdentityInfo = async(idRef, passportRef, idType) => {\n    \n    console.log(idRef, passportRef, idType);\n    const data = new FormData();\n    data.append('identification', idRef);\n    data.append('passport', passportRef);\n    data.append('identity_type', idType)\n    await updateIdentityInfo(user.user_id, data);\n  }\n  \n\n  const CompleteStage = () => {\n    useEffect(() => {\n      setTimeout(() => {\n        history.push('/dashboard/profile/user')\n      }, 3000)\n    }, [])\n\n    return (\n      <div className={styles.stageComplete}>\n        <FaCheckCircle size=\"3.5em\" color=\"#741763\" />\n        <h2>Congratulations!</h2>\n        <p>Account setup completed.</p>\n        <p>Enjoy our amazing loan offer</p>\n      </div>\n    )\n  }\n\n  return(\n    <Dashboard sidebarRoutes={clientRoutes} location={location}>\n      <div className={styles.container}>\n        <ToastContainer position=\"top-center\" />\n          <Switch>\n            <Route path={`${path}/setup`}>\n              <h1>Account Setup</h1>\n              <p className={styles.leadText}>Fill the field to complete your profile</p>\n              <ProgressBar stage={setupStage[location.pathname]} className={styles.profileProgress} />\n              <Switch>\n                <Route path={`${path}/setup/bvn`}>\n                  <BvnForm submit={submitBvn} />\n                </Route>\n                <Route path={`${path}/setup/identity`}>\n                  <IdentityForm submit={submitIdentityInfo} />\n                </Route>\n                <Route path={`${path}/setup/info`}>\n                  <PersonalForm submit={submitPersonalInfo} />\n                </Route>\n                <Route path={`${path}/setup/success`}>\n                  <CompleteStage />\n                </Route>\n              </Switch>\n            </Route>\n            <Route path={`${path}/user`}>\n              { userDetails  ? <div>\n                <h2>Profile</h2>\n                <ProfileView />\n              </div> : <Loader /> } \n            </Route> \n          </Switch>\n      </div>\n    </Dashboard>\n  );\n}\n\n\nexport default Profile;","/home/tga/Desktop/gypsy-capital/src/pages/AgentOverview/AgentOverview.jsx",["325","326"],"/home/tga/Desktop/gypsy-capital/src/pages/Faqs/Faqs.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/HomePage/HomePage.jsx",["327"],"/home/tga/Desktop/gypsy-capital/src/pages/ClientDetails/ClientDetails.jsx",["328","329","330","331","332","333","334","335"],"/home/tga/Desktop/gypsy-capital/src/components/Button/Button.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/ProgressBar/ProgressBar.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/StatBox/StatBox.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/LoanContactForm/LoanContactForm.jsx",["336"],"import React, { useState, useRef, useEffect, useContext } from 'react';\nimport styles from './LoanContactForm.module.scss';\nimport { Row, Col } from 'react-bootstrap';\nimport InputField from '../InputField/InputField';\nimport FileUploadButton from '../FileUploadButton/FileUploadButton';\nimport { FaCloudUploadAlt } from 'react-icons/fa';\nimport Button from '../Button/Button';\nimport { validateInput } from '../../utils/validateInput';\nimport { nigeriaStates } from '../../utils/nigeriaStates';\nimport { lgaList } from '../../utils/mappedLgas';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Context as LoanContext } from '../../context/LoanContext';\nimport BeatLoader from 'react-spinners/BeatLoader';\nimport _ from 'lodash';\n\n\nconst LoanContactForm = ({ submitContact }) => {\n\n  // const { state: { user } } = useContext(AuthContext);\n  const { state: { loading } } = useContext(LoanContext);\n\n  const [contactAddress, setContactAddress] = useState({\n    streetAddress: \"\",\n    city: \"\",\n    state: \"\",\n    lga: \"\",\n    residentialStatus: \"\"\n  });\n\n  const [contactErrors, setContactErrors] = useState({\n    streetAddress: null,\n    city: null,\n    state: null,\n    lga: null,\n    residentialStatus: null\n  })\n\n  const [lgaOptions, setLgaOptions] = useState([]);\n  const [lgaLoading, setLgaLoading] = useState(false);\n\n  useEffect(() => {\n    if(contactAddress.state.length > 0) {\n      setLgaOptions(lgaList[_.capitalize(contactAddress.state)])\n    }\n  }, [contactAddress.state])\n\n\n  const proofofAddressRef = useRef(null);\n\n  const updateContactInfo = () => {\n    if(proofofAddressRef.current.files.length > 0) {\n      console.log(proofofAddressRef);\n      const proofofAddress = proofofAddressRef.current.files[0];\n      console.log(proofofAddress);\n      const validated = validateInput(contactAddress, setContactErrors)\n      console.log(validated);\n      if(validated) {\n        const data = new FormData();\n        data.append(\"city\", contactAddress.city);\n        data.append(\"street\", contactAddress.streetAddress);\n        data.append(\"state\", contactAddress.state);\n        data.append(\"local_government\", contactAddress.lga);\n        data.append(\"residential_status\", contactAddress.residentialStatus);\n        data.append(\"image\", proofofAddress);\n        submitContact(data);\n        // addAddressForLoan(data, user.user_id);\n      }\n    } else {\n      toast.error(\"You need to upload a proof of address document to proceed\");\n    }\n  }\n\n  return (\n    <div className={styles.contactForm}>\n      <ToastContainer position=\"top-center\" />\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            label=\"Address\"\n            nameAttr=\"address\"\n            type=\"text\"\n            value={contactAddress.streetAddress}\n            changed={(val) => {\n              setContactErrors({ ...contactErrors, streetAddress: null })\n              setContactAddress({ ...contactAddress, streetAddress: val })\n            }}\n            error={contactErrors.streetAddress && contactErrors.streetAddress}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            nameAttr=\"city\"\n            label=\"City\"\n            value={contactAddress.city}\n            changed={(val) => {\n              setContactErrors({ ...contactErrors, city: null })\n              setContactAddress({ ...contactAddress, city: val })\n            }}\n            error={contactErrors.city && contactErrors.city}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"select\"\n            nameAttr=\"state\"\n            label=\"State\"\n            options={nigeriaStates}\n            value={contactAddress.state}\n            changed={(val) => {\n              setContactErrors({ ...contactErrors, state: null })\n              setContactAddress({ ...contactAddress, state: val })\n            }}\n            error={contactErrors.state && contactErrors.state}\n          />\n        </Col>\n        <Col>\n          { !lgaLoading ? <InputField \n            type=\"select\"\n            nameAttr=\"localGovt\"\n            label=\"Local Govt. Area\"\n            options={lgaOptions}\n            value={contactAddress.lga}\n            changed={(val) => {\n              setContactErrors({ ...contactErrors, lga: null })\n              setContactAddress({ ...contactAddress, lga: val })\n            }}\n            error={contactErrors.lga && contactErrors.lga}\n          /> :\n            <div className={styles.loaderWrapper}>\n              <BeatLoader color=\"#741763\" size={10} />\n            </div>\n          }\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputField \n            type=\"select\"\n            label=\"Residential Status\"\n            nameAttr=\"residentialStatus\"\n            options={['Renting', 'Owned']}\n            value={contactAddress.residentialStatus}\n            changed={(val) => {\n              setContactErrors({ ...contactErrors, residentialStatus: null })\n              setContactAddress({ ...contactAddress, residentialStatus: val })\n            }}\n            error={contactErrors.residentialStatus && contactErrors.residentialStatus}\n          />\n        </Col>\n        <Col>\n          <FileUploadButton \n            label=\"Choose File\" \n            icon={<FaCloudUploadAlt className=\"ml-3\" size=\"1.2em\" />}\n            id=\"address-upload\" \n            fileRef={proofofAddressRef}\n            visibleLabel=\"Proof of Address\"\n            fullwidth\n          />\n          <p className={styles.inputHint}>Note: Proof of address could be your recent utility bill or any other valid document containing your residential address.</p>\n        </Col>\n      </Row>\n      <Button \n        className=\"mt-4\" \n        fullWidth \n        clicked={updateContactInfo} \n        bgColor=\"#741763\" \n        size=\"lg\" \n        color=\"#EBEBEB\"\n        disabled={loading}\n        loading={loading}\n      >\n        Continue\n      </Button>\n    </div>\n  )\n}\n\n\nexport default LoanContactForm;","/home/tga/Desktop/gypsy-capital/src/components/IdentityForm/IdentityForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/AccountSetupModal/AccountSetupModal.jsx",["337","338","339","340","341","342"],"import React, { useContext, useEffect, useMemo, useState, useRef } from 'react';\nimport styles from './AccountSetupModal.module.scss';\nimport { Modal, Row, Col } from 'react-bootstrap';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport { validateInput } from '../../utils/validateInput';\nimport { nigeriaStates } from '../../utils/nigeriaStates';\nimport { Context as BankContext } from '../../context/BankCotext';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport FileUploadButton from '../FileUploadButton/FileUploadButton';\nimport { FaCloudUploadAlt } from 'react-icons/fa';\nimport { toast, ToastContainer } from 'react-toastify';\nimport Loader from '../Loader/Loader';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport BeatLoader from 'react-spinners/BeatLoader';\n\n\nexport const VerifyBvn = ({ submit }) => {\n\n  const [bvn, setBvn] = useState('');\n  const { state: { loading } } = useContext(UserContext);\n\n  const submitBvn = () => {\n    if(bvn) {\n      submit(bvn);\n    }\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Verify BVN</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row>\n            <Col>\n              <InputField \n                type=\"text\"\n                nameAttr=\"otp\"\n                label=\"Enter Client's BVN\"\n                value={bvn}\n                changed={(val) => {\n                  setBvn(val)\n                }}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button\n          fullWidth\n          bgColor=\"#741763\" \n          size=\"lg\" \n          clicked={submitBvn}\n          color=\"#EBEBEB\"\n          loading={loading}\n          disabled={loading}\n        >\n          Verify\n        </Button>\n        <p className={styles.hint}>To get your BVN, Dial *565*0#</p>\n      </Modal.Footer>\n    </>\n  )\n}\n\n\nexport const PersonalInfo = ({ submit }) => {\n\n  const { state: { userDetails }, getClientDetails } = useContext(UserContext);\n  const { state: { currentAddedUser} } = useContext(AuthContext);\n\n\n  const [biodata, setBiodata] = useState({\n    fullName: '',\n    dateOfBirth: '',\n    bvnPhoneNo: '',\n    email: '',\n    phoneNo: '',\n    altPhone: '',\n    gender: ''\n  });\n\n  const [biodataErrors, setBiodataErrors] = useState({\n    fullName: null,\n    dateOfBirth: null,\n    bvnPhoneNo: null,\n    email: null,\n    phoneNo: null,\n    altPhone: null,\n    gender: null\n  });\n\n\n  useEffect(() => {\n    const { user_id } = currentAddedUser;\n    getClientDetails(user_id);\n  }, []);\n\n  useEffect(() => {\n    if(userDetails) {\n      const { bioData } = userDetails;\n      setBiodata({ ...biodata, \n        fullName: `${bioData.firstName} ${bioData.lastName}`,\n        email: bioData.email,\n        phoneNo: bioData.phoneNumber.replace('234', '0'),\n        dateOfBirth: bioData.DOB,\n        bvnPhoneNo: bioData.bvnPhoneNumber\n      })\n    }\n  }, [currentAddedUser, userDetails]);\n\n\n  const addPersonalInfo = () => {\n    const validated = validateInput(biodata, setBiodataErrors);\n    if(validated) {\n      submit(biodata);\n    }\n  }\n  if(!userDetails) {\n    return <Loader />\n  }\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Personal Info</h2>\n        </Modal.Title>\n        {/* <p className={styles.subtitle}>Personal Info</p> */}\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Full name\"\n                type=\"text\"\n                nameAttr=\"fullname\"\n                value={biodata.fullName}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, fullName: null })\n                  setBiodata({ ...biodata, fullName: val})\n                }}\n                error={biodataErrors.fullName && biodataErrors.fullName}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Date of Birth\"\n                type=\"text\"\n                nameAttr=\"dob\"\n                value={biodata.dateOfBirth}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, dateOfBirth: null })\n                  setBiodata({ ...biodata, dateOfBirth: val})\n                }}\n                error={biodataErrors.dateOfBirth && biodataErrors.dateOfBirth}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"BVN-linked Phone Number\"\n                type=\"text\"\n                nameAttr=\"bvnPhoneNo\"\n                value={biodata.bvnPhoneNo}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, bvnPhoneNo: null })\n                  setBiodata({ ...biodata, bvnPhoneNo: val})\n                }}\n                error={biodataErrors.bvnPhoneNo && biodataErrors.bvnPhoneNo}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Email\"\n                type=\"email\"\n                nameAttr=\"email\"\n                value={biodata.email}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, email: null })\n                  setBiodata({ ...biodata, email: val})\n                }}\n                error={biodataErrors.email && biodataErrors.email}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Phone Number\"\n                type=\"text\"\n                nameAttr=\"PhoneNo\"\n                value={biodata.phoneNo}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, phoneNo: null })\n                  setBiodata({ ...biodata, phoneNo: val})\n                }}\n                error={biodataErrors.phoneNo && biodataErrors.phoneNo}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Alternative Phone Number\"\n                type=\"text\"\n                nameAttr=\"altPhoneNo\"\n                value={biodata.altPhone}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, altPhone: null })\n                  setBiodata({ ...biodata, altPhone: val})\n                }}\n                error={biodataErrors.altPhone && biodataErrors.altPhone}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <InputField \n                label=\"Gender\"\n                type=\"select\"\n                options={['Female', 'Male', 'Other']}\n                nameAttr=\"gender\"\n                value={biodata.gender}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, gender: null })\n                  setBiodata({ ...biodata, gender: val})\n                }}\n                error={biodataErrors.gender && biodataErrors.gender}\n              />\n            </Col>\n          </Row>\n          <Modal.Footer>\n            <Button \n              className=\"mt-4\" \n              clicked={addPersonalInfo} \n              fullWidth \n              bgColor=\"#741763\" \n              size=\"lg\" \n              color=\"#EBEBEB\"\n            >\n              Save & Continue\n            </Button>\n          </Modal.Footer>\n        </div>\n      </Modal.Body>\n    </>\n  )\n}\n\n\nexport const Residence = ({ submit }) => {\n\n  const [residentialInfo, setResidentialInfo] = useState({\n    street: '',\n    city: '',\n    state: ''\n  });\n\n  const [residentialErrors, setResidentialErrors] = useState({\n    street: null,\n    city: null,\n    state: null\n  });\n\n  const addResidence = () => {\n    const validated = validateInput(residentialInfo, setResidentialErrors);\n    if(validated) {\n      submit(residentialInfo);\n    }\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Residential Address</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Street\"\n                type=\"text\"\n                nameAttr=\"residentStreet\"\n                value={residentialInfo.street}\n                changed={(val) => {\n                  setResidentialErrors({ ...residentialErrors, street: null })\n                  setResidentialInfo({ ...residentialInfo, street: val})\n                }}\n                error={residentialErrors.street && residentialErrors.street}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"City\"\n                type=\"text\"\n                nameAttr=\"city\"\n                value={residentialInfo.city}\n                changed={(val) => {\n                  setResidentialErrors({ ...residentialErrors, city: null })\n                  setResidentialInfo({ ...residentialInfo, city: val})\n                }}\n                error={residentialErrors.city && residentialErrors.city}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"State\"\n                type=\"select\"\n                options={nigeriaStates}\n                nameAttr=\"state\"\n                value={residentialInfo.state}\n                changed={(val) => {\n                  setResidentialErrors({ ...residentialErrors, state: null })\n                  setResidentialInfo({ ...residentialInfo, state: val})\n                }}\n                error={residentialErrors.state && residentialErrors.state}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addResidence} \n          fullWidth \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\n\nexport const NextOfKin = ({ submit }) => {\n\n  const [kinInfo, setKinInfo] = useState({\n    fullName: '',\n    relationship: '',\n    email: '',\n    phoneNo: '',\n    address: ''\n  });\n\n  const [kinErrors, setKinErrors] = useState({\n    fullName: null,\n    relationship: null,\n    email: null,\n    phoneNo: null,\n    address: null\n  });\n\n  const addNextOfKin = () => {\n    const validated = validateInput(kinInfo, setKinErrors);\n    if(validated) {\n      submit(kinInfo);\n    }\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Next of Kin Info</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Full name\"\n                type=\"text\"\n                nameAttr=\"kinFullname\"\n                value={kinInfo.fullName}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, fullName: null })\n                  setKinInfo({ ...kinInfo, fullName: val})\n                }}\n                error={kinErrors.fullName && kinErrors.fullName}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Relationship\"\n                type=\"text\"\n                nameAttr=\"kinRelationship\"\n                value={kinInfo.relationship}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, relationship: null })\n                  setKinInfo({ ...kinInfo, relationship: val})\n                }}\n                error={kinErrors.relationship && kinErrors.relationship}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Email Address\"\n                type=\"email\"\n                nameAttr=\"kinEmail\"\n                value={kinInfo.email}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, email: null })\n                  setKinInfo({ ...kinInfo, email: val})\n                }}\n                error={kinErrors.email && kinErrors.email}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Phone Number\"\n                type=\"text\"\n                nameAttr=\"kinPhone\"\n                value={kinInfo.phoneNo}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, phoneNo: null })\n                  setKinInfo({ ...kinInfo, phoneNo: val})\n                }}\n                error={kinErrors.phoneNo && kinErrors.phoneNo}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Residential Address\"\n                type=\"text\"\n                nameAttr=\"kinAddress\"\n                placeholder=\"Street address to the nearest bus stop\"\n                value={kinInfo.address}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, address: null })\n                  setKinInfo({ ...kinInfo, address: val})\n                }}  \n                error={kinErrors.address && kinErrors.address}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addNextOfKin} \n          fullWidth \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\nexport const BankInfo = ({ submit }) => {\n\n  const { state: { loading } } = useContext(UserContext);\n\n  const [bankInfo, setBankInfo] = useState({\n    bankName: '',\n    accountType: '',\n    accountNumber: '',\n    accountName: ''\n  });\n\n  const [bankInfoErrors, setBankInfoErrors] = useState({\n    bankName: null,\n    accountType: null,\n    accountNumber: null,\n    accountName: null\n  });\n\n  const { \n    state: { bankList, userBankDetails, bankLoading }, \n    getBankList,\n    verifyBankInfo\n  } = useContext(BankContext);\n\n  useEffect(() => {\n      getBankList();\n  }, []);\n\n  const bankNames = useMemo(() => {\n    return bankList ? \n      bankList.map((bank) => bank.name) :\n      []\n  }, [bankList]);\n\n  useEffect(() => {\n    if(bankInfo.accountNumber.length === 10 && bankInfo.bankName) {\n      const bank = bankList.find(bank => bank.name.toLowerCase() === bankInfo.bankName);\n      const bankCode = bank.code;\n      console.log(bankCode)\n      verifyBankInfo(bankInfo.accountNumber, bankCode)\n    }\n  }, [bankInfo.accountNumber, bankInfo.bankName])\n\n\n  useEffect(() => {\n    console.log(userBankDetails);\n    if(userBankDetails) {\n      setBankInfo({ ...bankInfo, accountName: userBankDetails.account_name })\n    }\n  }, [userBankDetails]);\n\n  const addBankInfo = () => {\n    const validated = validateInput(bankInfo, setBankInfoErrors);\n    if(validated) {\n      submit(bankInfo);\n    }\n  }\n\n  return(\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Bank Info</h2>\n          <p className={styles.subtitle}>Add a bank account where we can send investment proceeds or loan requests to.</p>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"select\"\n                label=\"Bank\"\n                options={bankNames}\n                nameAttr=\"bank\"\n                value={bankInfo.bankName}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, bankName: null })\n                  setBankInfo({ ...bankInfo, bankName: val})\n                }}\n                error={bankInfoErrors.bankName && bankInfoErrors.bankName}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Account Type\"\n                type=\"select\"\n                options={[\"Savings\", \"Current\"]}\n                nameAttr=\"acountType\"\n                value={bankInfo.accountType}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, accountType: null })\n                  setBankInfo({ ...bankInfo, accountType: val})\n                }}\n                error={bankInfoErrors.accountType && bankInfoErrors.accountType}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"text\"\n                label=\"Account Number\"\n                nameAttr=\"accountNo\"\n                value={bankInfo.accountNumber}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, accountNumber: null })\n                  setBankInfo({ ...bankInfo, accountNumber: val})\n                }}\n                error={bankInfoErrors.accountNumber && bankInfoErrors.accountNumber}\n              />\n            </Col>\n            <Col>\n              { !bankLoading ? <InputField \n                label=\"Account Name\"\n                type=\"text\"\n                nameAttr=\"accountName\"\n                value={bankInfo.accountName}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, accountName: null })\n                  setBankInfo({ ...bankInfo, accountName: val})\n                }}\n                error={bankInfoErrors.accountName && bankInfoErrors.accountName}\n              /> : \n              <div className={styles.loaderWrapper}>\n                <BeatLoader color=\"#741763\" size={10} />\n              </div>\n              }\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addBankInfo} \n          fullWidth \n          loading={loading}\n          disabled={loading}\n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\nexport const IdentityForm = ({ submit }) => {\n\n  const { state: { loading } } = useContext(UserContext);\n  const idFileRef = useRef();\n  const passportFileRef= useRef();\n\n  const [idType, setIdType] = useState('');\n\n  const addIdentityInfo = () => {\n    if(idFileRef.current.files.length > 0) {\n      if(passportFileRef.current.files.length > 0) {\n        if(idType) {\n          const idFile = idFileRef.current.files[0];\n          const passportFile = passportFileRef.current.files[0];\n          submit(idFile, passportFile, idType);\n        }\n      } else {\n        toast.error(\"Please upload a passport photograph of yourself\")\n      }\n    } else {\n      toast.error(\"Please upload a verified identification card\")\n    }\n  }\n\n  return (\n    <>\n      <ToastContainer position=\"top-center\" />\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Identity</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <div className={styles.validId}>\n            <p className={styles.validID}>Upload a valid government issued Identification</p>\n            <InputField \n              type=\"select\"\n              options={['International Passport', \"Driver's License\", 'Voters Card', 'National Identity Card']}\n              nameAttr=\"identityType\"\n              value={idType}\n              changed={(val) => setIdType(val)}\n            />\n            <FileUploadButton \n              label=\"Choose File\" \n              icon={<FaCloudUploadAlt className=\"ml-3\" size=\"1.1em\" />}\n              id=\"id-upload\" \n              className=\"mt-3\"\n              fileRef={idFileRef}\n              fullwidth\n            />\n          </div>\n          <div className={styles.passportVerify}>\n            <p className={styles.passportImg}>Please upload a clear and resent passport photograph.</p>\n            <FileUploadButton \n              label=\"Choose File\" \n              icon={<FaCloudUploadAlt className=\"ml-3\" size=\"1.1em\" />}\n              id=\"passport-upload\"  \n              fileRef={passportFileRef}\n              fullwidth\n            />\n          </div>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addIdentityInfo} \n          fullWidth \n          loading={loading}\n          disabled={loading}\n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\n\nexport const OnboardSuccess = ({ close }) => {\n\n  useEffect(() => {\n    setTimeout(() => {\n      close();\n    }, 3000);\n  }, []);\n\n  return (\n    <>\n      <Modal.Body>\n        <div className={styles.onboard}>\n          <FaCheckCircle size=\"4em\" color=\"#741763\" />\n          <h4>User successfully onboarded.</h4>\n          <Button\n            className=\"mt-4\" \n            clicked={close} \n            bgColor=\"#741763\" \n            size=\"sm\" \n            color=\"#EBEBEB\"\n          >\n            Continue\n          </Button>\n        </div>\n      </Modal.Body>\n    </>\n  )\n}","/home/tga/Desktop/gypsy-capital/src/App.js",[],"/home/tga/Desktop/gypsy-capital/src/utils/history.js",[],"/home/tga/Desktop/gypsy-capital/src/routes/protectedroute/ProtectedRoute.js",["343"],"import React, { useContext } from 'react';\nimport { Route, Redirect, useLocation } from 'react-router-dom';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport pageUrl from '../pageUrl';\n\n\nconst ProtectedRoute = ({component: Component, ...rest}) => {\n\n  const { state: { loggedIn, user } } = useContext(AuthContext);\n  const location = useLocation()\n\n  return (\n    <Route {...rest}>\n      { loggedIn ? \n          <Component /> :\n          <Redirect to={{ pathname: pageUrl.SIGNIN_PAGE, state: { from: location } }} />\n      }\n    </Route>\n  )\n}\n\n\nexport default ProtectedRoute;","/home/tga/Desktop/gypsy-capital/src/context/createDataContext.js",["344"],"/home/tga/Desktop/gypsy-capital/src/pages/AboutUs/AboutUs.jsx",["345","346","347","348"],"/home/tga/Desktop/gypsy-capital/src/pages/ForgotPassword/ForgotPassword.jsx",["349"],"import React, { useContext, useEffect, useState } from 'react';\nimport styles from './ForgotPassword.module.scss';\nimport Logo from '../../assets/logo.png';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { ToastContainer, toast  } from 'react-toastify';\n\n\nconst ForgotPassword = () => {\n\n  const [email, setEmail] = useState('');\n  const { state: { loading, error }, resetPassword, clearErrors } = useContext(UserContext);\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearErrors();\n    }\n  }, [error])\n\n  const initiatePasswordReset = () => {\n    resetPassword(email);\n  }\n\n  return (\n    <div className={styles.container}>\n      <ToastContainer position=\"top-center\" />\n      <img src={Logo} alt=\"Gypsy Logo\" />\n      <h1>Forgot Password?</h1>\n      <p>Enter the email address associated with your account</p>\n      <div className={styles.formBox}>\n        <InputField \n          type=\"email\"\n          label=\"Email\"\n          nameAttr=\"email\"\n          value={email}\n          changed={(val) => setEmail(val)}\n        />\n        <Button\n          fullWidth \n          clicked={initiatePasswordReset}\n          className=\"mt-4\" \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n          loading={loading}\n          disabled={loading}\n        >\n          Reset Password\n        </Button>\n      </div>\n    </div>\n  )\n}\n\n\nexport default ForgotPassword;","/home/tga/Desktop/gypsy-capital/src/pages/LoanList/LoanList.jsx",["350"],"import React, { useState, useMemo } from 'react';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport styles from './LoanList.module.scss';\nimport { useLocation, Link } from 'react-router-dom';\nimport { routes } from '../../routes/sidebarRoutes';\nimport InputField from '../../components/InputField/InputField';\nimport moment from 'moment';\nimport { Table, Pagination } from 'react-bootstrap';\nimport { loanList } from '../../utils/dummyData';\nimport usePagination from '../../hooks/usePagination';\n\n\nconst LoanList = () => {\n\n  const location = useLocation();\n  const salesRoutes = routes[1];\n  const [filterInput, setFilterInput] = useState('');\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(5);\n\n   const {  \n     currentList,\n     items,\n     goToPrevPage,\n     goToNextPage\n   } = usePagination(currentPage, postsPerPage, loanList, setCurrentPage, styles);\n\n  return (\n    <Dashboard sidebarRoutes={salesRoutes} location={location}>\n      <div className={styles.welcomeGroup}>\n        <div>\n          <h2>Loans</h2>\n          <p className={styles.currentDate}>Today is {moment().format('dddd Do[,] MMMM')}.</p>\n        </div>\n      </div>\n      <div className={styles.loansTable}>\n        <div className={styles.filterInput}>\n          <p>Filter</p>\n          <div className={styles.inputWrapper}>\n            <InputField \n              type=\"select\"\n              options={['Active Loans', 'Pending Loans', 'Declined Loans', 'Expired Loans']}\n              nameAttr='filterInput'\n              value={filterInput}\n              changed={(val) => setFilterInput(val)}\n            />\n          </div>\n        </div>\n        <div className={styles.cardTable}>\n          <Table>\n            <thead>\n              <tr>\n                <th>Loan ID</th>\n                <th>Monthly Repayment</th>\n                <th>Tenure</th>\n                <th>Status</th>\n                <th>Repayment Source</th>\n                <th>Loan Amount</th>\n                <th>Balance</th>\n              </tr>\n            </thead>\n            <tbody>\n              { currentList.map((loan, idx) => (\n                <tr>\n                  <td className={styles.loanId}>\n                    <Link to=\"/sales-agent/loan/general\">\n                      {loan.loanId}\n                    </Link>\n                  </td>\n                  <td>{loan.monthlyRepayment}</td>\n                  <td>{loan.tenure}</td>\n                  <td>{loan.status}</td>\n                  <td>{loan.repaymentSource}</td>\n                  <td>{loan.loanAmt}</td>\n                  <td>{loan.balance}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <div className={styles.tableFooter}>\n            <div className={styles.rowsInput}>\n              <p>Rows per page: </p>\n              <select onChange={(e) => setPostsPerPage(Number(e.currentTarget.value))}>\n                <option value={5} selected>5</option>\n                <option value={10}>10</option>\n                <option value={15}>15</option>\n                <option value={20}>20</option>\n                <option value={10}>25</option>\n                <option value={30}>30</option>\n              </select>\n            </div>\n            <Pagination className={styles.pagination}>\n              <Pagination.Prev onClick={goToPrevPage}/>\n              {items}\n              <Pagination.Next onClick={goToNextPage} />\n            </Pagination>\n          </div>\n        </div>\n      </div>\n    </Dashboard>\n  )\n}\n\n\nexport default LoanList;","/home/tga/Desktop/gypsy-capital/src/components/PersonalForm/PersonalForm.jsx",["351","352","353","354"],"import React, { useState, useContext, useEffect, useMemo } from 'react';\nimport styles from './PersonalForm.module.scss';\nimport { Row, Col, Spinner } from 'react-bootstrap';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport InputField from '../InputField/InputField';\nimport Button from '../Button/Button';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { nigeriaStates } from '../../utils/nigeriaStates';\nimport { Context as BankContext } from '../../context/BankCotext';\nimport { validateInput } from '../../utils/validateInput';\nimport BeatLoader from 'react-spinners/BeatLoader';\n\n\nconst PersonalForm = ({ submit }) => {\n\n  const { \n    state: { bankList, userBankDetails, bankLoading }, \n    getBankList, \n    verifyBankInfo,\n  } = useContext(BankContext);\n  const { state: { user } } = useContext(AuthContext);\n  const {\n    state: { userDetails, loading },\n    getClientDetails\n  } = useContext(UserContext);\n\n  useEffect(() => {\n    (async() => {\n      await getClientDetails(user.user_id);\n      await getBankList();\n    })()\n  }, [])\n \n  const bankNames = useMemo(() => {\n    return bankList ? \n      bankList.map((bank) => bank.name) :\n      []\n  }, [bankList])\n\n\n  const [biodata, setBiodata] = useState({\n    fullName: '',\n    dateOfBirth: '',\n    bvnPhoneNo: '',\n    email: '',\n    phoneNo: '',\n    altPhone: '',\n    gender: ''\n  });\n  const [biodataErrors, setBiodataErrors] = useState({\n    fullName: null,\n    dateOfBirth: null,\n    bvnPhoneNo: null,\n    email: null,\n    phoneNo: null,\n    altPhone: null,\n    gender: null\n  });\n  const [residentialInfo, setResidentialInfo] = useState({\n    street: '',\n    city: '',\n    state: ''\n  });\n  const [residentialErrors, setResidentialErrors] = useState({\n    street: null,\n    city: null,\n    state: null\n  })\n  const [kinInfo, setKinInfo] = useState({\n    fullName: '',\n    relationship: '',\n    email: '',\n    phoneNo: '',\n    address: ''\n  });\n  const [kinErrors, setKinErrors] = useState({\n    fullName: null,\n    relationship: null,\n    email: null,\n    phoneNo: null,\n    address: null\n  });\n  const [bankInfo, setBankInfo] = useState({\n    bankName: '',\n    accountType: '',\n    accountNumber: '',\n    accountName: ''\n  });\n  const [bankInfoErrors, setBankInfoErrors] = useState({\n    bankName: null,\n    accountType: null,\n    accountNumber: null,\n    accountName: null\n  })\n\n  useEffect(() => {\n    if(bankInfo.accountNumber.length === 10 && bankInfo.bankName) {\n      const bank = bankList.find(bank => bank.name.toLowerCase() === bankInfo.bankName);\n      const bankCode = bank.code;\n      console.log(bankCode)\n      verifyBankInfo(bankInfo.accountNumber, bankCode)\n    }\n  }, [bankInfo.accountNumber, bankInfo.bankName])\n\n\n  useEffect(() => {\n    console.log(userBankDetails);\n    if(userBankDetails) {\n      setBankInfo({ ...bankInfo, accountName: userBankDetails.account_name })\n    }\n  }, [userBankDetails]);\n\n\n  const handleSubmit = () => {\n    const validatedBiodata = validateInput(biodata, setBiodataErrors);\n    const validatedResidence = validateInput(residentialInfo, setResidentialErrors);\n    const validatedKinInfo = validateInput(kinInfo, setKinErrors)\n    const validatedBankInfo = validateInput(bankInfo, setBankInfoErrors)\n    if(validatedBiodata && validatedResidence && validatedKinInfo && validatedBankInfo) {\n      submit(biodata, residentialInfo, kinInfo, bankInfo)\n    }\n  }\n\n\n  useEffect(() => {\n    if(user && userDetails) {\n      const { bioData } = userDetails;\n      setBiodata({ ...biodata, \n        fullName: `${user.firstName} ${user.lastName}`,\n        email: user.email,\n        phoneNo: user.phoneNumber.replace('234', '0'),\n        dateOfBirth: bioData.DOB,\n        bvnPhoneNo: bioData.bvnPhoneNumber\n      })\n    }\n  }, [user, userDetails])\n\n  if(!userDetails) {\n    return <div className={styles.loadingStyle}><Spinner animation=\"grow\" /></div>\n  }\n\n  return (\n    <div className={styles.personalInfo}>\n      <div className={styles.biodata}>\n        <h3>Biodata Information</h3>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"Full name\"\n              type=\"text\"\n              nameAttr=\"fullname\"\n              value={biodata.fullName}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, fullName: null })\n                setBiodata({ ...biodata, fullName: val})\n              }}\n              error={biodataErrors.fullName && biodataErrors.fullName}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Date of Birth\"\n              type=\"text\"\n              nameAttr=\"dob\"\n              value={biodata.dateOfBirth}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, dateOfBirth: null })\n                setBiodata({ ...biodata, dateOfBirth: val})\n              }}\n              error={biodataErrors.dateOfBirth && biodataErrors.dateOfBirth}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"BVN-linked Phone Number\"\n              type=\"text\"\n              nameAttr=\"bvnPhoneNo\"\n              value={biodata.bvnPhoneNo}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, bvnPhoneNo: null })\n                setBiodata({ ...biodata, bvnPhoneNo: val})\n              }}\n              error={biodataErrors.bvnPhoneNo && biodataErrors.bvnPhoneNo}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Email\"\n              type=\"email\"\n              nameAttr=\"email\"\n              value={biodata.email}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, email: null })\n                setBiodata({ ...biodata, email: val})\n              }}\n              error={biodataErrors.email && biodataErrors.email}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"Phone Number\"\n              type=\"text\"\n              nameAttr=\"PhoneNo\"\n              value={biodata.phoneNo}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, phoneNo: null })\n                setBiodata({ ...biodata, phoneNo: val})\n              }}\n              error={biodataErrors.phoneNo && biodataErrors.phoneNo}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Alternative Phone Number\"\n              type=\"text\"\n              nameAttr=\"altPhoneNo\"\n              value={biodata.altPhone}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, altPhone: null })\n                setBiodata({ ...biodata, altPhone: val})\n              }}\n              error={biodataErrors.altPhone && biodataErrors.altPhone}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <InputField \n              label=\"Gender\"\n              type=\"select\"\n              options={['Female', 'Male', 'Other']}\n              nameAttr=\"gender\"\n              value={biodata.gender}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, gender: null })\n                setBiodata({ ...biodata, gender: val})\n              }}\n              error={biodataErrors.gender && biodataErrors.gender}\n            />\n          </Col>\n        </Row>\n      </div>\n      <div className={styles.residentialInfo}>\n        <h3>Residential Address</h3>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"Street\"\n              type=\"text\"\n              nameAttr=\"residentStreet\"\n              value={residentialInfo.street}\n              changed={(val) => {\n                setResidentialErrors({ ...residentialErrors, street: null })\n                setResidentialInfo({ ...residentialInfo, street: val})\n              }}\n              error={residentialErrors.street && residentialErrors.street}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <InputField \n              label=\"City\"\n              type=\"text\"\n              nameAttr=\"city\"\n              value={residentialInfo.city}\n              changed={(val) => {\n                setResidentialErrors({ ...residentialErrors, city: null })\n                setResidentialInfo({ ...residentialInfo, city: val})\n              }}\n              error={residentialErrors.city && residentialErrors.city}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"State\"\n              type=\"select\"\n              options={nigeriaStates}\n              nameAttr=\"state\"\n              value={residentialInfo.state}\n              changed={(val) => {\n                setResidentialErrors({ ...residentialErrors, state: null })\n                setResidentialInfo({ ...residentialInfo, state: val})\n              }}\n              error={residentialErrors.state && residentialErrors.state}\n            />\n          </Col>\n        </Row>\n      </div>\n      <div className={styles.kinInfo}>\n        <h3>Next of Kin Information</h3>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"Full name\"\n              type=\"text\"\n              nameAttr=\"kinFullname\"\n              value={kinInfo.fullName}\n              changed={(val) => {\n                setKinErrors({ ...kinErrors, fullName: null })\n                setKinInfo({ ...kinInfo, fullName: val})\n              }}\n              error={kinErrors.fullName && kinErrors.fullName}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Relationship\"\n              type=\"text\"\n              nameAttr=\"kinRelationship\"\n              value={kinInfo.relationship}\n              changed={(val) => {\n                setKinErrors({ ...kinErrors, relationship: null })\n                setKinInfo({ ...kinInfo, relationship: val})\n              }}\n              error={kinErrors.relationship && kinErrors.relationship}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"Email Address\"\n              type=\"email\"\n              nameAttr=\"kinEmail\"\n              value={kinInfo.email}\n              changed={(val) => {\n                setKinErrors({ ...kinErrors, email: null })\n                setKinInfo({ ...kinInfo, email: val})\n              }}\n              error={kinErrors.email && kinErrors.email}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Phone Number\"\n              type=\"text\"\n              nameAttr=\"kinPhone\"\n              value={kinInfo.phoneNo}\n              changed={(val) => {\n                setKinErrors({ ...kinErrors, phoneNo: null })\n                setKinInfo({ ...kinInfo, phoneNo: val})\n              }}\n              error={kinErrors.phoneNo && kinErrors.phoneNo}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <InputField \n              label=\"Residential Address\"\n              type=\"text\"\n              nameAttr=\"kinAddress\"\n              placeholder=\"Street address to the nearest bus stop\"\n              value={kinInfo.address}\n              changed={(val) => {\n                setKinErrors({ ...kinErrors, address: null })\n                setKinInfo({ ...kinInfo, address: val})\n              }}\n              error={kinErrors.address && kinErrors.address}\n            />\n          </Col>\n        </Row>\n      </div>\n      <div className={styles.bankInfo}>\n        <h3>Bank Information</h3>\n        <p>Please provide a bank account where we can send your investment proceeds or loan requests to.</p>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"select\"\n              label=\"Bank\"\n              options={bankNames}\n              nameAttr=\"bank\"\n              value={bankInfo.bankName}\n              changed={(val) => {\n                setBankInfoErrors({ ...bankInfoErrors, bankName: null })\n                setBankInfo({ ...bankInfo, bankName: val})\n              }}\n              error={bankInfoErrors.bankName && bankInfoErrors.bankName}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Account Type\"\n              type=\"select\"\n              options={[\"Savings\", \"Current\"]}\n              nameAttr=\"acountType\"\n              value={bankInfo.accountType}\n              changed={(val) => {\n                setBankInfoErrors({ ...bankInfoErrors, accountType: null })\n                setBankInfo({ ...bankInfo, accountType: val})\n              }}\n              error={bankInfoErrors.accountType && bankInfoErrors.accountType}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Account Number\"\n              nameAttr=\"accountNo\"\n              value={bankInfo.accountNumber}\n              changed={(val) => {\n                setBankInfoErrors({ ...bankInfoErrors, accountNumber: null })\n                setBankInfo({ ...bankInfo, accountNumber: val})\n              }}\n              error={bankInfoErrors.accountNumber && bankInfoErrors.accountNumber}\n            />\n          </Col>\n          <Col>\n            { !bankLoading ? <InputField \n              label=\"Account Name\"\n              type=\"text\"\n              nameAttr=\"accountName\"\n              value={bankInfo.accountName}\n              disable={true}\n              changed={(val) => {\n                setBankInfoErrors({ ...bankInfoErrors, accountName: null })\n                setBankInfo({ ...bankInfo, accountName: val})\n              }}\n              error={bankInfoErrors.accountName && bankInfoErrors.accountName}\n            /> : \n              <div className={styles.loaderWrapper}>\n                <BeatLoader color=\"#741763\" size={10} />\n              </div>\n            }\n          </Col>\n        </Row>\n      </div>\n      <Button \n        className=\"mt-4\" \n        clicked={handleSubmit} \n        loading={loading}\n        disabled={loading}\n        fullWidth \n        bgColor=\"#741763\" \n        size=\"lg\" \n        color=\"#EBEBEB\"\n      >\n        Save & Continue\n      </Button>\n    </div>\n  )\n}\n\nexport default PersonalForm;","/home/tga/Desktop/gypsy-capital/src/components/NavTabs/NavTabs.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/Footer/Footer.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/ModalForm/ModalForm.jsx",["355","356","357"],"/home/tga/Desktop/gypsy-capital/src/context/AuthContext.js",[],"/home/tga/Desktop/gypsy-capital/src/pages/SignIn/SignIn.jsx",["358"],"import React, { useState, useContext, useEffect } from 'react';\nimport Logo from '../../assets/logo.png';\nimport styles from './SignIn.module.scss';\nimport { Row, Col } from 'react-bootstrap';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport pageUrl from '../../routes/pageUrl';\nimport { Link } from 'react-router-dom';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { validateInput } from '../../utils/validateInput';\nimport useNavigateAfterAuth from '../../hooks/useNavigateAfterAuth';\n\n\nconst SignIn = () => {\n\n  const { \n      state: { loading, error }, \n      loginUser, \n      clearErrors \n  } = useContext(AuthContext);\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearErrors();\n    }\n  }, [error])\n\n  const [signinValues, setSigninValues] = useState({\n    email: '',\n    password: ''\n  });\n\n  const [signinErrors, setSigninErrors] = useState({\n    email: null,\n    password: null\n  });\n\n  const [ signinAndNavigate ] = useNavigateAfterAuth(signinValues.email, signinValues.password);\n\n  const handleSubmit = () => {\n    // console.log(signinValues);\n    const validated = validateInput(signinValues, setSigninErrors);\n    // console.log(validated);\n    if(validated) {\n      signinAndNavigate(loginUser);\n    }\n  }\n\n  // useEffect(() => {\n  //   const listener = event => {\n  //     if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n  //       console.log(\"Enter key was pressed. Run your function.\");\n  //       handleSubmit();\n  //     }\n  //   };\n  //   document.addEventListener(\"keydown\", listener);\n  //   return () => {\n  //     document.removeEventListener(\"keydown\", listener);\n  //   };\n  // }, []);\n\n  return (\n    <div className={styles.container}>\n      <ToastContainer position=\"top-center\" />\n      <img src={Logo} alt=\"Gypsy Logo\" />\n      <h1>Login to your account</h1>\n      <div className={styles.loginBox}>\n        <Row>\n          <Col>\n            <InputField \n              type=\"email\"\n              label=\"Email\"\n              nameAttr=\"email\"\n              value={signinValues.email}\n              changed={(val) => {\n                setSigninErrors({ ...signinErrors, email: null })\n                setSigninValues({ ...signinValues, email: val })\n              }}\n              error={signinErrors.email && signinErrors.email}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mt-3\">\n          <Col>\n            <InputField \n              type=\"password\"\n              label=\"Password\"\n              nameAttr=\"password\"\n              value={signinValues.password}\n              changed={(val) => {\n                setSigninErrors({ ...signinErrors, password: null })\n                setSigninValues({ ...signinValues, password: val })\n              }}\n              error={signinErrors.password && signinErrors.password}\n            />\n          </Col>\n        </Row>\n        <p className={styles.resetPassword}>\n          <Link to=\"/password/email\">Forgot password?</Link>\n        </p>\n        <Button \n          clicked={handleSubmit} \n          fullWidth \n          className=\"mt-4\" \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n          disabled={loading}\n          loading={loading}\n        >\n          Login\n        </Button>\n        <p className={[styles.authLink, 'mt-3'].join(' ')}>\n          Don’t have an account? <Link to={pageUrl.SIGNUP_PAGE}>Register</Link>\n        </p>\n      </div>\n    </div>\n  );\n}\n\n\nexport default SignIn;","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorDashboard/ProcessorDashboard.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/Support/Support.jsx",["359"],"import React from 'react';\nimport styles from './Support.module.scss';\n\n\nconst Support = () => {\n  return (\n    <>\n\n    </>\n  )\n}\n\n\nexport default Support;\n","/home/tga/Desktop/gypsy-capital/src/utils/dummyData.js",[],"/home/tga/Desktop/gypsy-capital/src/components/ProfileView/ProfileView.jsx",["360","361"],"import React, { useState, useContext, useRef, useEffect } from 'react';\nimport styles from './ProfileView.module.scss';\nimport { Row, Col } from 'react-bootstrap';\nimport InputField from '../InputField/InputField';\nimport Button from '../Button/Button';\nimport { BiCreditCard, BiPlus } from 'react-icons/bi';\nimport { RiBankFill } from 'react-icons/ri';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { Context as UserContext } from '../../context/UserContext';\n\n\nconst ProfileView = () => {\n\n  const [visibleSection, setVisibleSection] = useState('personalInfo');\n  const [profileImg, setProfileImg] = useState(null);\n  const [visiblePaymentSection, setVisiblePaymentSection] = useState('card');\n\n  const [profileData, setProfileData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phoneNo: \"\",\n    bvn: \"\",\n    residence: \"\"\n  })\n\n  const profilePicRef = useRef();\n\n  const { state: { user } } = useContext(AuthContext);\n  const { \n    state: { userDetails },\n    getClientDetails, \n  } = useContext(UserContext);\n\n  useEffect(() => {\n    getClientDetails(user.user_id);\n  }, [])\n\n  useEffect(() => {\n    if(userDetails) {\n      // setProfileData({\n      //   firstName\n      // })\n      console.log(userDetails)\n      const { bioData, identity, residence } = userDetails;\n      setProfileData({\n        firstName: bioData.firstName,\n        lastName: bioData.lastName,\n        email: bioData.email,\n        phoneNo: bioData.phoneNumber.replace('234', '0'),\n        bvn: bioData.BVN,\n        residence: residence.street\n      })\n      setProfileImg(identity.profilePhoto)\n    }\n  }, [userDetails])\n\n  const goToProfileSection = (section) => {\n    console.log('works');\n    setVisibleSection(section);\n  }\n\n  return (\n    <div className={styles.profileBox}>\n      <div className={styles.header}>\n        <Row>\n          <Col \n            onClick={() => goToProfileSection('personalInfo')} \n            className={[styles.borderStyle, styles.tabCol].join(' ')}\n          >\n            <p \n              className={[styles.tabMenu, visibleSection === \"personalInfo\" && styles.activeTab1].join(' ')}\n            >\n              Personal Information\n            </p>\n          </Col>\n          <Col \n            onClick={() => goToProfileSection('security')} \n            className={[styles.borderStyle, styles.tabCol].join(' ')}\n          >\n            <p\n              className={[styles.tabMenu, visibleSection === \"security\" && styles.activeTab2].join(' ')}\n            >\n              Security\n            </p>\n          </Col>\n          <Col\n            onClick={() => goToProfileSection('payment')} \n            className={styles.tabCol}\n          >\n            <p\n              className={[styles.tabMenu, visibleSection === \"payment\" && styles.activeTab3].join(' ')}\n            >\n              Payment\n            </p>\n          </Col>\n        </Row>\n      </div>\n      <div className={styles.body}>\n        {visibleSection === \"personalInfo\" && <div>\n          <div className={styles.profilePictureSection}>\n            { profileImg && <img src={profileImg} alt=\"profile image\"/> }\n          </div>\n          <div className={styles.uploadBtn}>\n            <input type=\"file\" id=\"profilePic\" hidden ref={profilePicRef} />\n            <label  \n              htmlFor=\"profilePic\"\n            >\n              Change Profile Picture\n            </label>\n          </div>\n          <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"First Name\"\n              type=\"text\"\n              nameAttr=\"firstName\"\n              value={profileData.firstName}\n            />\n          </Col> \n          <Col>\n            <InputField \n              label=\"Last Name\"\n              type=\"text\"\n              nameAttr=\"lastName\"\n              value={profileData.lastName}\n            />\n          </Col> \n          </Row> \n          <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"Email\"\n              type=\"email\"\n              nameAttr=\"email\"\n              value={profileData.email}\n            />\n          </Col> \n          <Col>\n            <InputField \n              label=\"Phone Number\"\n              type=\"text\"\n              nameAttr=\"phoneNumber\"\n              value={profileData.phoneNo}\n            />\n          </Col> \n          </Row> \n          <Row>\n          <Col>\n            <InputField \n              label=\"BVN\"\n              type=\"text\"\n              nameAttr=\"bvn\"\n              value={profileData.bvn}\n            />\n          </Col> \n          <Col>\n            <InputField \n              label=\"Residential Address\"\n              type=\"text\"\n              nameAttr=\"address\"\n              value={profileData.residence}\n            />\n          </Col> \n          </Row> \n          <Button className=\"mt-5\" fullWidth  bgColor=\"#741763\" size=\"lg\" color=\"#EBEBEB\">\n            Edit Info\n          </Button>\n        </div>}\n        { visibleSection === \"security\" &&\n          <div className={styles.security}>\n            <h2>CHANGE PASSWORD</h2>\n            <Row className=\"mb-4\">\n              <Col>\n                <InputField \n                  type=\"password\"\n                  label=\"Current Password\"\n                  nameAttr=\"currPassword\"\n                />\n              </Col>\n            </Row>\n            <Row className=\"mb-4\">\n              <Col>\n                <InputField \n                  type=\"password\"\n                  label=\"Current Password\"\n                  nameAttr=\"currPassword\"\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <InputField \n                  type=\"password\"\n                  label=\"Current Password\"\n                  nameAttr=\"currPassword\"\n                />\n              </Col>\n            </Row>\n          </div>\n        }\n        { visibleSection === \"payment\" && \n          <div className={styles.payment}>\n            <div className={styles.btnGroup}>\n              <button \n                className={ visiblePaymentSection === 'card' && styles.activeMenu }\n                onClick={() => setVisiblePaymentSection('card')}\n              >\n                <BiCreditCard className={styles.icon} />\n                Card\n              </button>\n              <button\n                className={ visiblePaymentSection === 'bank' && styles.activeMenu }\n                onClick={() => setVisiblePaymentSection('bank')}\n              >\n                <RiBankFill className={styles.icon} />\n                Bank\n              </button>\n            </div>\n            <div className={styles.content}>\n              { visiblePaymentSection === \"card\" && <div className={styles.addCard}>\n                <div className={styles.cardInner}>\n                  <BiPlus size=\"2em\" />\n                  <p>Add Card</p>\n                </div>\n              </div> }\n            </div>\n          </div>\n        }\n      </div>\n    </div>\n  )\n}\n\n\nexport default ProfileView;","/home/tga/Desktop/gypsy-capital/src/components/Loader/Loader.jsx",[],"/home/tga/Desktop/gypsy-capital/src/utils/mappedLgas.js",[],"/home/tga/Desktop/gypsy-capital/src/components/EmployerInfoForm/EmployerInfoForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/index.js",[],"/home/tga/Desktop/gypsy-capital/src/utils/resolveToken.js",["362"],"/home/tga/Desktop/gypsy-capital/src/pages/OtpVerify/OtpVerify.jsx",["363"],"/home/tga/Desktop/gypsy-capital/src/pages/LoanCalculator/LoanCalculator.jsx",["364"],"/home/tga/Desktop/gypsy-capital/src/routes/sidebarRoutes.js",["365"],"import pageUrl from './pageUrl';\nimport { FiLayers } from 'react-icons/fi';\nimport { BiCreditCard } from 'react-icons/bi';\nimport { AiOutlineUser } from 'react-icons/ai';\nimport { GiTakeMyMoney, GiMoneyStack } from 'react-icons/gi';\nimport { FaUser } from 'react-icons/fa';\nimport { BiSupport } from 'react-icons/bi';\nimport { RiUser3Fill } from 'react-icons/ri';\n\n\nexport const clientRoutes = [\n  {\n      label: \"Dashboard\",\n      link: pageUrl.DASHBOARD_HOMEPAGE,\n      rootLink: pageUrl.DASHBOARD_HOMEPAGE,\n      icon: FiLayers\n    },\n    {\n      label: \"Consumer Credit\",\n      link: '/dashboard/consumer-credit/history',\n      rootLink: pageUrl.CONSUMER_CREDIT_PAGE,\n      icon: GiTakeMyMoney\n    },\n    {\n      label: \"Credit Report\",\n      link: pageUrl.CREDIT_REPORT_PAGE,\n      rootLink: pageUrl.CREDIT_REPORT_PAGE,\n      icon: BiCreditCard\n    },\n    {\n      label: \"Profile\",\n      link: pageUrl.PROFILE_PAGE,\n      rootLink: pageUrl.PROFILE_PAGE,\n      icon: AiOutlineUser\n    },\n]\n\n\nconst salesRoutes = [\n  {\n    label: \"Dashboard\",\n    link: pageUrl.SALES_AGENT_OVERVIEW,\n    rootLink: pageUrl.SALES_AGENT_OVERVIEW,\n    icon: FiLayers\n  },\n  {\n    label: \"Clients\",\n    link: pageUrl.CLIENT_LIST_PAGE,\n    rootLink: '/sales-agent/client',\n    icon: FaUser\n  },\n  {\n    label: \"Loans\",\n    link: pageUrl.LOAN_LIST_PAGE,\n    rootLink: '/sales-agent/loan',\n    icon: GiMoneyStack\n  }, \n  {\n    label: \"Support\",\n    link: pageUrl.SUPPORT_PAGE,\n    rootLink: pageUrl.SUPPORT_PAGE,\n    icon: BiSupport\n  }\n]\n\n\nconst processorRoutes = [\n  {\n    label: \"Dashboard\",\n    link: pageUrl.PROCESSORS_DASHBOARD,\n    rootLink: pageUrl.PROCESSORS_DASHBOARD,\n    icon: FiLayers\n  },\n  {\n    label: \"Clients\",\n    link: pageUrl.PROCESSORS_CLIENTS_PAGE,\n    rootLink: pageUrl.PROCESSORS_CLIENTS_PAGE,\n    icon: FaUser\n  },\n  {\n    label: \"Loans\",\n    link: pageUrl.PROCESSORS_LOANS_PAGE,\n    rootLink: pageUrl.PROCESSORS_LOANS_PAGE,\n    icon: GiMoneyStack\n  }, \n  {\n    label: \"Support\",\n    link: pageUrl.SUPPORT_PAGE,\n    rootLink: pageUrl.SUPPORT_PAGE,\n    icon: BiSupport\n  }\n]\n\n\nexport const routes = [\n  clientRoutes,\n  salesRoutes,\n  processorRoutes\n]","/home/tga/Desktop/gypsy-capital/src/components/InputField/InputField.js",[],"/home/tga/Desktop/gypsy-capital/src/utils/nigeriaStates.js",[],"/home/tga/Desktop/gypsy-capital/src/routes/pageUrl.js",[],{"ruleId":"366","replacedBy":"367"},{"ruleId":"368","replacedBy":"369"},{"ruleId":"370","severity":1,"message":"371","line":4,"column":1,"nodeType":"372","endLine":34,"endColumn":2},{"ruleId":"366","replacedBy":"373"},{"ruleId":"368","replacedBy":"374"},{"ruleId":"375","severity":1,"message":"376","line":2,"column":8,"nodeType":"377","messageId":"378","endLine":2,"endColumn":14},{"ruleId":"375","severity":1,"message":"379","line":5,"column":25,"nodeType":"377","messageId":"378","endLine":5,"endColumn":29},{"ruleId":"375","severity":1,"message":"380","line":10,"column":11,"nodeType":"377","messageId":"378","endLine":10,"endColumn":14},{"ruleId":"375","severity":1,"message":"381","line":18,"column":11,"nodeType":"377","messageId":"378","endLine":18,"endColumn":15},{"ruleId":"382","severity":1,"message":"383","line":28,"column":6,"nodeType":"384","endLine":28,"endColumn":8,"suggestions":"385"},{"ruleId":"375","severity":1,"message":"379","line":9,"column":25,"nodeType":"377","messageId":"378","endLine":9,"endColumn":29},{"ruleId":"386","severity":1,"message":"387","line":33,"column":11,"nodeType":"388","endLine":40,"endColumn":14},{"ruleId":"382","severity":1,"message":"383","line":48,"column":6,"nodeType":"384","endLine":48,"endColumn":8,"suggestions":"389"},{"ruleId":"382","severity":1,"message":"390","line":56,"column":6,"nodeType":"384","endLine":56,"endColumn":13,"suggestions":"391"},{"ruleId":"366","replacedBy":"392"},{"ruleId":"368","replacedBy":"393"},{"ruleId":"375","severity":1,"message":"376","line":3,"column":8,"nodeType":"377","messageId":"378","endLine":3,"endColumn":14},{"ruleId":"366","replacedBy":"394"},{"ruleId":"368","replacedBy":"395"},{"ruleId":"382","severity":1,"message":"396","line":35,"column":6,"nodeType":"384","endLine":35,"endColumn":13,"suggestions":"397"},{"ruleId":"398","severity":1,"message":"399","line":3,"column":31,"nodeType":"400","messageId":"401","endLine":3,"endColumn":32,"suggestions":"402"},{"ruleId":"398","severity":1,"message":"399","line":3,"column":56,"nodeType":"400","messageId":"401","endLine":3,"endColumn":57,"suggestions":"403"},{"ruleId":"370","severity":1,"message":"371","line":7,"column":1,"nodeType":"372","endLine":27,"endColumn":2},{"ruleId":"404","severity":1,"message":"405","line":66,"column":21,"nodeType":"388","endLine":66,"endColumn":74},{"ruleId":"382","severity":1,"message":"406","line":121,"column":6,"nodeType":"384","endLine":121,"endColumn":8,"suggestions":"407"},{"ruleId":"382","severity":1,"message":"396","line":174,"column":6,"nodeType":"384","endLine":174,"endColumn":13,"suggestions":"408"},{"ruleId":"382","severity":1,"message":"409","line":42,"column":6,"nodeType":"384","endLine":42,"endColumn":8,"suggestions":"410"},{"ruleId":"375","severity":1,"message":"411","line":9,"column":21,"nodeType":"377","messageId":"378","endLine":9,"endColumn":32},{"ruleId":"375","severity":1,"message":"412","line":14,"column":31,"nodeType":"377","messageId":"378","endLine":14,"endColumn":40},{"ruleId":"382","severity":1,"message":"413","line":69,"column":6,"nodeType":"384","endLine":69,"endColumn":52,"suggestions":"414"},{"ruleId":"370","severity":1,"message":"371","line":5,"column":1,"nodeType":"372","endLine":52,"endColumn":2},{"ruleId":"382","severity":1,"message":"415","line":33,"column":6,"nodeType":"384","endLine":33,"endColumn":8,"suggestions":"416"},{"ruleId":"382","severity":1,"message":"417","line":41,"column":6,"nodeType":"384","endLine":41,"endColumn":15,"suggestions":"418"},{"ruleId":"382","severity":1,"message":"396","line":47,"column":6,"nodeType":"384","endLine":47,"endColumn":13,"suggestions":"419"},{"ruleId":"398","severity":1,"message":"399","line":64,"column":33,"nodeType":"400","messageId":"401","endLine":64,"endColumn":34,"suggestions":"420"},{"ruleId":"398","severity":1,"message":"399","line":64,"column":58,"nodeType":"400","messageId":"401","endLine":64,"endColumn":59,"suggestions":"421"},{"ruleId":"382","severity":1,"message":"422","line":49,"column":6,"nodeType":"384","endLine":49,"endColumn":8,"suggestions":"423"},{"ruleId":"382","severity":1,"message":"424","line":64,"column":6,"nodeType":"384","endLine":64,"endColumn":19,"suggestions":"425"},{"ruleId":"382","severity":1,"message":"396","line":71,"column":6,"nodeType":"384","endLine":71,"endColumn":13,"suggestions":"426"},{"ruleId":"375","severity":1,"message":"427","line":26,"column":20,"nodeType":"377","messageId":"378","endLine":26,"endColumn":25},{"ruleId":"382","severity":1,"message":"383","line":30,"column":6,"nodeType":"384","endLine":30,"endColumn":8,"suggestions":"428"},{"ruleId":"375","severity":1,"message":"379","line":22,"column":25,"nodeType":"377","messageId":"378","endLine":22,"endColumn":29},{"ruleId":"382","severity":1,"message":"429","line":45,"column":6,"nodeType":"384","endLine":45,"endColumn":12,"suggestions":"430"},{"ruleId":"382","severity":1,"message":"431","line":169,"column":6,"nodeType":"384","endLine":169,"endColumn":12,"suggestions":"432"},{"ruleId":"375","severity":1,"message":"433","line":238,"column":10,"nodeType":"377","messageId":"378","endLine":238,"endColumn":20},{"ruleId":"375","severity":1,"message":"434","line":238,"column":22,"nodeType":"377","messageId":"378","endLine":238,"endColumn":35},{"ruleId":"382","severity":1,"message":"435","line":256,"column":6,"nodeType":"384","endLine":256,"endColumn":12,"suggestions":"436"},{"ruleId":"375","severity":1,"message":"437","line":430,"column":20,"nodeType":"377","messageId":"378","endLine":430,"endColumn":33},{"ruleId":"375","severity":1,"message":"427","line":430,"column":35,"nodeType":"377","messageId":"378","endLine":430,"endColumn":40},{"ruleId":"382","severity":1,"message":"438","line":502,"column":6,"nodeType":"384","endLine":502,"endColumn":8,"suggestions":"439"},{"ruleId":"375","severity":1,"message":"440","line":39,"column":22,"nodeType":"377","messageId":"378","endLine":39,"endColumn":35},{"ruleId":"382","severity":1,"message":"441","line":103,"column":6,"nodeType":"384","endLine":103,"endColumn":8,"suggestions":"442"},{"ruleId":"382","severity":1,"message":"429","line":116,"column":6,"nodeType":"384","endLine":116,"endColumn":37,"suggestions":"443"},{"ruleId":"382","severity":1,"message":"444","line":500,"column":6,"nodeType":"384","endLine":500,"endColumn":8,"suggestions":"445"},{"ruleId":"382","severity":1,"message":"446","line":515,"column":6,"nodeType":"384","endLine":515,"endColumn":49,"suggestions":"447"},{"ruleId":"382","severity":1,"message":"448","line":523,"column":6,"nodeType":"384","endLine":523,"endColumn":23,"suggestions":"449"},{"ruleId":"382","severity":1,"message":"406","line":713,"column":6,"nodeType":"384","endLine":713,"endColumn":8,"suggestions":"450"},{"ruleId":"375","severity":1,"message":"451","line":9,"column":30,"nodeType":"377","messageId":"378","endLine":9,"endColumn":34},{"ruleId":"370","severity":1,"message":"371","line":4,"column":1,"nodeType":"372","endLine":22,"endColumn":2},{"ruleId":"375","severity":1,"message":"379","line":15,"column":25,"nodeType":"377","messageId":"378","endLine":15,"endColumn":29},{"ruleId":"452","severity":1,"message":"453","line":42,"column":15,"nodeType":"388","endLine":42,"endColumn":26},{"ruleId":"452","severity":1,"message":"453","line":45,"column":15,"nodeType":"388","endLine":45,"endColumn":26},{"ruleId":"452","severity":1,"message":"453","line":48,"column":15,"nodeType":"388","endLine":48,"endColumn":26},{"ruleId":"382","severity":1,"message":"396","line":20,"column":6,"nodeType":"384","endLine":20,"endColumn":13,"suggestions":"454"},{"ruleId":"375","severity":1,"message":"455","line":1,"column":27,"nodeType":"377","messageId":"378","endLine":1,"endColumn":34},{"ruleId":"382","severity":1,"message":"456","line":32,"column":6,"nodeType":"384","endLine":32,"endColumn":8,"suggestions":"457"},{"ruleId":"382","severity":1,"message":"446","line":103,"column":6,"nodeType":"384","endLine":103,"endColumn":49,"suggestions":"458"},{"ruleId":"382","severity":1,"message":"448","line":111,"column":6,"nodeType":"384","endLine":111,"endColumn":23,"suggestions":"459"},{"ruleId":"382","severity":1,"message":"429","line":136,"column":6,"nodeType":"384","endLine":136,"endColumn":25,"suggestions":"460"},{"ruleId":"375","severity":1,"message":"461","line":77,"column":9,"nodeType":"377","messageId":"378","endLine":77,"endColumn":19},{"ruleId":"382","severity":1,"message":"396","line":375,"column":6,"nodeType":"384","endLine":375,"endColumn":13,"suggestions":"462"},{"ruleId":"382","severity":1,"message":"463","line":387,"column":6,"nodeType":"384","endLine":387,"endColumn":17,"suggestions":"464"},{"ruleId":"382","severity":1,"message":"396","line":28,"column":6,"nodeType":"384","endLine":28,"endColumn":13,"suggestions":"465"},{"ruleId":"375","severity":1,"message":"376","line":2,"column":8,"nodeType":"377","messageId":"378","endLine":2,"endColumn":14},{"ruleId":"382","severity":1,"message":"422","line":37,"column":6,"nodeType":"384","endLine":37,"endColumn":8,"suggestions":"466"},{"ruleId":"404","severity":1,"message":"405","line":102,"column":29,"nodeType":"388","endLine":102,"endColumn":72},{"ruleId":"370","severity":1,"message":"371","line":1,"column":1,"nodeType":"372","endLine":7,"endColumn":2},{"ruleId":"382","severity":1,"message":"396","line":29,"column":6,"nodeType":"384","endLine":29,"endColumn":13,"suggestions":"467"},{"ruleId":"382","severity":1,"message":"468","line":28,"column":5,"nodeType":"384","endLine":28,"endColumn":15,"suggestions":"469"},{"ruleId":"375","severity":1,"message":"470","line":8,"column":10,"nodeType":"377","messageId":"378","endLine":8,"endColumn":21},"no-native-reassign",["471"],"no-negated-in-lhs",["472"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["471"],["472"],"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'url' is assigned a value but never used.","'path' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'retrieveClientLoans'. Either include it or remove the dependency array.","ArrayExpression",["473"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement",["474"],"React Hook useEffect has a missing dependency: 'clearError'. Either include it or remove the dependency array.",["475"],["471"],["472"],["471"],["472"],"React Hook useEffect has a missing dependency: 'clearErrors'. Either include it or remove the dependency array.",["476"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["477","478"],["479","480"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has a missing dependency: 'close'. Either include it or remove the dependency array. If 'close' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["481"],["482"],"React Hook useEffect has a missing dependency: 'returnNumber'. Either include it or remove the dependency array. If 'setFaqs' needs the current value of 'returnNumber', you can also switch to useReducer instead of useState and read 'returnNumber' in the reducer.",["483"],"'AuthContext' is defined but never used.","'loanApply' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loanCalcData'. Either include it or remove the dependency array. You can also do a functional update 'setLoanCalcData(l => ...)' if you only need 'loanCalcData' in the 'setLoanCalcData' call.",["484"],"React Hook useEffect has missing dependencies: 'clearErrors' and 'getClientList'. Either include them or remove the dependency array.",["485"],"React Hook useMemo has a missing dependency: 'user.user_id'. Either include it or remove the dependency array.",["486"],["487"],["488","489"],["490","491"],"React Hook useEffect has missing dependencies: 'getClientDetails' and 'user.user_id'. Either include them or remove the dependency array.",["492"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["493"],["494"],"'loans' is assigned a value but never used.",["495"],"React Hook useEffect has a missing dependency: 'biodata'. Either include it or remove the dependency array. You can also do a functional update 'setBiodata(b => ...)' if you only need 'biodata' in the 'setBiodata' call.",["496"],"React Hook useEffect has a missing dependency: 'nextOfKin'. Either include it or remove the dependency array. You can also do a functional update 'setNextOfKin(n => ...)' if you only need 'nextOfKin' in the 'setNextOfKin' call.",["497"],"'salaryBank' is assigned a value but never used.","'setSalaryBank' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'disburseBank'. Either include it or remove the dependency array. You can also do a functional update 'setDisburseBank(d => ...)' if you only need 'disburseBank' in the 'setDisburseBank' call.",["498"],"'currentLoanId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clearErrors', 'clientId', and 'getClientDetails'. Either include them or remove the dependency array.",["499"],"'setLgaLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentAddedUser' and 'getClientDetails'. Either include them or remove the dependency array.",["500"],["501"],"React Hook useEffect has a missing dependency: 'getBankList'. Either include it or remove the dependency array.",["502"],"React Hook useEffect has missing dependencies: 'bankList' and 'verifyBankInfo'. Either include them or remove the dependency array.",["503"],"React Hook useEffect has a missing dependency: 'bankInfo'. Either include it or remove the dependency array. You can also do a functional update 'setBankInfo(b => ...)' if you only need 'bankInfo' in the 'setBankInfo' call.",["504"],["505"],"'user' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["506"],"'useMemo' is defined but never used.","React Hook useEffect has missing dependencies: 'getBankList', 'getClientDetails', and 'user.user_id'. Either include them or remove the dependency array.",["507"],["508"],["509"],["510"],"'emptyState' is assigned a value but never used.",["511"],"React Hook useEffect has a missing dependency: 'clearErr'. Either include it or remove the dependency array.",["512"],["513"],["514"],["515"],"React Hook useEffect has a missing dependency: 'loanData'. Either include it or remove the dependency array. You can also do a functional update 'setLoanData(l => ...)' if you only need 'loanData' in the 'setLoanData' call.",["516"],"'RiUser3Fill' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"517","fix":"518"},{"desc":"517","fix":"519"},{"desc":"520","fix":"521"},{"desc":"522","fix":"523"},{"messageId":"524","fix":"525","desc":"526"},{"messageId":"527","fix":"528","desc":"529"},{"messageId":"524","fix":"530","desc":"526"},{"messageId":"527","fix":"531","desc":"529"},{"desc":"532","fix":"533"},{"desc":"522","fix":"534"},{"desc":"535","fix":"536"},{"desc":"537","fix":"538"},{"desc":"539","fix":"540"},{"desc":"541","fix":"542"},{"desc":"522","fix":"543"},{"messageId":"524","fix":"544","desc":"526"},{"messageId":"527","fix":"545","desc":"529"},{"messageId":"524","fix":"546","desc":"526"},{"messageId":"527","fix":"547","desc":"529"},{"desc":"548","fix":"549"},{"desc":"550","fix":"551"},{"desc":"522","fix":"552"},{"desc":"517","fix":"553"},{"desc":"554","fix":"555"},{"desc":"556","fix":"557"},{"desc":"558","fix":"559"},{"desc":"560","fix":"561"},{"desc":"562","fix":"563"},{"desc":"564","fix":"565"},{"desc":"566","fix":"567"},{"desc":"568","fix":"569"},{"desc":"570","fix":"571"},{"desc":"532","fix":"572"},{"desc":"522","fix":"573"},{"desc":"574","fix":"575"},{"desc":"568","fix":"576"},{"desc":"570","fix":"577"},{"desc":"578","fix":"579"},{"desc":"522","fix":"580"},{"desc":"581","fix":"582"},{"desc":"522","fix":"583"},{"desc":"548","fix":"584"},{"desc":"522","fix":"585"},{"desc":"586","fix":"587"},"Update the dependencies array to be: [retrieveClientLoans]",{"range":"588","text":"589"},{"range":"590","text":"589"},"Update the dependencies array to be: [clearError, error]",{"range":"591","text":"592"},"Update the dependencies array to be: [clearErrors, error]",{"range":"593","text":"594"},"removeEscape",{"range":"595","text":"596"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"597","text":"598"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"599","text":"596"},{"range":"600","text":"598"},"Update the dependencies array to be: [close]",{"range":"601","text":"602"},{"range":"603","text":"594"},"Update the dependencies array to be: [returnNumber]",{"range":"604","text":"605"},"Update the dependencies array to be: [monthlySalary, loanAmount, installmentPeriod, loanCalcData]",{"range":"606","text":"607"},"Update the dependencies array to be: [clearErrors, getClientList]",{"range":"608","text":"609"},"Update the dependencies array to be: [clients, user.user_id]",{"range":"610","text":"611"},{"range":"612","text":"594"},{"range":"613","text":"596"},{"range":"614","text":"598"},{"range":"615","text":"596"},{"range":"616","text":"598"},"Update the dependencies array to be: [getClientDetails, user.user_id]",{"range":"617","text":"618"},"Update the dependencies array to be: [history, userDetails]",{"range":"619","text":"620"},{"range":"621","text":"594"},{"range":"622","text":"589"},"Update the dependencies array to be: [biodata, data]",{"range":"623","text":"624"},"Update the dependencies array to be: [data, nextOfKin]",{"range":"625","text":"626"},"Update the dependencies array to be: [data, disburseBank]",{"range":"627","text":"628"},"Update the dependencies array to be: [clearErrors, clientId, getClientDetails]",{"range":"629","text":"630"},"Update the dependencies array to be: [currentAddedUser, getClientDetails]",{"range":"631","text":"632"},"Update the dependencies array to be: [biodata, currentAddedUser, userDetails]",{"range":"633","text":"634"},"Update the dependencies array to be: [getBankList]",{"range":"635","text":"636"},"Update the dependencies array to be: [bankInfo.accountNumber, bankInfo.bankName, bankList, verifyBankInfo]",{"range":"637","text":"638"},"Update the dependencies array to be: [bankInfo, userBankDetails]",{"range":"639","text":"640"},{"range":"641","text":"602"},{"range":"642","text":"594"},"Update the dependencies array to be: [getBankList, getClientDetails, user.user_id]",{"range":"643","text":"644"},{"range":"645","text":"638"},{"range":"646","text":"640"},"Update the dependencies array to be: [biodata, user, userDetails]",{"range":"647","text":"648"},{"range":"649","text":"594"},"Update the dependencies array to be: [clearErr, userError]",{"range":"650","text":"651"},{"range":"652","text":"594"},{"range":"653","text":"618"},{"range":"654","text":"594"},"Update the dependencies array to be: [loanData, location]",{"range":"655","text":"656"},[1105,1107],"[retrieveClientLoans]",[1840,1842],[1939,1946],"[clearError, error]",[1036,1043],"[clearErrors, error]",[92,93],"",[92,92],"\\",[117,118],[117,117],[3009,3011],"[close]",[4188,4195],[1186,1188],"[returnNumber]",[2320,2366],"[monthlySalary, loanAmount, installmentPeriod, loanCalcData]",[1287,1289],"[clearErrors, getClientList]",[1484,1493],"[clients, user.user_id]",[1192,1199],[1464,1465],[1464,1464],[1489,1490],[1489,1489],[1704,1706],"[getClientDetails, user.user_id]",[2182,2195],"[history, userDetails]",[2292,2299],[1236,1238],[1524,1530],"[biodata, data]",[4347,4353],"[data, nextOfKin]",[6261,6267],"[data, disburseBank]",[11783,11785],"[clearErrors, clientId, getClientDetails]",[2818,2820],"[currentAddedUser, getClientDetails]",[3184,3215],"[biodata, currentAddedUser, userDetails]",[14599,14601],"[getBankList]",[15039,15082],"[bankInfo.accountNumber, bankInfo.bankName, bankList, verifyBankInfo]",[15255,15272],"[bankInfo, userBankDetails]",[21241,21243],[664,671],[1094,1096],"[getBankList, getClientDetails, user.user_id]",[2707,2750],[2923,2940],[3787,3806],"[biodata, user, userDetails]",[10218,10225],[10372,10383],"[clearErr, userError]",[882,889],[1128,1130],[868,875],[846,856],"[loanData, location]"]