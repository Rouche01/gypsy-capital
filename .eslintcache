[{"/home/tga/Desktop/gypsy-capital/src/index.js":"1","/home/tga/Desktop/gypsy-capital/src/context/LoanContext.js":"2","/home/tga/Desktop/gypsy-capital/src/context/UserContext.js":"3","/home/tga/Desktop/gypsy-capital/src/context/ApprovalContext.js":"4","/home/tga/Desktop/gypsy-capital/src/context/createPersistDataContext.js":"5","/home/tga/Desktop/gypsy-capital/src/pages/SignUp/SignUp.jsx":"6","/home/tga/Desktop/gypsy-capital/src/pages/HomePage/HomePage.jsx":"7","/home/tga/Desktop/gypsy-capital/src/pages/Faqs/Faqs.jsx":"8","/home/tga/Desktop/gypsy-capital/src/pages/AboutUs/AboutUs.jsx":"9","/home/tga/Desktop/gypsy-capital/src/pages/LoanCalculator/LoanCalculator.jsx":"10","/home/tga/Desktop/gypsy-capital/src/pages/LoanList/LoanList.jsx":"11","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorLoans/ProcessorLoans.jsx":"12","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorLoanDetails/ProcessorLoanDetails.jsx":"13","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorClientDetails/ProcessorClientDetails.jsx":"14","/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerLoanDetails/AuthorizerLoanDetails.jsx":"15","/home/tga/Desktop/gypsy-capital/src/components/InputField/InputField.js":"16","/home/tga/Desktop/gypsy-capital/src/components/NavBar/NavBar.jsx":"17","/home/tga/Desktop/gypsy-capital/src/components/LoanList/LoanList.jsx":"18","/home/tga/Desktop/gypsy-capital/src/components/StatBox/StatBox.jsx":"19","/home/tga/Desktop/gypsy-capital/src/components/OfferLetter/OfferLetter.jsx":"20","/home/tga/Desktop/gypsy-capital/src/components/Footer/Footer.jsx":"21","/home/tga/Desktop/gypsy-capital/src/components/LoanContactForm/LoanContactForm.jsx":"22","/home/tga/Desktop/gypsy-capital/src/components/EmployerInfoForm/EmployerInfoForm.jsx":"23","/home/tga/Desktop/gypsy-capital/src/components/ProfileView/ProfileView.jsx":"24","/home/tga/Desktop/gypsy-capital/src/components/BvnForm/BvnForm.jsx":"25","/home/tga/Desktop/gypsy-capital/src/components/ProgressBar/ProgressBar.jsx":"26","/home/tga/Desktop/gypsy-capital/src/components/MonoWidget/MonoWidget.jsx":"27","/home/tga/Desktop/gypsy-capital/src/components/AccountSetupModal/AccountSetupModal.jsx":"28","/home/tga/Desktop/gypsy-capital/src/api/gypsy-web.js":"29","/home/tga/Desktop/gypsy-capital/src/routes/pageUrl.js":"30","/home/tga/Desktop/gypsy-capital/src/context/BankCotext.js":"31","/home/tga/Desktop/gypsy-capital/src/context/RepaymentContext.js":"32","/home/tga/Desktop/gypsy-capital/src/pages/SignIn/SignIn.jsx":"33","/home/tga/Desktop/gypsy-capital/src/pages/OtpVerify/OtpVerify.jsx":"34","/home/tga/Desktop/gypsy-capital/src/pages/Profile/Profile.jsx":"35","/home/tga/Desktop/gypsy-capital/src/pages/ClientDetails/ClientDetails.jsx":"36","/home/tga/Desktop/gypsy-capital/src/pages/LoanDetail/LoanDetail.jsx":"37","/home/tga/Desktop/gypsy-capital/src/pages/ForgotPassword/ForgotPassword.jsx":"38","/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerLoans/AuthorizerLoans.jsx":"39","/home/tga/Desktop/gypsy-capital/src/pages/ResetSuccess/ResetSuccess.jsx":"40","/home/tga/Desktop/gypsy-capital/src/routes/sidebarRoutes.js":"41","/home/tga/Desktop/gypsy-capital/src/hooks/useNavigateAfterAuth.js":"42","/home/tga/Desktop/gypsy-capital/src/components/Dashboard/Dashboard.jsx":"43","/home/tga/Desktop/gypsy-capital/src/components/Loader/Loader.jsx":"44","/home/tga/Desktop/gypsy-capital/src/utils/mappedLgas.js":"45","/home/tga/Desktop/gypsy-capital/src/components/IdentityForm/IdentityForm.jsx":"46","/home/tga/Desktop/gypsy-capital/src/reportWebVitals.js":"47","/home/tga/Desktop/gypsy-capital/src/context/MonoContext.js":"48","/home/tga/Desktop/gypsy-capital/src/pages/Overview/Overview.jsx":"49","/home/tga/Desktop/gypsy-capital/src/pages/ContactPage/ContactPage.jsx":"50","/home/tga/Desktop/gypsy-capital/src/pages/ResetPassword/ResetPassword.jsx":"51","/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerOverview/AuthorizerOverview.jsx":"52","/home/tga/Desktop/gypsy-capital/src/utils/validateInput.js":"53","/home/tga/Desktop/gypsy-capital/src/components/NavTabs/NavTabs.jsx":"54","/home/tga/Desktop/gypsy-capital/src/components/OfferLetter/OfferLetterForm.jsx":"55","/home/tga/Desktop/gypsy-capital/src/hooks/usePagination.js":"56","/home/tga/Desktop/gypsy-capital/src/components/FaqSection/FaqSection.jsx":"57","/home/tga/Desktop/gypsy-capital/src/components/ModalForm/ModalForm.jsx":"58","/home/tga/Desktop/gypsy-capital/src/components/LoanCalculatorForm/LoanCalculatorForm.jsx":"59","/home/tga/Desktop/gypsy-capital/src/pages/pages.js":"60","/home/tga/Desktop/gypsy-capital/src/context/AuthContext.js":"61","/home/tga/Desktop/gypsy-capital/src/pages/ConsumerCredit/ConsumerCredit.jsx":"62","/home/tga/Desktop/gypsy-capital/src/components/ProcessOffer/ProcessOffer.jsx":"63","/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerClientDetails/AuthorizerClientDetails.jsx":"64","/home/tga/Desktop/gypsy-capital/src/utils/convertInputType.js":"65","/home/tga/Desktop/gypsy-capital/src/App.js":"66","/home/tga/Desktop/gypsy-capital/src/pages/CreditReport/CreditReport.jsx":"67","/home/tga/Desktop/gypsy-capital/src/pages/Products/Products.jsx":"68","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorDashboard/ProcessorDashboard.jsx":"69","/home/tga/Desktop/gypsy-capital/src/hooks/useLoanDetails.js":"70","/home/tga/Desktop/gypsy-capital/src/components/FileUploadButton/FileUploadButton.js":"71"},{"size":548,"mtime":1615186108001,"results":"72","hashOfConfig":"73"},{"size":7730,"mtime":1614756252067,"results":"74","hashOfConfig":"73"},{"size":8357,"mtime":1615172320352,"results":"75","hashOfConfig":"73"},{"size":2656,"mtime":1615411153492,"results":"76","hashOfConfig":"73"},{"size":821,"mtime":1612688150601,"results":"77","hashOfConfig":"73"},{"size":8013,"mtime":1615162061114,"results":"78","hashOfConfig":"73"},{"size":16172,"mtime":1615773084963,"results":"79","hashOfConfig":"73"},{"size":855,"mtime":1615773152498,"results":"80","hashOfConfig":"73"},{"size":7035,"mtime":1615773221180,"results":"81","hashOfConfig":"73"},{"size":7819,"mtime":1615773006188,"results":"82","hashOfConfig":"73"},{"size":4424,"mtime":1615230346385,"results":"83","hashOfConfig":"73"},{"size":1038,"mtime":1614577544983,"results":"84","hashOfConfig":"73"},{"size":21710,"mtime":1615785928548,"results":"85","hashOfConfig":"73"},{"size":4749,"mtime":1615230346385,"results":"86","hashOfConfig":"73"},{"size":3378,"mtime":1615715173854,"results":"87","hashOfConfig":"73"},{"size":2658,"mtime":1615717532586,"results":"88","hashOfConfig":"73"},{"size":3124,"mtime":1615771430254,"results":"89","hashOfConfig":"73"},{"size":3592,"mtime":1614577812286,"results":"90","hashOfConfig":"73"},{"size":359,"mtime":1613662172186,"results":"91","hashOfConfig":"73"},{"size":11966,"mtime":1615787694307,"results":"92","hashOfConfig":"73"},{"size":1498,"mtime":1615772293000,"results":"93","hashOfConfig":"73"},{"size":6013,"mtime":1614449713718,"results":"94","hashOfConfig":"73"},{"size":9416,"mtime":1614451042975,"results":"95","hashOfConfig":"73"},{"size":7350,"mtime":1615166227442,"results":"96","hashOfConfig":"73"},{"size":1331,"mtime":1612592363525,"results":"97","hashOfConfig":"73"},{"size":1565,"mtime":1611429643367,"results":"98","hashOfConfig":"73"},{"size":1633,"mtime":1615286487857,"results":"99","hashOfConfig":"73"},{"size":21688,"mtime":1614430258872,"results":"100","hashOfConfig":"73"},{"size":194,"mtime":1615603624257,"results":"101","hashOfConfig":"73"},{"size":2456,"mtime":1615165274533,"results":"102","hashOfConfig":"73"},{"size":1970,"mtime":1615411153492,"results":"103","hashOfConfig":"73"},{"size":1975,"mtime":1615477168585,"results":"104","hashOfConfig":"73"},{"size":3662,"mtime":1614846996299,"results":"105","hashOfConfig":"73"},{"size":2391,"mtime":1612574568451,"results":"106","hashOfConfig":"73"},{"size":5552,"mtime":1614520423023,"results":"107","hashOfConfig":"73"},{"size":18542,"mtime":1615230346361,"results":"108","hashOfConfig":"73"},{"size":9994,"mtime":1615603624269,"results":"109","hashOfConfig":"73"},{"size":1549,"mtime":1613844663739,"results":"110","hashOfConfig":"73"},{"size":1045,"mtime":1615363832954,"results":"111","hashOfConfig":"73"},{"size":606,"mtime":1613846570517,"results":"112","hashOfConfig":"73"},{"size":2677,"mtime":1614724878260,"results":"113","hashOfConfig":"73"},{"size":990,"mtime":1614729905905,"results":"114","hashOfConfig":"73"},{"size":4301,"mtime":1614470843592,"results":"115","hashOfConfig":"73"},{"size":244,"mtime":1614263157725,"results":"116","hashOfConfig":"73"},{"size":14356,"mtime":1614449747162,"results":"117","hashOfConfig":"73"},{"size":2430,"mtime":1613916529415,"results":"118","hashOfConfig":"73"},{"size":362,"mtime":1611009045300,"results":"119","hashOfConfig":"73"},{"size":3808,"mtime":1615411153492,"results":"120","hashOfConfig":"73"},{"size":5197,"mtime":1613938100761,"results":"121","hashOfConfig":"73"},{"size":5324,"mtime":1615773288698,"results":"122","hashOfConfig":"73"},{"size":3453,"mtime":1613889706632,"results":"123","hashOfConfig":"73"},{"size":5796,"mtime":1615450279629,"results":"124","hashOfConfig":"73"},{"size":1153,"mtime":1613889253169,"results":"125","hashOfConfig":"73"},{"size":504,"mtime":1613386895718,"results":"126","hashOfConfig":"73"},{"size":20201,"mtime":1615787671805,"results":"127","hashOfConfig":"73"},{"size":1386,"mtime":1615363832846,"results":"128","hashOfConfig":"73"},{"size":2165,"mtime":1615771548869,"results":"129","hashOfConfig":"73"},{"size":11735,"mtime":1614471117577,"results":"130","hashOfConfig":"73"},{"size":8352,"mtime":1615190374516,"results":"131","hashOfConfig":"73"},{"size":2387,"mtime":1615165250184,"results":"132","hashOfConfig":"73"},{"size":8060,"mtime":1615162900026,"results":"133","hashOfConfig":"73"},{"size":8165,"mtime":1613929899661,"results":"134","hashOfConfig":"73"},{"size":2173,"mtime":1615774314372,"results":"135","hashOfConfig":"73"},{"size":2997,"mtime":1615715213402,"results":"136","hashOfConfig":"73"},{"size":404,"mtime":1615740689958,"results":"137","hashOfConfig":"73"},{"size":4659,"mtime":1615286487857,"results":"138","hashOfConfig":"73"},{"size":498,"mtime":1613049821733,"results":"139","hashOfConfig":"73"},{"size":12257,"mtime":1615039376564,"results":"140","hashOfConfig":"73"},{"size":5721,"mtime":1615450279669,"results":"141","hashOfConfig":"73"},{"size":701,"mtime":1615230346353,"results":"142","hashOfConfig":"73"},{"size":665,"mtime":1611816481368,"results":"143","hashOfConfig":"73"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},"t9s37o",{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"152"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"149"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"152"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"146"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"149"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"149"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"146"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"149"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"146"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"149"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"146"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"149"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"149"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"146"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/tga/Desktop/gypsy-capital/src/index.js",[],["305","306"],"/home/tga/Desktop/gypsy-capital/src/context/LoanContext.js",[],["307","308"],"/home/tga/Desktop/gypsy-capital/src/context/UserContext.js",[],["309","310"],"/home/tga/Desktop/gypsy-capital/src/context/ApprovalContext.js",[],"/home/tga/Desktop/gypsy-capital/src/context/createPersistDataContext.js",["311"],"import React, {createContext, useReducer, useEffect } from 'react';\n\n\nexport default (reducer, actions, initialState, persist, saveData) => {\n  const Context = createContext();\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState, () => {\n      if(persist) {\n        const localData = localStorage.getItem('gypsy');\n        return localData ? JSON.parse(localData) : {}\n      }\n    });\n\n    useEffect(() => {\n      if(persist) {\n        saveData(state);\n        // console.log(state);\n      }\n    }, [state])\n\n    const boundActions = {}\n\n    for(let key in actions) {\n      boundActions[key] = actions[key](dispatch);\n    }\n\n    return (\n      <Context.Provider value={{ state, ...boundActions }}>{children}</Context.Provider>\n    )\n  }\n\n  return { Context, Provider }\n}","/home/tga/Desktop/gypsy-capital/src/pages/SignUp/SignUp.jsx",["312","313","314"],"import React, { useContext, useEffect, useState } from 'react';\nimport Logo from '../../assets/logo.png';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport styles from './SignUp.module.scss';\nimport { Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport pageUrl from '../../routes/pageUrl';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\nconst SignUp = () => {\n\n  const { \n    state: { loading, error }, \n    registerUser, \n    getActiveUser, \n    clearErrors \n  } = useContext(AuthContext);\n\n  const [signUpValues, setSignUpvalues] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    mobileNumber: '',\n    password: '',\n    confirmPassword: '',\n    referralChoice: ''\n  });\n\n  const [validationErrors, setValidationErrors] = useState({\n    firstName: null,\n    lastName: null,\n    email: null,\n    mobileNumber: null,\n    password: null,\n    confirmPassword: null,\n    referralChoice: null\n  })\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearErrors();\n    }\n  }, [error])\n\n  const referralOptions = [\n    'Search Engine', \n    'Google Ads', \n    'Email', \n    'Radio', \n    'TV', \n    'Newspaper', \n    'Word of mouth',\n    'Facebook',\n    'Instagram',\n    'Other'\n  ]\n\n  const validateInput = () => {\n\n    const validMail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    let validPhoneNumber = /^[0]\\d{10}$/;\n\n    const errorsInit = {};\n    let fields = { ...signUpValues }\n\n    for(const key in fields) {\n      if(!fields[key]) {\n        errorsInit[key] = \"This field is required\";\n      } \n      if(fields.email && !fields.email.match(validMail)) {\n        errorsInit.email = \"Please enter a valid email address\"\n      } \n      if(fields.mobileNumber && !fields.mobileNumber.match(validPhoneNumber)) {\n        errorsInit.mobileNumber = \"Please enter a valid phone number\"\n      } \n      if(fields.password && fields.password.length < 8) {\n        errorsInit.password = \"Password must be at least 8 characters\";\n      }\n      if(fields.confirmPassword && fields.confirmPassword !== fields.password) {\n        errorsInit.confirmPassword = \"Your password does not match\"\n      }\n    }\n\n    setValidationErrors(errorsInit);\n\n    if(Object.entries(errorsInit).length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n\n  }\n\n  const handleSubmit = () => {\n    const validated = validateInput();\n    const signUpData = {\n      email: signUpValues.email,\n      firstName: signUpValues.firstName,\n      lastName: signUpValues.lastName,\n      phoneNumber: signUpValues.mobileNumber.replace('0', '234'),\n      password: signUpValues.password,\n      hearAboutUs: signUpValues.referralChoice,\n    }\n    console.log(signUpData);\n    if(validated) {\n      registerUser(signUpData, getActiveUser);\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <Link to={pageUrl.HOMEPAGE}><img src={Logo} alt=\"Gypsy Logo\" /></Link>\n      <h1>Create your account</h1>\n      <p className={styles.subtitle}>Hey there, let's setup your Gypsy Capital account</p>\n      <div className={styles.registerBox}>\n        <ToastContainer position=\"top-center\" />\n        <Row>\n          <Col sm={12} md={6} className=\"mb-4 mb-md-0\">\n            <InputField type=\"text\" \n              nameAttr=\"firstName\" \n              label=\"First Name\" \n              value={signUpValues.firstName} \n              changed={(val) => {\n                setValidationErrors({ ...validationErrors, firstName: null })\n                setSignUpvalues({...signUpValues, firstName: val})\n              }}\n              error={validationErrors.firstName && validationErrors.firstName}\n            />\n          </Col>\n          <Col sm={12} md={6} className=\"mb-4 mb-md-0\">\n            <InputField type=\"text\" \n              nameAttr=\"lastName\" \n              label=\"Last Name\" \n              value={signUpValues.lastName}\n              changed={(val) => {\n                setValidationErrors({ ...validationErrors, lastName: null })\n                setSignUpvalues({...signUpValues, lastName: val})\n              }}\n              error={validationErrors.lastName && validationErrors.lastName}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mt-0 mt-md-4\">\n          <Col sm={12} md={6} className=\"mb-4 mb-md-0\">\n            <InputField type=\"email\" \n              nameAttr=\"email\" \n              label=\"Email\" \n              value={signUpValues.email}\n              changed={(val) => {\n                setValidationErrors({ ...validationErrors, email: null })\n                setSignUpvalues({...signUpValues, email: val})\n              }}\n              error={validationErrors.email && validationErrors.email}\n            />\n          </Col>\n          <Col sm={12} md={6} className=\"mb-4 mb-md-0\">\n            <InputField type=\"phone\" \n              nameAttr=\"mobileNo\" \n              label=\"Mobile Number\" \n              value={signUpValues.mobileNumber}\n              changed={(val) => {\n                setValidationErrors({...validationErrors, mobileNumber: null})\n                setSignUpvalues({...signUpValues, mobileNumber: val})\n              }}\n              error={validationErrors.mobileNumber && validationErrors.mobileNumber}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mt-0 mt-md-4\">\n          <Col sm={12} md={6} className=\"mb-4 mb-md-0\">\n            <InputField type=\"password\" \n              nameAttr=\"password\" \n              label=\"Password\" \n              value={signUpValues.password}\n              changed={(val) => {\n                setValidationErrors({...validationErrors, password: null})\n                setSignUpvalues({...signUpValues, password: val})\n              }}\n              error={validationErrors.password && validationErrors.password}\n            />\n          </Col>\n          <Col sm={12} md={6} className=\"mb-4 mb-md-0\">\n            <InputField type=\"password\" \n              nameAttr=\"confirmPassword\" \n              label=\"Confirm Password\" \n              value={signUpValues.confirmPassword}\n              changed={(val) => {\n                setValidationErrors({...validationErrors, confirmPassword: null})\n                setSignUpvalues({...signUpValues, confirmPassword: val})\n              }}\n              error={validationErrors.confirmPassword && validationErrors.confirmPassword}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mt-0 mt-md-4\">\n          <Col className=\"mb-4 mb-md-0\">\n            <InputField type=\"select\" \n              label=\"How did you hear about us?\" \n              options={referralOptions} \n              nameAttr=\"publicity\"\n              changed={(val) => {\n                setValidationErrors({...validationErrors, referralChoice: null})\n                setSignUpvalues({...signUpValues, referralChoice: val})\n              }}\n              error={validationErrors.referralChoice && validationErrors.referralChoice}\n            />\n          </Col>\n        </Row>\n        <Button \n          className={ loading ? [styles.loadingBtn, \"mt-5\"].join(' ') : \"mt-5\" } \n          fullWidth \n          clicked={handleSubmit} \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n          disabled={loading}\n          loading={loading}\n        >\n          Sign Up\n        </Button>\n        <p className={[styles.authLink, 'mt-3'].join(' ')}>\n          Already have an account? <Link to={pageUrl.SIGNIN_PAGE}>Log in</Link>\n        </p>\n        <p className={styles.legalLink}>\n          By continuing, you agree to our <Link to={pageUrl.TERMS_CONDITIONS_PAGE}>Terms and Conditions</Link> of service and <Link to={pageUrl.PRIVACY_POLICY_PAGE}>Privacy Policy.</Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n\n\nexport default SignUp;","/home/tga/Desktop/gypsy-capital/src/pages/HomePage/HomePage.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/Faqs/Faqs.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/AboutUs/AboutUs.jsx",["315","316","317"],"/home/tga/Desktop/gypsy-capital/src/pages/LoanCalculator/LoanCalculator.jsx",["318","319"],"/home/tga/Desktop/gypsy-capital/src/pages/LoanList/LoanList.jsx",["320"],"/home/tga/Desktop/gypsy-capital/src/pages/ProcessorLoans/ProcessorLoans.jsx",["321","322"],"import React, { useEffect, useContext } from 'react';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport styles from './ProcessorLoans.module.scss';\nimport { routes } from '../../routes/sidebarRoutes';\nimport { useLocation } from 'react-router';\nimport LoanList from '../../components/LoanList/LoanList';\nimport { Context as LoanContext } from '../../context/LoanContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport Loader from '../../components/Loader/Loader';\n\n\nconst ProcessorLoans = () => {\n\n  const location = useLocation();\n  const processorRoutes = routes[2];\n\n  const { state: { user } } = useContext(AuthContext);\n  const { state: { loans, loading }, retrieveClientLoans } = useContext(LoanContext);\n\n  useEffect(() => {\n    retrieveClientLoans();\n  }, []);\n\n  return (\n    <Dashboard sidebarRoutes={processorRoutes} location={location}>\n       { !loading ? <LoanList loanList={loans} userRole={user.role} /> : <Loader /> }\n    </Dashboard>\n  )\n}\n\n\nexport default ProcessorLoans;","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorLoanDetails/ProcessorLoanDetails.jsx",["323","324","325","326","327","328","329","330"],"/home/tga/Desktop/gypsy-capital/src/pages/ProcessorClientDetails/ProcessorClientDetails.jsx",["331","332"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { routes } from '../../routes/sidebarRoutes';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport styles from './ProcessorClientDetails.module.scss';\nimport NavTabs from '../../components/NavTabs/NavTabs';\nimport { Biodata, NextOfKin, Bank, Employer, ClientLoan } from '../ClientDetails/ClientDetails';\nimport { Row, Col, Modal } from 'react-bootstrap';\nimport { IoDocumentTextOutline } from 'react-icons/io5';\nimport { RiDeleteBin5Line } from 'react-icons/ri'\nimport { FiEye } from 'react-icons/fi';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport Loader from '../../components/Loader/Loader';\nimport useLoanDetails from '../../hooks/useLoanDetails';\n\n\nconst DocCard = ({ docTitle, docLink }) => {\n\n  const [show, setShow] = useState(false);\n\n  const openDoc = () => {\n    setShow(true);\n  }\n\n  const handleClose = () => {\n    setShow(false);\n  }\n\n  return (\n    <>\n      <div className={styles.documentCard}>\n        <div style={{ width: \"100%\", textAlign: \"center\"}}>\n          <IoDocumentTextOutline color=\"#741763\" size=\"5em\" />\n          <div className={styles.ctrlBtn}>\n            <RiDeleteBin5Line size=\"1.3em\" color=\"#741763\" />\n            <FiEye size=\"1.3em\" color=\"#741763\" onClick={openDoc} />\n          </div>\n        </div>\n      </div>\n      <h4 className={styles.docTitle}>{docTitle}</h4>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Body className={styles.documentImg}>\n          <img width=\"100%\" src={docLink} />\n        </Modal.Body>\n      </Modal>\n    </>\n  )\n}\n\nexport const DocTab = ({ userId }) => {\n\n  const [ loanDeets ] = useLoanDetails(userId);\n\n  console.log(loanDeets); \n\n  return (\n    <>\n      <Row>\n        <Col>\n          <DocCard docTitle=\"Identification\" docLink={loanDeets?.client[0]?.identity?.identityImageUrl} />\n        </Col>\n        <Col>\n          <DocCard docTitle=\"Proof of Address\" docLink={loanDeets?.residence[0]?.residenceProof} />\n        </Col>\n        <Col>\n          <DocCard docTitle=\"Official Document\" docLink={loanDeets?.employment[0]?.officialDocumentUrl} />\n        </Col>\n        <Col>\n          <DocCard docTitle=\"Statement of Account\" docLink={loanDeets?.bank[0]?.accountStatementUrl} />\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nconst ProcessorClientDetails = () => {\n\n  const location = useLocation();\n  const processorRoute = routes[2];\n  const { clientId } = useParams();\n  console.log(clientId);\n\n  const { state: { userDetails, loading }, getClientDetails } = useContext(UserContext);\n  const { state: { user } } = useContext(AuthContext);\n\n  useEffect(() => {\n    getClientDetails(clientId);\n  }, []);\n\n  console.log(userDetails);\n\n  const [detailSection, setDetailSection] = useState('biodata');\n\n  const navArray = [\n    {\n      title: \"Biodata\",\n      shortlink: \"biodata\"\n    },\n    {\n      title: \"Next of Kin Info\",\n      shortlink: \"kin\"\n    },\n    {\n      title: \"Bank Info\",\n      shortlink: \"bank\"\n    },\n    {\n      title: \"Employment Info\",\n      shortlink: \"employ\"\n    },\n    {\n      title: \"Document\",\n      shortlink: \"doc\"\n    },\n    {\n      title: \"Loans\",\n      shortlink: \"loans\"\n    },\n  ]\n\n  const setActiveTab = (link) => {\n    setDetailSection(link);\n  }\n\n\n  return (\n    <>\n      <Dashboard sidebarRoutes={processorRoute} location={location}>\n        <NavTabs navs={navArray} setActive={setActiveTab} currentTab={detailSection } />\n        { !loading ? <div className={detailSection !== \"loans\" && styles.detailFields}>\n          { detailSection === \"biodata\" && \n            <Biodata \n              data={userDetails && {...userDetails.bioData, ...userDetails.residence}}\n              userId={userDetails?.clientId}\n            /> \n          }\n          { detailSection === \"kin\" && \n            <NextOfKin \n              data={userDetails && { ...userDetails.nextOfKin }}\n            /> \n          }\n          { detailSection === \"bank\" && \n            <Bank \n              data={userDetails && { ...userDetails.bank }}\n            /> \n          }\n          { detailSection === \"employ\" && \n            <Employer \n              data={userDetails.employer && { ...userDetails.employer }}\n            /> \n          }\n          { detailSection === \"doc\" && <DocTab userId={userDetails?.clientId} /> }\n          { detailSection === \"loans\" && \n            <ClientLoan \n              userRole={user.role}\n              userId={userDetails && userDetails.clientId}\n            /> \n          }\n        </div> : <Loader />}\n      </Dashboard>\n    </>\n  )\n}\n\n\nexport default ProcessorClientDetails;","/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerLoanDetails/AuthorizerLoanDetails.jsx",["333"],"/home/tga/Desktop/gypsy-capital/src/components/InputField/InputField.js",[],"/home/tga/Desktop/gypsy-capital/src/components/NavBar/NavBar.jsx",["334"],"/home/tga/Desktop/gypsy-capital/src/components/LoanList/LoanList.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/StatBox/StatBox.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/OfferLetter/OfferLetter.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/Footer/Footer.jsx",["335"],"/home/tga/Desktop/gypsy-capital/src/components/LoanContactForm/LoanContactForm.jsx",["336"],"/home/tga/Desktop/gypsy-capital/src/components/EmployerInfoForm/EmployerInfoForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/ProfileView/ProfileView.jsx",["337","338"],"import React, { useState, useContext, useRef, useEffect } from 'react';\nimport styles from './ProfileView.module.scss';\nimport { Row, Col } from 'react-bootstrap';\nimport InputField from '../InputField/InputField';\nimport Button from '../Button/Button';\nimport { BiCreditCard, BiPlus } from 'react-icons/bi';\nimport { RiBankFill } from 'react-icons/ri';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { Context as UserContext } from '../../context/UserContext';\nimport MonoWidget from '../../components/MonoWidget/MonoWidget';\n\n\nconst ProfileView = () => {\n\n  const [visibleSection, setVisibleSection] = useState('personalInfo');\n  const [profileImg, setProfileImg] = useState(null);\n  const [visiblePaymentSection, setVisiblePaymentSection] = useState('card');\n\n  const [profileData, setProfileData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phoneNo: \"\",\n    bvn: \"\",\n    residence: \"\"\n  })\n\n  const profilePicRef = useRef();\n\n  const { state: { user } } = useContext(AuthContext);\n  const { \n    state: { userDetails },\n    getClientDetails, \n  } = useContext(UserContext);\n\n  useEffect(() => {\n    getClientDetails(user.user_id);\n  }, [])\n\n  useEffect(() => {\n    if(userDetails) {\n      // setProfileData({\n      //   firstName\n      // })\n      console.log(userDetails)\n      const { bioData, identity, residence } = userDetails;\n      setProfileData({\n        firstName: bioData.firstName,\n        lastName: bioData.lastName,\n        email: bioData.email,\n        phoneNo: bioData.phoneNumber.replace('234', '0'),\n        bvn: bioData.BVN,\n        residence: residence.street\n      })\n      setProfileImg(identity.profilePhoto)\n    }\n  }, [userDetails])\n\n  const goToProfileSection = (section) => {\n    console.log('works');\n    setVisibleSection(section);\n  }\n\n  return (\n    <div className={styles.profileBox}>\n      <div className={styles.header}>\n        <Row>\n          <Col \n            onClick={() => goToProfileSection('personalInfo')} \n            className={[styles.borderStyle, styles.tabCol].join(' ')}\n          >\n            <p \n              className={[styles.tabMenu, visibleSection === \"personalInfo\" && styles.activeTab1].join(' ')}\n            >\n              Personal Information\n            </p>\n          </Col>\n          <Col \n            onClick={() => goToProfileSection('security')} \n            className={[styles.borderStyle, styles.tabCol].join(' ')}\n          >\n            <p\n              className={[styles.tabMenu, visibleSection === \"security\" && styles.activeTab2].join(' ')}\n            >\n              Security\n            </p>\n          </Col>\n          <Col\n            onClick={() => goToProfileSection('payment')} \n            className={styles.tabCol}\n          >\n            <p\n              className={[styles.tabMenu, visibleSection === \"payment\" && styles.activeTab3].join(' ')}\n            >\n              Payment\n            </p>\n          </Col>\n        </Row>\n      </div>\n      <div className={styles.body}>\n        {visibleSection === \"personalInfo\" && <div>\n          <div className={styles.profilePictureSection}>\n            { profileImg && <img src={profileImg} alt=\"profile image\"/> }\n          </div>\n          <div className={styles.uploadBtn}>\n            <input type=\"file\" id=\"profilePic\" hidden ref={profilePicRef} />\n            <label  \n              htmlFor=\"profilePic\"\n            >\n              Change Profile Picture\n            </label>\n          </div>\n          <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"First Name\"\n              type=\"text\"\n              nameAttr=\"firstName\"\n              value={profileData.firstName}\n            />\n          </Col> \n          <Col>\n            <InputField \n              label=\"Last Name\"\n              type=\"text\"\n              nameAttr=\"lastName\"\n              value={profileData.lastName}\n            />\n          </Col> \n          </Row> \n          <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"Email\"\n              type=\"email\"\n              nameAttr=\"email\"\n              value={profileData.email}\n            />\n          </Col> \n          <Col>\n            <InputField \n              label=\"Phone Number\"\n              type=\"text\"\n              nameAttr=\"phoneNumber\"\n              value={profileData.phoneNo}\n            />\n          </Col> \n          </Row> \n          <Row>\n          <Col>\n            <InputField \n              label=\"BVN\"\n              type=\"text\"\n              nameAttr=\"bvn\"\n              value={profileData.bvn}\n            />\n          </Col> \n          <Col>\n            <InputField \n              label=\"Residential Address\"\n              type=\"text\"\n              nameAttr=\"address\"\n              value={profileData.residence}\n            />\n          </Col> \n          </Row> \n          <Button className=\"mt-5\" fullWidth  bgColor=\"#741763\" size=\"lg\" color=\"#EBEBEB\">\n            Edit Info\n          </Button>\n        </div>}\n        { visibleSection === \"security\" &&\n          <div className={styles.security}>\n            <h2>CHANGE PASSWORD</h2>\n            <Row className=\"mb-4\">\n              <Col>\n                <InputField \n                  type=\"password\"\n                  label=\"Current Password\"\n                  nameAttr=\"currPassword\"\n                />\n              </Col>\n            </Row>\n            <Row className=\"mb-4\">\n              <Col>\n                <InputField \n                  type=\"password\"\n                  label=\"Current Password\"\n                  nameAttr=\"currPassword\"\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <InputField \n                  type=\"password\"\n                  label=\"Current Password\"\n                  nameAttr=\"currPassword\"\n                />\n              </Col>\n            </Row>\n          </div>\n        }\n        { visibleSection === \"payment\" && \n          <div className={styles.payment}>\n            <div className={styles.btnGroup}>\n              <button \n                className={ visiblePaymentSection === 'card' && styles.activeMenu }\n                onClick={() => setVisiblePaymentSection('card')}\n              >\n                <BiCreditCard className={styles.icon} />\n                Card\n              </button>\n              <button\n                className={ visiblePaymentSection === 'bank' && styles.activeMenu }\n                onClick={() => setVisiblePaymentSection('bank')}\n              >\n                <RiBankFill className={styles.icon} />\n                Bank\n              </button>\n            </div>\n            <div className={styles.content}>\n              { visiblePaymentSection === \"card\" && <div className={styles.addCard}>\n                <div className={styles.cardInner}>\n                  <BiPlus size=\"2em\" />\n                  <p>Add Card</p>\n                </div>\n              </div> }\n              { visiblePaymentSection === \"bank\" && <div className={styles.monoLink}>\n                <div>\n                  <h4>To completely setup your account, you need to link your bank</h4>\n                  <MonoWidget />\n                </div>\n              </div> }\n            </div>\n          </div>\n        }\n      </div>\n    </div>\n  )\n}\n\n\nexport default ProfileView;","/home/tga/Desktop/gypsy-capital/src/components/BvnForm/BvnForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/ProgressBar/ProgressBar.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/MonoWidget/MonoWidget.jsx",["339","340","341"],"import React, { useContext, useEffect } from 'react';\nimport MonoConnect from '@mono.co/connect.js';\nimport Button from '../Button/Button';\nimport { Context as MonoContext } from '../../context/MonoContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { toast, ToastContainer } from 'react-toastify';\n\nexport default function Mono() {\n\n  const { \n    state : { linkSuccess, error }, \n    authenticateUser, \n    resetLinkSuccess,\n    clearErrors\n  } = useContext(MonoContext);\n  const { state: { user } } = useContext(AuthContext);\n\n  const monoConnect = React.useMemo(() => {\n    const monoInstance = new MonoConnect({\n      onClose: () => console.log('Widget closed'),\n      onLoad: () => console.log('Widget loaded successfully'),\n      onSuccess: ({ code }) => {\n        console.log(`Linked successfully: ${code}`);\n        authenticateUser(user.user_id, code)\n      },\n      // key: \"test_pk_4f5soJVmo31hCbKePbfo\",\n      key: \"live_pk_PvDfizVtAJPsoplNU8r2\"\n    })\n\n    monoInstance.setup()\n    \n    return monoInstance;\n  }, [])\n\n  useEffect(() => {\n    if(linkSuccess) {\n      toast.success(\"Your financial account has been successfully linked\")\n      // resetLinkSuccess();\n    }\n  }, [linkSuccess]);\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error)\n      clearErrors();\n    }\n  }, [error])\n\n  return (\n    <>\n      <ToastContainer position=\"top-center\" />\n      <Button\n        className=\"mt-2\" \n        bgColor=\"#741763\" \n        size=\"lg\" \n        color=\"#EBEBEB\"\n        clicked={() => monoConnect.open()}\n      >\n        Link Your Financial Account\n      </Button>\n    </>\n  )\n}","/home/tga/Desktop/gypsy-capital/src/components/AccountSetupModal/AccountSetupModal.jsx",["342","343","344","345","346","347"],"import React, { useContext, useEffect, useMemo, useState, useRef } from 'react';\nimport styles from './AccountSetupModal.module.scss';\nimport { Modal, Row, Col } from 'react-bootstrap';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport { validateInput } from '../../utils/validateInput';\nimport { nigeriaStates } from '../../utils/nigeriaStates';\nimport { Context as BankContext } from '../../context/BankCotext';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport FileUploadButton from '../FileUploadButton/FileUploadButton';\nimport { FaCloudUploadAlt } from 'react-icons/fa';\nimport { toast, ToastContainer } from 'react-toastify';\nimport Loader from '../Loader/Loader';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport BeatLoader from 'react-spinners/BeatLoader';\n\n\nexport const VerifyBvn = ({ submit }) => {\n\n  const [bvn, setBvn] = useState('');\n  const { state: { loading } } = useContext(UserContext);\n\n  const submitBvn = () => {\n    if(bvn) {\n      submit(bvn);\n    }\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Verify BVN</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row>\n            <Col>\n              <InputField \n                type=\"text\"\n                nameAttr=\"otp\"\n                label=\"Enter Client's BVN\"\n                value={bvn}\n                changed={(val) => {\n                  setBvn(val)\n                }}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button\n          fullWidth\n          bgColor=\"#741763\" \n          size=\"lg\" \n          clicked={submitBvn}\n          color=\"#EBEBEB\"\n          loading={loading}\n          disabled={loading}\n        >\n          Verify\n        </Button>\n        <p className={styles.hint}>To get your BVN, Dial *565*0#</p>\n      </Modal.Footer>\n    </>\n  )\n}\n\n\nexport const PersonalInfo = ({ submit }) => {\n\n  const { state: { userDetails }, getClientDetails } = useContext(UserContext);\n  const { state: { currentAddedUser} } = useContext(AuthContext);\n\n\n  const [biodata, setBiodata] = useState({\n    fullName: '',\n    dateOfBirth: '',\n    bvnPhoneNo: '',\n    email: '',\n    phoneNo: '',\n    altPhone: '',\n    gender: ''\n  });\n\n  const [biodataErrors, setBiodataErrors] = useState({\n    fullName: null,\n    dateOfBirth: null,\n    bvnPhoneNo: null,\n    email: null,\n    phoneNo: null,\n    altPhone: null,\n    gender: null\n  });\n\n\n  useEffect(() => {\n    const { user_id } = currentAddedUser;\n    getClientDetails(user_id);\n  }, []);\n\n  useEffect(() => {\n    if(userDetails) {\n      const { bioData } = userDetails;\n      setBiodata({ ...biodata, \n        fullName: `${bioData.firstName} ${bioData.lastName}`,\n        email: bioData.email,\n        phoneNo: bioData.phoneNumber.replace('234', '0'),\n        dateOfBirth: bioData.DOB,\n        bvnPhoneNo: bioData.bvnPhoneNumber\n      })\n    }\n  }, [currentAddedUser, userDetails]);\n\n\n  const addPersonalInfo = () => {\n    const validated = validateInput(biodata, setBiodataErrors);\n    if(validated) {\n      submit(biodata);\n    }\n  }\n  if(!userDetails) {\n    return <Loader />\n  }\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Personal Info</h2>\n        </Modal.Title>\n        {/* <p className={styles.subtitle}>Personal Info</p> */}\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Full name\"\n                type=\"text\"\n                nameAttr=\"fullname\"\n                value={biodata.fullName}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, fullName: null })\n                  setBiodata({ ...biodata, fullName: val})\n                }}\n                error={biodataErrors.fullName && biodataErrors.fullName}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Date of Birth\"\n                type=\"text\"\n                nameAttr=\"dob\"\n                value={biodata.dateOfBirth}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, dateOfBirth: null })\n                  setBiodata({ ...biodata, dateOfBirth: val})\n                }}\n                error={biodataErrors.dateOfBirth && biodataErrors.dateOfBirth}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"BVN-linked Phone Number\"\n                type=\"text\"\n                nameAttr=\"bvnPhoneNo\"\n                value={biodata.bvnPhoneNo}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, bvnPhoneNo: null })\n                  setBiodata({ ...biodata, bvnPhoneNo: val})\n                }}\n                error={biodataErrors.bvnPhoneNo && biodataErrors.bvnPhoneNo}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Email\"\n                type=\"email\"\n                nameAttr=\"email\"\n                value={biodata.email}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, email: null })\n                  setBiodata({ ...biodata, email: val})\n                }}\n                error={biodataErrors.email && biodataErrors.email}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Phone Number\"\n                type=\"text\"\n                nameAttr=\"PhoneNo\"\n                value={biodata.phoneNo}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, phoneNo: null })\n                  setBiodata({ ...biodata, phoneNo: val})\n                }}\n                error={biodataErrors.phoneNo && biodataErrors.phoneNo}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Alternative Phone Number\"\n                type=\"text\"\n                nameAttr=\"altPhoneNo\"\n                value={biodata.altPhone}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, altPhone: null })\n                  setBiodata({ ...biodata, altPhone: val})\n                }}\n                error={biodataErrors.altPhone && biodataErrors.altPhone}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <InputField \n                label=\"Gender\"\n                type=\"select\"\n                options={['Female', 'Male', 'Other']}\n                nameAttr=\"gender\"\n                value={biodata.gender}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, gender: null })\n                  setBiodata({ ...biodata, gender: val})\n                }}\n                error={biodataErrors.gender && biodataErrors.gender}\n              />\n            </Col>\n          </Row>\n          <Modal.Footer>\n            <Button \n              className=\"mt-4\" \n              clicked={addPersonalInfo} \n              fullWidth \n              bgColor=\"#741763\" \n              size=\"lg\" \n              color=\"#EBEBEB\"\n            >\n              Save & Continue\n            </Button>\n          </Modal.Footer>\n        </div>\n      </Modal.Body>\n    </>\n  )\n}\n\n\nexport const Residence = ({ submit }) => {\n\n  const [residentialInfo, setResidentialInfo] = useState({\n    street: '',\n    city: '',\n    state: ''\n  });\n\n  const [residentialErrors, setResidentialErrors] = useState({\n    street: null,\n    city: null,\n    state: null\n  });\n\n  const addResidence = () => {\n    const validated = validateInput(residentialInfo, setResidentialErrors);\n    if(validated) {\n      submit(residentialInfo);\n    }\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Residential Address</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Street\"\n                type=\"text\"\n                nameAttr=\"residentStreet\"\n                value={residentialInfo.street}\n                changed={(val) => {\n                  setResidentialErrors({ ...residentialErrors, street: null })\n                  setResidentialInfo({ ...residentialInfo, street: val})\n                }}\n                error={residentialErrors.street && residentialErrors.street}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"City\"\n                type=\"text\"\n                nameAttr=\"city\"\n                value={residentialInfo.city}\n                changed={(val) => {\n                  setResidentialErrors({ ...residentialErrors, city: null })\n                  setResidentialInfo({ ...residentialInfo, city: val})\n                }}\n                error={residentialErrors.city && residentialErrors.city}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"State\"\n                type=\"select\"\n                options={nigeriaStates}\n                nameAttr=\"state\"\n                value={residentialInfo.state}\n                changed={(val) => {\n                  setResidentialErrors({ ...residentialErrors, state: null })\n                  setResidentialInfo({ ...residentialInfo, state: val})\n                }}\n                error={residentialErrors.state && residentialErrors.state}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addResidence} \n          fullWidth \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\n\nexport const NextOfKin = ({ submit }) => {\n\n  const [kinInfo, setKinInfo] = useState({\n    fullName: '',\n    relationship: '',\n    email: '',\n    phoneNo: '',\n    address: ''\n  });\n\n  const [kinErrors, setKinErrors] = useState({\n    fullName: null,\n    relationship: null,\n    email: null,\n    phoneNo: null,\n    address: null\n  });\n\n  const addNextOfKin = () => {\n    const validated = validateInput(kinInfo, setKinErrors);\n    if(validated) {\n      submit(kinInfo);\n    }\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Next of Kin Info</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Full name\"\n                type=\"text\"\n                nameAttr=\"kinFullname\"\n                value={kinInfo.fullName}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, fullName: null })\n                  setKinInfo({ ...kinInfo, fullName: val})\n                }}\n                error={kinErrors.fullName && kinErrors.fullName}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Relationship\"\n                type=\"text\"\n                nameAttr=\"kinRelationship\"\n                value={kinInfo.relationship}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, relationship: null })\n                  setKinInfo({ ...kinInfo, relationship: val})\n                }}\n                error={kinErrors.relationship && kinErrors.relationship}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Email Address\"\n                type=\"email\"\n                nameAttr=\"kinEmail\"\n                value={kinInfo.email}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, email: null })\n                  setKinInfo({ ...kinInfo, email: val})\n                }}\n                error={kinErrors.email && kinErrors.email}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Phone Number\"\n                type=\"text\"\n                nameAttr=\"kinPhone\"\n                value={kinInfo.phoneNo}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, phoneNo: null })\n                  setKinInfo({ ...kinInfo, phoneNo: val})\n                }}\n                error={kinErrors.phoneNo && kinErrors.phoneNo}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Residential Address\"\n                type=\"text\"\n                nameAttr=\"kinAddress\"\n                placeholder=\"Street address to the nearest bus stop\"\n                value={kinInfo.address}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, address: null })\n                  setKinInfo({ ...kinInfo, address: val})\n                }}  \n                error={kinErrors.address && kinErrors.address}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addNextOfKin} \n          fullWidth \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\nexport const BankInfo = ({ submit }) => {\n\n  const { state: { loading } } = useContext(UserContext);\n\n  const [bankInfo, setBankInfo] = useState({\n    bankName: '',\n    accountType: '',\n    accountNumber: '',\n    accountName: ''\n  });\n\n  const [bankInfoErrors, setBankInfoErrors] = useState({\n    bankName: null,\n    accountType: null,\n    accountNumber: null,\n    accountName: null\n  });\n\n  const { \n    state: { bankList, userBankDetails, bankLoading }, \n    getBankList,\n    verifyBankInfo\n  } = useContext(BankContext);\n\n  useEffect(() => {\n      getBankList();\n  }, []);\n\n  const bankNames = useMemo(() => {\n    return bankList ? \n      bankList.map((bank) => bank.name) :\n      []\n  }, [bankList]);\n\n  useEffect(() => {\n    if(bankInfo.accountNumber.length === 10 && bankInfo.bankName) {\n      const bank = bankList.find(bank => bank.name.toLowerCase() === bankInfo.bankName);\n      const bankCode = bank.code;\n      console.log(bankCode)\n      verifyBankInfo(bankInfo.accountNumber, bankCode)\n    }\n  }, [bankInfo.accountNumber, bankInfo.bankName])\n\n\n  useEffect(() => {\n    console.log(userBankDetails);\n    if(userBankDetails) {\n      setBankInfo({ ...bankInfo, accountName: userBankDetails.account_name })\n    }\n  }, [userBankDetails]);\n\n  const addBankInfo = () => {\n    const validated = validateInput(bankInfo, setBankInfoErrors);\n    if(validated) {\n      submit(bankInfo);\n    }\n  }\n\n  return(\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Bank Info</h2>\n          <p className={styles.subtitle}>Add a bank account where we can send investment proceeds or loan requests to.</p>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"select\"\n                label=\"Bank\"\n                options={bankNames}\n                nameAttr=\"bank\"\n                value={bankInfo.bankName}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, bankName: null })\n                  setBankInfo({ ...bankInfo, bankName: val})\n                }}\n                error={bankInfoErrors.bankName && bankInfoErrors.bankName}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Account Type\"\n                type=\"select\"\n                options={[\"Savings\", \"Current\"]}\n                nameAttr=\"acountType\"\n                value={bankInfo.accountType}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, accountType: null })\n                  setBankInfo({ ...bankInfo, accountType: val})\n                }}\n                error={bankInfoErrors.accountType && bankInfoErrors.accountType}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"text\"\n                label=\"Account Number\"\n                nameAttr=\"accountNo\"\n                value={bankInfo.accountNumber}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, accountNumber: null })\n                  setBankInfo({ ...bankInfo, accountNumber: val})\n                }}\n                error={bankInfoErrors.accountNumber && bankInfoErrors.accountNumber}\n              />\n            </Col>\n            <Col>\n              { !bankLoading ? <InputField \n                label=\"Account Name\"\n                type=\"text\"\n                nameAttr=\"accountName\"\n                value={bankInfo.accountName}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, accountName: null })\n                  setBankInfo({ ...bankInfo, accountName: val})\n                }}\n                error={bankInfoErrors.accountName && bankInfoErrors.accountName}\n              /> : \n              <div className={styles.loaderWrapper}>\n                <BeatLoader color=\"#741763\" size={10} />\n              </div>\n              }\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addBankInfo} \n          fullWidth \n          loading={loading}\n          disabled={loading}\n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\nexport const IdentityForm = ({ submit }) => {\n\n  const { state: { loading } } = useContext(UserContext);\n  const idFileRef = useRef();\n  const passportFileRef= useRef();\n\n  const [idType, setIdType] = useState('');\n\n  const addIdentityInfo = () => {\n    if(idFileRef.current.files.length > 0) {\n      if(passportFileRef.current.files.length > 0) {\n        if(idType) {\n          const idFile = idFileRef.current.files[0];\n          const passportFile = passportFileRef.current.files[0];\n          submit(idFile, passportFile, idType);\n        }\n      } else {\n        toast.error(\"Please upload a passport photograph of yourself\")\n      }\n    } else {\n      toast.error(\"Please upload a verified identification card\")\n    }\n  }\n\n  return (\n    <>\n      <ToastContainer position=\"top-center\" />\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Identity</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <div className={styles.validId}>\n            <p className={styles.validID}>Upload a valid government issued Identification</p>\n            <InputField \n              type=\"select\"\n              options={['International Passport', \"Driver's License\", 'Voters Card', 'National Identity Card']}\n              nameAttr=\"identityType\"\n              value={idType}\n              changed={(val) => setIdType(val)}\n            />\n            <FileUploadButton \n              label=\"Choose File\" \n              icon={<FaCloudUploadAlt className=\"ml-3\" size=\"1.1em\" />}\n              id=\"id-upload\" \n              className=\"mt-3\"\n              fileRef={idFileRef}\n              fullwidth\n            />\n          </div>\n          <div className={styles.passportVerify}>\n            <p className={styles.passportImg}>Please upload a clear and resent passport photograph.</p>\n            <FileUploadButton \n              label=\"Choose File\" \n              icon={<FaCloudUploadAlt className=\"ml-3\" size=\"1.1em\" />}\n              id=\"passport-upload\"  \n              fileRef={passportFileRef}\n              fullwidth\n            />\n          </div>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addIdentityInfo} \n          fullWidth \n          loading={loading}\n          disabled={loading}\n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\n\nexport const OnboardSuccess = ({ close }) => {\n\n  useEffect(() => {\n    setTimeout(() => {\n      close();\n    }, 3000);\n  }, []);\n\n  return (\n    <>\n      <Modal.Body>\n        <div className={styles.onboard}>\n          <FaCheckCircle size=\"4em\" color=\"#741763\" />\n          <h4>User successfully onboarded.</h4>\n          <Button\n            className=\"mt-4\" \n            clicked={close} \n            bgColor=\"#741763\" \n            size=\"sm\" \n            color=\"#EBEBEB\"\n          >\n            Continue\n          </Button>\n        </div>\n      </Modal.Body>\n    </>\n  )\n}","/home/tga/Desktop/gypsy-capital/src/api/gypsy-web.js",[],"/home/tga/Desktop/gypsy-capital/src/routes/pageUrl.js",[],"/home/tga/Desktop/gypsy-capital/src/context/BankCotext.js",[],"/home/tga/Desktop/gypsy-capital/src/context/RepaymentContext.js",[],"/home/tga/Desktop/gypsy-capital/src/pages/SignIn/SignIn.jsx",["348"],"/home/tga/Desktop/gypsy-capital/src/pages/OtpVerify/OtpVerify.jsx",["349"],"import React, { useContext, useEffect, useState } from 'react';\nimport styles from './OtpVerify.module.scss';\nimport Logo from '../../assets/logo.png';\nimport { Row, Col } from 'react-bootstrap';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport { Link } from 'react-router-dom';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst OtpVerify = () => {\n\n  const [otp, setOtp] = useState('');\n  const [validationErr, setValidationErr] = useState(null);\n\n  const { \n      state: { error, loading, message, user }, \n      verifyOtp, \n      getActiveUser, \n      resendOtp,\n      clearErrors \n  } = useContext(AuthContext);\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearErrors();\n    }\n  }, [error])\n\n  useEffect(() => {\n    if(message) {\n      toast.success(message);\n    }\n  }, [message])\n\n  const handleSubmit = () => {\n    if(!otp) {\n      setValidationErr('You need to enter your otp to verify your account')\n    } else {\n      verifyOtp(otp, user.email, getActiveUser);\n    }\n  }\n\n  const resendCode = () => {\n    resendOtp(user.email);\n  }\n\n  return(\n    <div className={styles.container}>\n      <img src={Logo} alt=\"Gypsy Logo\" />\n      <h1>Verify Your Details</h1>\n      <p>Please enter the OTP sent to your email to continue</p>\n      <div className={styles.verifyBox}>\n        <ToastContainer position=\"top-center\" />\n        <Row>\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"One Time Password\"\n              nameAttr=\"otp\"\n              value={otp}\n              changed={(val) => {\n                setValidationErr(null)\n                setOtp(val)\n              }}\n              error={validationErr && validationErr}\n            />\n          </Col>\n        </Row>\n        <Button \n          clicked={handleSubmit} \n          fullWidth \n          className=\"mt-4\" \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n          disabled={loading}\n          loading={loading}\n        >\n          Verify Code\n        </Button>\n        <p className={[styles.authLink, 'mt-3'].join(' ')}>\n          Didn’t receive code? <Link onClick={resendCode}>Resend OTP</Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n\n\nexport default OtpVerify;","/home/tga/Desktop/gypsy-capital/src/pages/Profile/Profile.jsx",["350","351","352"],"/home/tga/Desktop/gypsy-capital/src/pages/ClientDetails/ClientDetails.jsx",["353","354","355","356","357","358","359"],"import React, { useContext, useEffect, useState, useMemo } from 'react';\nimport styles from './ClientDetails.module.scss';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport { routes } from '../../routes/sidebarRoutes';\nimport { useLocation, useParams, Link } from 'react-router-dom';\nimport InputField from '../../components/InputField/InputField';\nimport { Row, Col, Table, Pagination } from 'react-bootstrap';\nimport NavTabs from '../../components/NavTabs/NavTabs';\nimport Button from '../../components/Button/Button';\nimport LoanModal from '../../components/LoanModal/LoanModal';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { Context as LoanContext } from '../../context/LoanContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport Loader from '../../components/Loader/Loader';\nimport usePagination from '../../hooks/usePagination';\nimport { numberWithCommas } from '../../utils/nigeriaStates';\nimport { TiCancelOutline } from 'react-icons/ti';\nimport useLoanDetails from '../../hooks/useLoanDetails';\nimport _ from 'lodash';\n\n\nexport const Biodata = ({ data, userId }) => {\n\n  const [ loanDeets ] = useLoanDetails(userId);\n\n  const [biodata, setBiodata] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    gender: \"\",\n    dateOfBirth: \"\",\n    emailAddress: \"\",\n    phoneNumber: \"\",\n    altPhoneNumber: \"\",\n    residentialAddress: \"\",\n  });\n\n  const [residentialStatus, setResidentialStatus] = useState('');\n\n  useEffect(() => {\n    if(data) {\n      setBiodata({\n        ...biodata,\n        firstName: data.firstName,\n        lastName: data.lastName,\n        gender: _.capitalize(data.gender),\n        dateOfBirth: data.DOB,\n        emailAddress: data.email,\n        phoneNumber: data.phoneNumber.replace('234', '0'),\n        altPhoneNumber: data.alternativePhoneNumber,\n        residentialAddress: `${data.street}, ${_.capitalize(data.state)}`,\n        // residentialStatus: data\n      })\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if(loanDeets) {\n      setResidentialStatus(_.capitalize(loanDeets?.residence[0]?.residentialStatus))\n    }\n  }, [loanDeets])\n\n  return (\n    <>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"First Name\"\n            nameAttr=\"firstName\"\n            value={biodata.firstName}\n            disable={true}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Last Name\"\n            nameAttr=\"lastName\"\n            value={biodata.lastName}\n            disable={true}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Gender\"\n            nameAttr=\"gender\"\n            value={biodata.gender}\n            disable={true}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Date of Birth\"\n            nameAttr=\"dob\"\n            value={biodata.dateOfBirth}\n            disable={true}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"email\"\n            label=\"Email Address\"\n            nameAttr=\"emailAddress\"\n            value={biodata.emailAddress}\n            disable={true}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Phone Number\"\n            nameAttr=\"phoneNo\"\n            value={biodata.phoneNumber}\n            disable={true}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Residential Status\"\n            nameAttr=\"residentStatus\"\n            value={   residentialStatus}\n            disable={true}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Alternative Phone Number\"\n            nameAttr=\"altPhoneNo\"\n            value={biodata.altPhoneNumber}\n            disable={true}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Residential Address\"\n            nameAttr=\"homeAddress\"\n            value={biodata.residentialAddress}\n            disable={true}\n          />\n        </Col>\n      </Row>\n    </>\n  )\n}\n\n\nexport const NextOfKin = ({ data }) => {\n\n  const [nextOfKin, setNextOfKin] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    relationship: \"\" ,\n    phoneNumber: \"\",\n    residentialAddress: \"\"\n  });\n\n  useEffect(() => {\n\n    if(data) {\n      const names = data.fullName?.split(' ');\n\n      setNextOfKin({\n        ...nextOfKin,\n        firstName: names[0],\n        lastName: names[names.length - 1],\n        relationship: data.relationship,\n        phoneNumber: data.phoneNumber,\n        residentialAddress: data.residentialAddress\n      })\n    }\n  }, [data])\n\n  return (\n    <>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"First Name\"\n            nameAttr=\"firstName\"\n            value={nextOfKin.firstName}\n            disable={true}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Last Name\"\n            nameAttr=\"lastName\"\n            value={nextOfKin.lastName}\n            disable={true}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Relationship\"\n            nameAttr=\"relationship\"\n            value={nextOfKin.relationship}\n            disable={true}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Phone Number\"\n            nameAttr=\"phoneNo\"\n            value={nextOfKin.phoneNumber}\n            disable={true}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Residential Address\"\n            nameAttr=\"kinAddress\"\n            value={nextOfKin.residentialAddress}\n            disable={true}\n          />\n        </Col>\n      </Row>\n    </>\n  )\n}\n\n\nexport const Bank = ({ data, userId }) => {\n\n  const [disburseBank, setDisburseBank] = useState({\n    bankName: \"\",\n    accountType: \"\",\n    accountNumber: \"\",\n    accountName: \"\"\n  });\n\n  const [salaryBank, setSalaryBank] = useState({\n    bankName: \"\",\n    accountType: \"\",\n    accountNumber: \"\",\n    accountName: \"\"\n  });\n\n  const [ loanDeets ] = useLoanDetails(userId);\n\n  useEffect(() => {\n    if(data) {\n      console.log(data);\n      setDisburseBank({\n        ...disburseBank,\n        bankName: _.startCase(data.bankName),\n        accountType: _.capitalize(data.accountType),\n        accountNumber: data.accountNumber,\n        accountName: data.accountName\n      })\n    }\n  }, [data])\n\n  useEffect(() => {\n    if(loanDeets) {\n      setSalaryBank({\n        ...salaryBank,\n        bankName: _.startCase(loanDeets?.bank[0]?.bank),\n        accountType: _.capitalize(loanDeets?.bank[0]?.accountType),\n        accountNumber: loanDeets?.bank[0]?.accountNumber,\n        accountName: loanDeets?.bank[0]?.accountName\n      })\n    }\n  }, [loanDeets])\n\n  return (\n    <>\n      <div className={styles.disburse}>\n        <h3>Disbursement Account</h3>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Bank Name\"\n              nameAttr=\"bankName\"\n              value={disburseBank.bankName}\n              disable={true}\n            />\n          </Col>\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Account Type\"\n              nameAttr=\"accountType\"\n              value={disburseBank.accountType}\n              disable={true}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Account Number\"\n              nameAttr=\"accountNumber\"\n              value={disburseBank.accountNumber}\n              disable={true}\n            />\n          </Col>\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Account Name\"\n              nameAttr=\"accountName\"\n              value={disburseBank.accountName}\n              disable={true}\n            />\n          </Col>\n        </Row>\n      </div>\n      <div className={styles.salary}>\n        <h3>Salary Account</h3>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Bank Name\"\n              nameAttr=\"salaryBank\"\n              value={salaryBank.bankName}\n              disable={true}\n            />\n          </Col>\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Account Type\"\n              nameAttr=\"salaryAcctType\"\n              value={salaryBank.accountType}\n              disable={true}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Account Number\"\n              nameAttr=\"salaryAcctNum\"\n              value={salaryBank.accountNumber}\n              disable={true}\n            />\n          </Col>\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Account Name\"\n              nameAttr=\"salaryAcctName\"\n              value={salaryBank.accountName}\n              disable={true}\n            />\n          </Col>\n        </Row>\n      </div>\n    </>\n  )\n}\n\n\nexport const Employer = ({ userId }) => {\n\n  const [employerInfo, setEmployerInfo] = useState({\n    employerName: '',\n    employmentDate: '',\n    employmentSector: '',\n    employmentType: '',\n    officialEmail: ''\n  });\n\n  const [OfficeAddress, setOfficeAddress] = useState({\n    street: '',\n    city: '',\n    state: '',\n    lga: ''\n  })\n\n  const [ loanDeets ] = useLoanDetails(userId)\n\n  useEffect(() => {\n    if(loanDeets) {\n      setEmployerInfo({\n        ...employerInfo,\n        employerName: loanDeets?.employment[0]?.employerName,\n        employmentDate: loanDeets?.employment[0]?.resumptionDate,\n        employmentSector: _.capitalize(loanDeets?.employment[0]?.sector),\n        employmentType: _.capitalize(loanDeets?.employment[0]?.employmentType),\n        officialEmail: loanDeets?.employment[0]?.officialEmail\n      })\n      setOfficeAddress({\n        ...OfficeAddress,\n        street: loanDeets?.employment[0]?.street,\n        city: loanDeets?.employment[0]?.city,\n        state: _.capitalize(loanDeets?.employment[0]?.state),\n        lga: _.capitalize(loanDeets?.employment[0]?.city),\n      })\n    }\n  }, [loanDeets])\n\n  return (\n    <>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Employer Name\"\n            nameAttr=\"employerName\"\n            disable={true}\n            value={employerInfo.employerName}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Employment Date\"\n            nameAttr=\"employmentDate\"\n            disable={true}\n            value={employerInfo.employmentDate}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Employment Sector\"\n            nameAttr=\"employmentSector\"\n            disable={true}\n            value={employerInfo.employmentSector}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Employment Type\"\n            nameAttr=\"employmentType\"\n            disable={true}\n            value={employerInfo.employmentType}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Office Email Address\"\n            nameAttr=\"officeEmail\"\n            disable={true}\n            value={employerInfo.officialEmail}\n          />\n        </Col>\n      </Row>\n      <div className={styles.officeAddress}>\n        <h3>Office Address</h3>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Street Address\"\n              nameAttr=\"streetAddress\"\n              disable={true}\n              value={OfficeAddress.street}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"City\"\n            nameAttr=\"city\"\n            disable={true}\n            value={OfficeAddress.city}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"State\"\n            nameAttr=\"state\"\n            disable={true}\n            value={OfficeAddress.state}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Local Government Area\"\n            nameAttr=\"lga\"\n            disable={true}\n            value={OfficeAddress.lga}\n          />\n        </Col>\n      </Row>\n      </div>\n    </>\n  )\n}\n\n\nexport const ClientLoan = ({ userId, canApply, userRole }) => {\n\n  const [modalOpen, setModalOpen] = useState(false)\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(5);\n\n  const closeModal = () => {\n    setModalOpen(false);\n  }\n\n  const { state: { loans }, retrieveClientLoans } = useContext(LoanContext);\n\n  useEffect(() => {\n    retrieveClientLoans();\n  }, []);\n\n  const clientLoans = useMemo(() => {\n    return loans.filter((loan) => loan.userId === userId)\n  }, [loans, userId]);\n\n  useEffect(() => {\n    console.log(loans);\n  }, [loans])\n\n  const { \n    currentList, \n    items, \n    goToNextPage, \n    goToPrevPage \n  } = usePagination(currentPage, postsPerPage, clientLoans, setCurrentPage, styles)\n\n  const startApply = () => {\n    setModalOpen(true);\n  }\n\n  return (\n    <div className={styles.loanTable}>\n      { canApply && <Button\n        size=\"sm\" \n        clicked={startApply}\n        bgColor=\"#741763\" \n        color=\"#fff\"\n        className={styles.btn}\n      >\n        Apply for a Loan\n      </Button>}\n      <div className={styles.tableCard}>\n        <Table className={styles.table}>\n          <thead>\n            <tr>\n              <th>Loan ID</th>\n              <th>Monthly Repayment</th>\n              <th>Tenure</th>\n              <th>Status</th>\n              <th>Repayment Source</th>\n              <th>Loan Amount</th>\n              <th>Balance</th>\n            </tr>\n          </thead>\n          { currentList && currentList.length > 0 ? <tbody>\n            { currentList && currentList.map((loan) => {\n              return (\n                <tr>\n                  <td className={styles.loanId}>\n                    <Link to={`/${userRole}/loan/${loan._id}`}>\n                      {loan._id.slice(0, 6)}\n                    </Link>\n                  </td>\n                  <td>{`N${numberWithCommas(loan.monthlyRepayment)}`}</td>\n                  <td>{loan.paymentPeriod}</td>\n                  <td>{_.capitalize(loan.status)}</td>\n                  <td>Salary</td>\n                  <td>{`N${numberWithCommas(loan.amount)}`}</td>\n                  <td>_____</td>\n                </tr>\n              )\n            })}\n          </tbody> : null }\n        </Table>\n        { currentList && currentList.length === 0 ? <div className={styles.nullList}>\n            <TiCancelOutline size=\"6em\" color=\"rgba(116, 23, 99, 0.6)\" />\n          </div> : null }\n        { currentList && currentList.length > 0 ? <div className={styles.tableFooter}>\n          <div className={styles.rowsInput}>\n            <p>Rows per page: </p>\n            <select onChange={(e) => setPostsPerPage(Number(e.currentTarget.value))}>\n              <option value={5} selected>5</option>\n              <option value={10}>10</option>\n              <option value={15}>15</option>\n              <option value={20}>20</option>\n              <option value={10}>25</option>\n              <option value={30}>30</option>\n            </select>\n          </div>\n          <Pagination className={styles.pagination}>\n            <Pagination.Prev onClick={goToPrevPage}/>\n            {items}\n            <Pagination.Next onClick={goToNextPage} />\n          </Pagination>\n        </div> : null }\n      </div>\n      <LoanModal userId={userId} openState={modalOpen} closeHandler={closeModal} />\n    </div>\n  )\n}\n\n\nconst ClientDetails = () => {\n\n  const salesRoute = routes[1];\n  const location = useLocation();\n  const { clientId } = useParams();\n\n  const { \n    state: { userDetails, detailStatus }, \n    getClientDetails,\n    clearErrors\n  } = useContext(UserContext);\n\n  const { state: { user } } = useContext(AuthContext);\n  useEffect(() => {\n    getClientDetails(clientId);\n\n    return () => {\n      console.log('cleanup')\n      clearErrors();\n    }\n  }, [])\n\n  // console.log(userDetails)\n\n\n  const [detailSection, setDetailSection] = useState('biodata');\n\n  const navArray = [\n    {\n      title: \"Biodata\",\n      shortlink: \"biodata\"\n    },\n    {\n      title: \"Next of Kin Info\",\n      shortlink: \"kin\"\n    },\n    {\n      title: \"Bank Info\",\n      shortlink: \"bank\"\n    },\n    {\n      title: \"Employment Info\",\n      shortlink: \"employ\"\n    },\n    {\n      title: \"Loans\",\n      shortlink: \"loans\"\n    },\n  ]\n\n  const setActiveTab = (link) => {\n    setDetailSection(link);\n  }\n\n  return (\n    <Dashboard sidebarRoutes={salesRoute} location={location}>\n      <NavTabs navs={navArray} setActive={setActiveTab} currentTab={detailSection} />\n      { userDetails || !detailStatus  ? \n        <div className={detailSection !== \"loans\" && styles.detailFields}>\n          { detailSection === \"biodata\" && <Biodata data={userDetails && {...userDetails.bioData, ...userDetails.residence}} userId={userDetails?.clientId} /> }\n          { detailSection === \"kin\" && <NextOfKin data={userDetails && { ...userDetails.nextOfKin }} /> }\n          { detailSection === \"bank\" && <Bank data={userDetails && { ...userDetails.bank }} userId={userDetails?.clientId} /> }\n          { detailSection === \"employ\" && <Employer userId={userDetails?.clientId} /> }\n          { detailSection === \"loans\" && <ClientLoan userId={userDetails && userDetails.clientId} canApply={true} userRole={`${user.role}-agent`} /> }\n        </div> :\n        <Loader />\n      }\n    </Dashboard>\n  )\n}\n\n\nexport default ClientDetails;","/home/tga/Desktop/gypsy-capital/src/pages/LoanDetail/LoanDetail.jsx",["360","361","362","363"],"/home/tga/Desktop/gypsy-capital/src/pages/ForgotPassword/ForgotPassword.jsx",["364"],"/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerLoans/AuthorizerLoans.jsx",["365","366"],"/home/tga/Desktop/gypsy-capital/src/pages/ResetSuccess/ResetSuccess.jsx",[],"/home/tga/Desktop/gypsy-capital/src/routes/sidebarRoutes.js",["367"],"import pageUrl from './pageUrl';\nimport { FiLayers } from 'react-icons/fi';\nimport { BiCreditCard } from 'react-icons/bi';\nimport { AiOutlineUser } from 'react-icons/ai';\nimport { GiTakeMyMoney, GiMoneyStack } from 'react-icons/gi';\nimport { FaUser } from 'react-icons/fa';\nimport { BiSupport } from 'react-icons/bi';\nimport { RiUser3Fill } from 'react-icons/ri';\n\n\nexport const clientRoutes = [\n  {\n      label: \"Dashboard\",\n      link: pageUrl.DASHBOARD_HOMEPAGE,\n      rootLink: pageUrl.DASHBOARD_HOMEPAGE,\n      icon: FiLayers\n    },\n    {\n      label: \"Consumer Credit\",\n      link: '/dashboard/consumer-credit/history',\n      rootLink: pageUrl.CONSUMER_CREDIT_PAGE,\n      icon: GiTakeMyMoney\n    },\n    {\n      label: \"Credit Report\",\n      link: pageUrl.CREDIT_REPORT_PAGE,\n      rootLink: pageUrl.CREDIT_REPORT_PAGE,\n      icon: BiCreditCard\n    },\n    {\n      label: \"Profile\",\n      link: pageUrl.PROFILE_PAGE,\n      rootLink: pageUrl.PROFILE_PAGE,\n      icon: AiOutlineUser\n    },\n]\n\n\nconst salesRoutes = [\n  {\n    label: \"Dashboard\",\n    link: pageUrl.SALES_AGENT_OVERVIEW,\n    rootLink: pageUrl.SALES_AGENT_OVERVIEW,\n    icon: FiLayers\n  },\n  {\n    label: \"Clients\",\n    link: pageUrl.CLIENT_LIST_PAGE,\n    rootLink: '/sales-agent/client',\n    icon: FaUser\n  },\n  {\n    label: \"Loans\",\n    link: pageUrl.LOAN_LIST_PAGE,\n    rootLink: '/sales-agent/loan',\n    icon: GiMoneyStack\n  }, \n  {\n    label: \"Support\",\n    link: pageUrl.SUPPORT_PAGE,\n    rootLink: pageUrl.SUPPORT_PAGE,\n    icon: BiSupport\n  }\n]\n\n\nconst processorRoutes = [\n  {\n    label: \"Dashboard\",\n    link: pageUrl.PROCESSORS_DASHBOARD,\n    rootLink: pageUrl.PROCESSORS_DASHBOARD,\n    icon: FiLayers\n  },\n  {\n    label: \"Clients\",\n    link: pageUrl.PROCESSORS_CLIENTS_PAGE,\n    rootLink: '/processor/client',\n    icon: FaUser\n  },\n  {\n    label: \"Loans\",\n    link: pageUrl.PROCESSORS_LOANS_PAGE,\n    rootLink: '/processor/loan',\n    icon: GiMoneyStack\n  }, \n  {\n    label: \"Support\",\n    link: pageUrl.SUPPORT_PAGE,\n    rootLink: pageUrl.SUPPORT_PAGE,\n    icon: BiSupport\n  }\n]\n\nconst authorizerRoutes = [\n  {\n    label: \"Dashboard\",\n    link: pageUrl.AUTHORIZER_OVERVIEW,\n    rootLink: pageUrl.AUTHORIZER_OVERVIEW,\n    icon: FiLayers\n  },\n  {\n    label: \"Clients\",\n    link: pageUrl.AUTHORIZER_CLIENTS,\n    rootLink: '/authorizer/client',\n    icon: FaUser\n  },\n  {\n    label: \"Loans\",\n    link: pageUrl.AUTHORIZER_LOANS,\n    rootLink: '/authorizer/loan',\n    icon: GiMoneyStack\n  }, \n  {\n    label: \"Support\",\n    link: pageUrl.SUPPORT_PAGE,\n    rootLink: pageUrl.SUPPORT_PAGE,\n    icon: BiSupport\n  }\n]\n\n\nexport const routes = [\n  clientRoutes,\n  salesRoutes,\n  processorRoutes,\n  authorizerRoutes\n]","/home/tga/Desktop/gypsy-capital/src/hooks/useNavigateAfterAuth.js",["368"],"import { useContext, useEffect } from 'react';\nimport { Context as AuthContext } from '../context/AuthContext';\nimport history from '../utils/history';\nimport pageUrl from '../routes/pageUrl';\n\n\nexport default (email, password) => {\n  const { state: { user }, getActiveUser } = useContext(AuthContext);\n\n  useEffect(() => {\n    if(user?.role && user.role === \"client\") {\n      history.push(pageUrl.DASHBOARD_HOMEPAGE)\n    } else if(user?.role && user.role === \"admin\") {\n      history.push(pageUrl.PROCESSORS_DASHBOARD)\n    } else if(user?.role && user.role === \"sales\") {\n      history.push(pageUrl.SALES_AGENT_OVERVIEW)\n    } else if(user?.role && user.role === \"processor\") {\n      history.push(pageUrl.PROCESSORS_DASHBOARD)\n    } else if(user?.role && user.role === \"authorizer\") {\n      history.push(pageUrl.AUTHORIZER_OVERVIEW) \n    }\n  }, [user])\n\n  const signinAndNavigate = (signinFunc) => {\n    signinFunc({ email, password }, getActiveUser)\n  }\n\n  return [ signinAndNavigate ];\n}","/home/tga/Desktop/gypsy-capital/src/components/Dashboard/Dashboard.jsx",["369"],"import React, { useContext, useState } from 'react';\nimport styles from './Dashboard.module.scss';\nimport { Row, Col } from 'react-bootstrap';\nimport Logo from '../../assets/logo-white.png';\nimport Button from '../../components/Button/Button';\nimport { FaSearch, FaUser } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport { MdNotificationsNone } from 'react-icons/md';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport placeholderAvatar from '../../assets/placeholder.png';\nimport { FiLogOut } from 'react-icons/fi';\nimport _ from 'lodash';\n\n\nconst Dashboard = ({ children, sidebarRoutes, location }) => {\n\n  // console.log(location)\n\n  const { state: { user }, logout } = useContext(AuthContext);\n  const signout = () => {\n    logout();\n  }\n\n  // const role = \"sales\";\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  if(!user){\n    return null;\n  }\n\n  return(\n    <div className={styles.container}>\n      <Row className={styles.header}>\n        <Col className={styles.logoGrid} sm={3}>\n          <img src={Logo} alt=\"Gypsy Logo\" width={150} />\n        </Col>\n        <Col className={ user.role === \"client\" ? styles.navGrid : styles.altNavGrid} sm={9}>\n          { user.role && user.role === \"client\" ? \n          <>\n            <MdNotificationsNone size=\"2em\" className=\"mr-5\" color=\"#741763\" />\n            <Button clicked={signout} size=\"sm\" bgColor=\"#A0208931\" color=\"#212121\">Log out</Button>\n          </> : null\n          }\n          {\n            user.role && user.role !== \"client\" ?\n            <>\n              <div className={styles.searchBar}>\n                <FaSearch className={styles.searchIcon} />\n                <input \n                  type=\"text\"\n                  name=\"searchTerm\"\n                  placeholder=\"Search for customer by  name, number or BVN\"\n                  className={styles.searchTerm}\n                  value={searchTerm}\n                  onChange={(e) => {\n                    setSearchTerm(e.currentTarget.value)\n                  }}\n                />\n              </div>\n              <div className={styles.profileGroup}>\n                <MdNotificationsNone style={{ display: \"block\" }} size=\"2em\" className=\"mr-5\" color=\"#741763\" />\n                <div className={styles.profileAvi}>\n                  { user.profilePhoto.length === 0 ? \n                    <div className={styles.avatarWrapper}><FaUser size=\"1.4em\" color=\"gray\" /></div> :\n                    <img src={placeholderAvatar} alt=\"Profile Picture\" />\n                  }\n                  <div className={styles.userInfo}>\n                    <p>{user.firstName} {user.lastName}</p>\n                    <p>{_.capitalize(user.role)} { user.role === \"sales\" && 'agent'}</p>\n                  </div>\n                </div>\n              </div>\n            </> : null\n          }\n        </Col>\n      </Row>\n      <Row>\n        <Col className={styles.menuPanel} sm={3}>\n          <div className={styles.menuList}>\n            <ul>\n              { sidebarRoutes.map(route => {\n                if(location.pathname.includes(route.rootLink)) {\n                  return (\n                    <li className={[styles.activeMenu, \"mb-4\"].join(' ')}>\n                      <route.icon size=\"1.3em\" color=\"#741763\" />\n                      <Link className={styles.activeLink} to={route.link}>{route.label}</Link>\n                    </li>\n                  )\n                } else {\n                  return (\n                    <li className=\"mb-4\">\n                      <route.icon size=\"1.3em\" color=\"#fff\" />\n                      <Link to={route.link}>{route.label}</Link>\n                    </li>\n                  )\n                }\n              })}\n            </ul>\n            { user.role && user.role !== \"client\" ? \n              <ul className={styles.authGroup}>\n                <li onClick={signout}>\n                  <FiLogOut className=\"mr-3\" size=\"1.3em\" color=\"#fff\" />\n                  Log out\n                </li>\n              </ul> :\n              null\n            }\n          </div>\n        </Col>\n        <Col sm={9} className={styles.mainPanel}>\n          <div className={styles.mainContent}>\n            {children}\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\n\nexport default Dashboard;","/home/tga/Desktop/gypsy-capital/src/components/Loader/Loader.jsx",[],"/home/tga/Desktop/gypsy-capital/src/utils/mappedLgas.js",[],"/home/tga/Desktop/gypsy-capital/src/components/IdentityForm/IdentityForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/reportWebVitals.js",[],"/home/tga/Desktop/gypsy-capital/src/context/MonoContext.js",["370","371","372","373"],"/home/tga/Desktop/gypsy-capital/src/pages/Overview/Overview.jsx",["374","375"],"import React, { useContext, useEffect, useState } from 'react';\nimport styles from './Overview.module.scss';\nimport { clientRoutes } from '../../routes/sidebarRoutes';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport Button from '../../components/Button/Button';\nimport gypsyNote from '../../assets/icons/gypsyNotes.svg';\nimport altInvestment from '../../assets/icons/alternative.svg';\nimport { Col, Row } from 'react-bootstrap';\nimport noLoan from '../../assets/no-loan.png';\nimport moment from 'moment';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { Context as LoanContext } from '../../context/LoanContext';\nimport { useRouteMatch, useHistory, useLocation } from 'react-router-dom';\n\n\nconst Overview = () => {\n\n  const { path } = useRouteMatch();\n  const history = useHistory();\n  const location = useLocation();\n  const [activeLoan, setActiveLoan] = useState(null);\n\n  const { state: { user } } = useContext(AuthContext);\n  const { state: { loans }, retrieveClientLoans } = useContext(LoanContext)\n\n  useEffect(() => {\n    retrieveClientLoans()\n  }, []);\n\n  useEffect(() => {\n    const statusToDisplay = loans.filter(loan => loan.status.toLowerCase() === 'pending' || 'active');\n    console.log(statusToDisplay[0]);\n    setActiveLoan(statusToDisplay[0]);\n  }, [loans]);\n\n  useEffect(() => {\n    console.log(user);\n  }, [user]);\n\n  const numberWithCommas = (x) => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  if(!user) {\n    return null\n  }\n\n  return (\n    <Dashboard sidebarRoutes={clientRoutes} location={location}>\n      <div className={styles.welcomeGroup}>\n        <h2>Hey, {user.firstName}</h2>\n        <p className={styles.currentDate}>Today is {moment().format('dddd Do[,] MMMM')}.</p>\n      </div>\n      <div className={styles.loanStatus} style={{padding: '30px 40px'}}>\n        { !activeLoan && <div className={styles.innerContainer}>\n          <div className={styles.mainContent}>\n            <h3>Active Loan</h3>\n            <p>Sorry you currently have no active loan</p>\n            <Button\n              bgColor=\"#741763\"\n              size=\"sm\"\n              color=\"#fff\"\n              className=\"mt-4\"\n              clicked={() => history.push('/dashboard/consumer-credit/apply/calculator')}\n            >\n              Apply for loan\n            </Button>\n          </div>\n          <img src={noLoan} alt=\"No active loan\" height=\"280\" />\n        </div> } \n        { activeLoan && <div className={styles.activeStyle}>\n          <div className={styles.mainContent}>\n            <h3>Active Loan <span>{activeLoan.status}</span></h3>\n            <div className={styles.statusBoard}>\n              <Row>\n                <Col className={styles.borderClass}>\n                  <div className={styles.loanData}>\n                    <div>\n                      <h6>Loan amount</h6>\n                      <h1>{`N${numberWithCommas(activeLoan.amount)}`}</h1>\n                    </div>\n                  </div>\n                </Col>\n                <Col className={styles.borderClass}>\n                  <div className={styles.loanData}>\n                    <div>\n                      <h6>Monthly Repayment</h6>\n                      <h1>{`N${numberWithCommas(activeLoan.monthlyRepayment)}`}</h1>\n                    </div>\n                  </div>\n                </Col>\n                <Col>\n                  <div className={styles.loanData}>\n                    <div>\n                      <h6>Tenure</h6>\n                      <h1>{activeLoan.paymentPeriod}</h1>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </div>}\n      </div>\n      <div className={styles.otherProducts}>\n        <Row>\n          <Col sm={12} md={6}>\n            <div className={[styles.product, styles.borderClass].join(' ')}>\n              <div className={styles.productIcon}>\n                <img src={gypsyNote} alt=\"Gypsy Notes\" width=\"25\" />\n              </div>\n              <h3 className={styles.productTitle}>Gypsy Notes</h3>\n              <p className=\"mt-2\">Let your money work for you and enjoy high interest rates on your money. Start a Gypsy Fixed Income Note today and earn more.</p>\n              <button className={[styles.productBtn, \"mt-3\"].join(' ')}>\n                Be the first to know when we launch\n              </button>\n            </div>\n          </Col>\n          <Col sm={12} md={6}>\n            <div className={[styles.product, styles.border2Class].join(' ')}>\n              <div className={styles.productIcon}>\n                <img src={altInvestment} alt=\"Alternative Investment\" width=\"40\" />\n              </div>\n              <h3 className={styles.productTitle}>Alternative Investment</h3>\n              <p className=\"mt-2\">Are you an investor who seek greater rewards? Our Alternative Investment service is here to help you earn more.</p>\n              <button className={[styles.productBtn, \"mt-3\"].join(' ')}>\n                Be the first to know when we launch\n              </button>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </Dashboard>\n  )\n}\n\n\nexport default Overview;","/home/tga/Desktop/gypsy-capital/src/pages/ContactPage/ContactPage.jsx",["376","377"],"/home/tga/Desktop/gypsy-capital/src/pages/ResetPassword/ResetPassword.jsx",["378"],"/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerOverview/AuthorizerOverview.jsx",["379"],"import React, { useContext, useMemo, useEffect } from 'react';\nimport styles from './AuthorizerOverview.module.scss';\nimport { routes } from '../../routes/sidebarRoutes';\nimport { useLocation, useHistory, Link } from 'react-router-dom';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport moment from 'moment';\nimport { AiOutlineCalendar } from 'react-icons/ai';\nimport { TiCancelOutline } from 'react-icons/ti';\nimport StatBox from '../../components/StatBox/StatBox';\nimport ClientStat from '../../assets/salesDashboard/clientstat.png';\nimport DisburseStat from '../../assets/salesDashboard/loanstat.png';\nimport LoanStat from '../../assets/salesDashboard/loanchange.png';\nimport PendingStat from '../../assets/salesDashboard/pending.png';\nimport RepaymentStat from '../../assets/salesDashboard/repayment.png';\nimport TotalStat from '../../assets/salesDashboard/total.png';\nimport { Row, Col, Table } from 'react-bootstrap';\nimport Button from '../../components/Button/Button';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { Context as LoanContext } from '../../context/LoanContext';\nimport Loader from '../../components/Loader/Loader';\nimport { numberWithCommas } from '../../utils/nigeriaStates';\nimport _ from 'lodash';\n\n\nconst AuthorizerOverview = () => {\n\n  const authorizerRoutes = routes[3];\n  const location = useLocation();\n  const history = useHistory();\n\n  const { state: { user } } = useContext(AuthContext);\n  const { state: { clientsForRole, loading }, getClientListForRole } = useContext(UserContext);\n  const { state: { loans, loading: listLoading }, retrieveClientLoans } = useContext(LoanContext);\n\n  useEffect(() => {\n    getClientListForRole();\n    retrieveClientLoans();\n  }, [])\n\n  const totalDisbursedLoans = useMemo(() => {\n    return loans.filter((loan) => loan.status.toLowerCase() === \"approved\")\n      .reduce((acc, loan) => (loan.amount + acc), 0)\n  }, [loans]);\n\n  const noOfActiveLoans = useMemo(() => {\n    return loans.filter((loan) => loan.status.toLowerCase() === \"approved\").length; \n  }, [loans]);\n\n  const noOfPendingLoans = useMemo(() => {\n    return loans.filter((loan) => loan.status.toLowerCase() === \"pending\").length; \n  }, [loans]);\n\n  const recentLoans = useMemo(() => {\n    return loans.slice(0, 5);\n  }, [loans]);\n\n  console.log(recentLoans);\n\n  return (\n    <Dashboard sidebarRoutes={authorizerRoutes} location={location}>\n      <div className={styles.welcomeGroup}>\n        <div>\n          <h2>Hey, {user.firstName}</h2>\n          <p className={styles.currentDate}>Today is {moment().format('dddd Do[,] MMMM')}.</p>\n        </div>\n        <button>\n          <AiOutlineCalendar className={styles.icon} />\n          Last 7 days\n        </button>\n      </div>\n      { !listLoading && !loading ? <>\n        <div className={styles.stats}>\n          <Row>\n            <Col>\n              <StatBox icon={ClientStat} title=\"Total Clients\" statData={clientsForRole.length} />\n            </Col>\n            <Col>\n              <StatBox icon={DisburseStat} title=\"Total Disbursed Loans\" statData={numberWithCommas(totalDisbursedLoans)} />\n            </Col>\n            <Col>\n              <StatBox icon={LoanStat} title=\"Total Active Loans\" statData={noOfActiveLoans} />\n            </Col>\n          </Row>\n          <Row className=\"mt-4\">\n            <Col>\n              <StatBox icon={RepaymentStat} title=\"Total Repayment Received\" statData=\"3.75M\" />\n            </Col>\n            <Col>\n              <StatBox icon={TotalStat} title=\"Total Loans\" statData={loans.length} />\n            </Col>\n            <Col>\n              <StatBox icon={PendingStat} title=\"Total Pending Loans\" statData={noOfPendingLoans} />\n            </Col>\n          </Row>\n        </div>\n        <div className={styles.recentLoans}>\n          <div className={styles.header}>\n            <h3>Recent Loans</h3>\n            <Button\n              size=\"sm\" \n              bgColor=\"#741763\" \n              color=\"#fff\"\n              clicked={() => history.push('/authorizer/loans')}\n            >\n              View All\n            </Button>\n          </div>\n          <div className={styles.recentCard}>\n            <Table className={styles.table} striped>\n              <thead>\n                <tr>\n                  <th>Client Name</th>\n                  <th>Loan ID</th>\n                  <th>Loan Amount</th>\n                  <th>Status</th>\n                  <th>Tenure</th>\n                  <th>Monthly Repayment</th>\n                </tr>\n              </thead>\n              { recentLoans && recentLoans.length > 0 ? <tbody>\n                { recentLoans.map((loan, idx) => (\n                  <tr key={idx}>\n                    <td>\n                      {`${_.capitalize(loan.clientInfo[0]?.firstName)} ${_.capitalize(loan.clientInfo[0]?.lastName)}`}\n                    </td>\n                    <td className={styles.loanId}>\n                      <Link to={`/authorizer/loan/${loan._id}`}>\n                        {loan._id.slice(0, 6)}\n                      </Link>\n                    </td>\n                    <td>{`N${numberWithCommas(loan.amount)}`}</td>\n                    <td>{_.capitalize(loan.status)}</td>\n                    <td>{loan.paymentPeriod}</td>\n                    <td>{`N${numberWithCommas(loan.monthlyRepayment)}`}</td>\n                  </tr>\n                ))}\n              </tbody> : null }\n            </Table>\n            { recentLoans && recentLoans.length === 0 ? <div className={styles.nullList}>\n              <TiCancelOutline size=\"6em\" color=\"rgba(116, 23, 99, 0.6)\" />\n            </div> : null }\n          </div>\n        </div>\n      </> : <Loader />}\n    </Dashboard>\n\t)\n}\n\nexport default AuthorizerOverview;","/home/tga/Desktop/gypsy-capital/src/utils/validateInput.js",["380","381"],"export const validateInput = (inputValues, errorSetter) => {\n\n  const validMail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  let validPhoneNumber = /^[0]\\d{10}$/;\n\n  const errorsInit = {};\n  let fields = { ...inputValues }\n\n  for(const key in fields) {\n    if(!fields[key]) {\n      errorsInit[key] = \"This field is required\";\n    } \n    if(fields.email && !fields.email.match(validMail)) {\n      errorsInit.email = \"Please enter a valid email address\"\n    } \n    if(fields.phoneNo && !fields.phoneNo.match(validPhoneNumber)) {\n      errorsInit.phoneNo = \"Please enter a valid phone number\"\n    }\n    if(fields.password && fields.password.length < 8) {\n      errorsInit.password = \"Password must be at least 8 characters\";\n    }\n    if(fields.confirmPassword && fields.confirmPassword !== fields.password) {\n      errorsInit.confirmPassword = \"Your password does not match\"\n    }\n  }\n\n  errorSetter(errorsInit);\n  console.log(errorsInit);\n  if(Object.entries(errorsInit).length === 0) {\n    return true;\n  } else {\n    return false;\n  }\n\n}","/home/tga/Desktop/gypsy-capital/src/components/NavTabs/NavTabs.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/OfferLetter/OfferLetterForm.jsx",["382"],"/home/tga/Desktop/gypsy-capital/src/hooks/usePagination.js",["383"],"/home/tga/Desktop/gypsy-capital/src/components/FaqSection/FaqSection.jsx",["384"],"/home/tga/Desktop/gypsy-capital/src/components/ModalForm/ModalForm.jsx",["385","386","387"],"/home/tga/Desktop/gypsy-capital/src/components/LoanCalculatorForm/LoanCalculatorForm.jsx",["388","389"],"import React, { useState, useEffect, useContext } from 'react';\nimport styles from './LoanCalculatorForm.module.scss';\nimport InputField from '../InputField/InputField';\nimport Button from '../Button/Button';\nimport { Row, Col } from 'react-bootstrap';\nimport Slider from 'react-rangeslider';\nimport { validateInput } from '../../utils/validateInput';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Context as LoanContext } from '../../context/LoanContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport 'react-rangeslider/lib/index.css'\n\n\nconst DtiRangeSlider = ({ dtiVal, setVal }) => {\n\n  const handleChange = (val) => {\n    setVal(val)\n  }\n\n  return (  \n    <div>\n      <p>DTI: {`${dtiVal}%`}</p>\n      <Slider \n        min={33}\n        max={50}\n        value={dtiVal}\n        onChange={handleChange}\n      />\n    </div>\n  )\n}\n\n\nconst LoanCalculatorForm = ({ delegateApply }) => {\n\n  const { state: { loading }, loanApply } = useContext(LoanContext);\n  const { state: { user } } = useContext(AuthContext);\n\n  // const [dti, setDti] = useState(33);\n  const [daysOfMonth, setDaysOfMonth] = useState([]);\n  const [limitError, setLimitError] = useState(null);\n  const [loanCalcData, setLoanCalcData] = useState({\n    monthlySalary: \"\",\n    payDay: \"\",\n    loanAmount: \"\",\n    installmentPeriod: \"\",\n    loanPurpose: \"\",\n    estimatedMonthlyPayment: \"\",\n    dti: 33\n  });\n\n  const [loanCalcDataErrors, setLoanCalcDataErrors] = useState({\n    monthlySalary: null,\n    payDay: null,\n    loanAmount: null,\n    installmentPeriod: null,\n    loanPurpose: null\n  });\n\n  useEffect(() => {\n    setDaysOfMonth(fillUpDaysArray);\n  }, [])\n\n  const fillUpDaysArray = () => {\n    let daysArray = [];\n    for(let i=0; i < 31; i++) {\n      daysArray.push(i+1)\n    }\n    return daysArray;\n  }\n\n  const { monthlySalary, loanAmount, installmentPeriod, payDay, loanPurpose } = loanCalcData;\n\n  useEffect(() => {\n    if(monthlySalary && loanAmount && installmentPeriod) {\n      // console.log(typeof monthlySalary, typeof loanAmount, installmentPeriod);\n      const tenor = Number(installmentPeriod.split(' ')[0]);\n      let initRate = Number(loanAmount);\n      let toRepay = initRate + (initRate * 0.04);\n      toRepay = toRepay + (toRepay * 0.04 * tenor)\n      // for(let i=0; i < tenor; i++) {\n      //   toRepay = initRate + (initRate * 0.04);\n      //   initRate = toRepay;\n      // }\n      const monthlyRepay = toRepay / tenor;\n      const percentDti = (loanCalcData.dti / 100).toFixed(3);\n      console.log(percentDti);\n      if(monthlyRepay > (percentDti * Number(monthlySalary))) {\n        setLimitError('You are not eligible for this amount, kindly enter a lower loan amount');\n      } else {\n        setLimitError(null)\n      }\n      setLoanCalcData({ ...loanCalcData, estimatedMonthlyPayment: Math.floor(monthlyRepay) })\n    }\n  }, [monthlySalary, loanAmount, installmentPeriod, loanCalcData.dti])\n\n  const submitLoanCalcData = () => {\n    console.log('works');\n    const fieldsTovalidate = { monthlySalary, payDay, loanAmount, installmentPeriod, loanPurpose }\n    const validated = validateInput(fieldsTovalidate, setLoanCalcDataErrors);\n    if(validated) {\n      const applyData = {\n        monthlySalary,\n        payDay,\n        amount: loanAmount,\n        paymentPeriod: installmentPeriod,\n        loanPurpose,\n        monthlyRepayment: loanCalcData.estimatedMonthlyPayment,\n        DTI: loanCalcData.dti\n      }\n      console.log(applyData);\n      limitError ? toast.error(limitError) : delegateApply(applyData);\n    }\n  }\n\n  if(daysOfMonth.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={styles.calculatorForm}>\n      <ToastContainer position=\"top-center\" />\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            label=\"Monthly Salary\" \n            type=\"number\" \n            nameAttr=\"salary\"\n            value={loanCalcData.monthlySalary}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, monthlySalary: null })\n              setLoanCalcData({ ...loanCalcData, monthlySalary: val })\n            }}\n            error={loanCalcDataErrors.monthlySalary && loanCalcDataErrors.monthlySalary}\n          />\n        </Col>\n        <Col>\n          <InputField \n            label=\"Pay Day\"\n            type=\"select\"\n            options={daysOfMonth}\n            nameAttr=\"payday\"\n            value={loanCalcData.payDay}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, payDay: null })\n              setLoanCalcData({ ...loanCalcData, payDay: val })\n            }}\n            error={loanCalcDataErrors.payDay && loanCalcDataErrors.payDay}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            label=\"Loan Amount\" \n            type=\"number\" \n            nameAttr=\"loanAmt\"\n            value={loanCalcData.loanAmount}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, loanAmount: null })\n              setLoanCalcData({ ...loanCalcData, loanAmount: val })\n            }}\n            error={loanCalcDataErrors.loanAmount && loanCalcDataErrors.loanAmount}\n          />\n          <p className={styles.inputHint}>\n            <span>min amt:</span> #100,000; <span>max amt:</span> #2,000,000\n          </p>\n        </Col>\n        <Col>\n          <InputField \n            label=\"Installment Period\"\n            type=\"select\"\n            options={['1 Month', '2 Months', '3 Months', '4 Months', '5 Months', '6 Months']}\n            nameAttr=\"installmentCycle\"\n            value={loanCalcData.installmentPeriod}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, installmentPeriod: null })\n              setLoanCalcData({ ...loanCalcData, installmentPeriod: val })\n            }}\n            error={loanCalcDataErrors.installmentPeriod && loanCalcDataErrors.installmentPeriod}\n          />\n        </Col>\n      </Row>\n      {user?.role === \"sales\" && <Row className=\"mb-4\">\n        <Col>\n          <DtiRangeSlider \n            dtiVal={loanCalcData.dti} \n            setVal={(val) => setLoanCalcData({...loanCalcData, dti: val })} \n            />\n        </Col>\n      </Row>}\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            label=\"Loan Purpose\"\n            type=\"select\"\n            options={[\n              'Debt Consolidation',\n              'Home Remodelling',\n              'Moving Costs',\n              'Emergency Expenses',\n              'Medical Bills',\n              'Education',\n              'Appliance Purchase',\n              'Vehicle Financing',\n              'Vacation Costs',\n              'Wedding Expenses',\n              'Others'\n            ]}\n            nameAttr=\"loanPurpose\"\n            value={loanCalcData.loanPurpose}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, loanPurpose: null })\n              setLoanCalcData({ ...loanCalcData, loanPurpose: val })\n            }}\n            error={loanCalcDataErrors.loanPurpose && loanCalcDataErrors.loanPurpose}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Estimated Monthly Payment\"\n            nameAttr=\"monthlyPayment\"\n            value={loanCalcData.estimatedMonthlyPayment}\n            disable={true}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, estimatedMonthlyPayment: null })\n              setLoanCalcData({ ...loanCalcData, estimatedMonthlyPayment: val })\n            }}\n            error={loanCalcDataErrors.estimatedMonthlyPayment && loanCalcDataErrors.estimatedMonthlyPayment}\n          />\n          <p className={styles.inputHint}>\n            <span>Eventual repayment amount may differ after risk assessment.</span>\n          </p>\n          { limitError && <p className={styles.limitError}>{limitError}</p> }\n        </Col>\n      </Row>\n      <Button \n        className=\"mt-5\" \n        fullWidth \n        clicked={submitLoanCalcData} \n        bgColor=\"#741763\" \n        size=\"lg\" \n        color=\"#EBEBEB\"\n        disabled={loading}\n        loading={loading}\n      >\n        Continue\n      </Button>\n    </div>\n  )\n}\n\n\nexport default LoanCalculatorForm;","/home/tga/Desktop/gypsy-capital/src/pages/pages.js",[],"/home/tga/Desktop/gypsy-capital/src/context/AuthContext.js",[],"/home/tga/Desktop/gypsy-capital/src/pages/ConsumerCredit/ConsumerCredit.jsx",["390","391"],"/home/tga/Desktop/gypsy-capital/src/components/ProcessOffer/ProcessOffer.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerClientDetails/AuthorizerClientDetails.jsx",["392"],"/home/tga/Desktop/gypsy-capital/src/utils/convertInputType.js",[],"/home/tga/Desktop/gypsy-capital/src/App.js",[],"/home/tga/Desktop/gypsy-capital/src/pages/CreditReport/CreditReport.jsx",["393","394","395"],"/home/tga/Desktop/gypsy-capital/src/pages/Products/Products.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/ProcessorDashboard/ProcessorDashboard.jsx",["396"],"/home/tga/Desktop/gypsy-capital/src/hooks/useLoanDetails.js",["397","398","399","400"],"/home/tga/Desktop/gypsy-capital/src/components/FileUploadButton/FileUploadButton.js",[],{"ruleId":"401","replacedBy":"402"},{"ruleId":"403","replacedBy":"404"},{"ruleId":"401","replacedBy":"405"},{"ruleId":"403","replacedBy":"406"},{"ruleId":"401","replacedBy":"407"},{"ruleId":"403","replacedBy":"408"},{"ruleId":"409","severity":1,"message":"410","line":4,"column":1,"nodeType":"411","endLine":34,"endColumn":2},{"ruleId":"412","severity":1,"message":"413","line":47,"column":6,"nodeType":"414","endLine":47,"endColumn":13,"suggestions":"415"},{"ruleId":"416","severity":1,"message":"417","line":64,"column":33,"nodeType":"418","messageId":"419","endLine":64,"endColumn":34,"suggestions":"420"},{"ruleId":"416","severity":1,"message":"417","line":64,"column":58,"nodeType":"418","messageId":"419","endLine":64,"endColumn":59,"suggestions":"421"},{"ruleId":"422","severity":1,"message":"423","line":56,"column":15,"nodeType":"424","endLine":56,"endColumn":26},{"ruleId":"422","severity":1,"message":"423","line":59,"column":15,"nodeType":"424","endLine":59,"endColumn":26},{"ruleId":"422","severity":1,"message":"423","line":62,"column":15,"nodeType":"424","endLine":62,"endColumn":26},{"ruleId":"412","severity":1,"message":"425","line":43,"column":6,"nodeType":"414","endLine":43,"endColumn":16,"suggestions":"426"},{"ruleId":"412","severity":1,"message":"425","line":69,"column":6,"nodeType":"414","endLine":69,"endColumn":55,"suggestions":"427"},{"ruleId":"412","severity":1,"message":"428","line":23,"column":6,"nodeType":"414","endLine":23,"endColumn":8,"suggestions":"429"},{"ruleId":"430","severity":1,"message":"431","line":3,"column":8,"nodeType":"432","messageId":"433","endLine":3,"endColumn":14},{"ruleId":"412","severity":1,"message":"428","line":22,"column":6,"nodeType":"414","endLine":22,"endColumn":8,"suggestions":"434"},{"ruleId":"430","severity":1,"message":"435","line":30,"column":30,"nodeType":"432","messageId":"433","endLine":30,"endColumn":44},{"ruleId":"430","severity":1,"message":"436","line":34,"column":5,"nodeType":"432","messageId":"433","endLine":34,"endColumn":24},{"ruleId":"412","severity":1,"message":"437","line":43,"column":6,"nodeType":"414","endLine":43,"endColumn":13,"suggestions":"438"},{"ruleId":"412","severity":1,"message":"439","line":81,"column":6,"nodeType":"414","endLine":81,"endColumn":8,"suggestions":"440"},{"ruleId":"412","severity":1,"message":"441","line":96,"column":6,"nodeType":"414","endLine":96,"endColumn":16,"suggestions":"442"},{"ruleId":"412","severity":1,"message":"443","line":177,"column":8,"nodeType":"414","endLine":177,"endColumn":22,"suggestions":"444"},{"ruleId":"412","severity":1,"message":"445","line":398,"column":6,"nodeType":"414","endLine":398,"endColumn":16,"suggestions":"446"},{"ruleId":"412","severity":1,"message":"447","line":670,"column":6,"nodeType":"414","endLine":670,"endColumn":8,"suggestions":"448"},{"ruleId":"449","severity":1,"message":"450","line":44,"column":11,"nodeType":"424","endLine":44,"endColumn":45},{"ruleId":"412","severity":1,"message":"451","line":89,"column":6,"nodeType":"414","endLine":89,"endColumn":8,"suggestions":"452"},{"ruleId":"412","severity":1,"message":"447","line":35,"column":6,"nodeType":"414","endLine":35,"endColumn":8,"suggestions":"453"},{"ruleId":"430","severity":1,"message":"454","line":10,"column":9,"nodeType":"432","messageId":"433","endLine":10,"endColumn":17},{"ruleId":"422","severity":1,"message":"423","line":19,"column":11,"nodeType":"424","endLine":19,"endColumn":23},{"ruleId":"430","severity":1,"message":"455","line":39,"column":22,"nodeType":"432","messageId":"433","endLine":39,"endColumn":35},{"ruleId":"412","severity":1,"message":"456","line":38,"column":6,"nodeType":"414","endLine":38,"endColumn":8,"suggestions":"457"},{"ruleId":"458","severity":1,"message":"459","line":103,"column":29,"nodeType":"424","endLine":103,"endColumn":72},{"ruleId":"430","severity":1,"message":"460","line":13,"column":5,"nodeType":"432","messageId":"433","endLine":13,"endColumn":21},{"ruleId":"412","severity":1,"message":"461","line":33,"column":6,"nodeType":"414","endLine":33,"endColumn":8,"suggestions":"462"},{"ruleId":"412","severity":1,"message":"413","line":47,"column":6,"nodeType":"414","endLine":47,"endColumn":13,"suggestions":"463"},{"ruleId":"412","severity":1,"message":"464","line":103,"column":6,"nodeType":"414","endLine":103,"endColumn":8,"suggestions":"465"},{"ruleId":"412","severity":1,"message":"466","line":116,"column":6,"nodeType":"414","endLine":116,"endColumn":37,"suggestions":"467"},{"ruleId":"412","severity":1,"message":"439","line":500,"column":6,"nodeType":"414","endLine":500,"endColumn":8,"suggestions":"468"},{"ruleId":"412","severity":1,"message":"469","line":515,"column":6,"nodeType":"414","endLine":515,"endColumn":49,"suggestions":"470"},{"ruleId":"412","severity":1,"message":"471","line":523,"column":6,"nodeType":"414","endLine":523,"endColumn":23,"suggestions":"472"},{"ruleId":"412","severity":1,"message":"473","line":713,"column":6,"nodeType":"414","endLine":713,"endColumn":8,"suggestions":"474"},{"ruleId":"412","severity":1,"message":"413","line":28,"column":6,"nodeType":"414","endLine":28,"endColumn":13,"suggestions":"475"},{"ruleId":"412","severity":1,"message":"413","line":29,"column":6,"nodeType":"414","endLine":29,"endColumn":13,"suggestions":"476"},{"ruleId":"412","severity":1,"message":"456","line":49,"column":6,"nodeType":"414","endLine":49,"endColumn":8,"suggestions":"477"},{"ruleId":"412","severity":1,"message":"478","line":68,"column":6,"nodeType":"414","endLine":68,"endColumn":19,"suggestions":"479"},{"ruleId":"412","severity":1,"message":"413","line":75,"column":6,"nodeType":"414","endLine":75,"endColumn":13,"suggestions":"480"},{"ruleId":"412","severity":1,"message":"466","line":54,"column":6,"nodeType":"414","endLine":54,"endColumn":12,"suggestions":"481"},{"ruleId":"412","severity":1,"message":"482","line":184,"column":6,"nodeType":"414","endLine":184,"endColumn":12,"suggestions":"483"},{"ruleId":"412","severity":1,"message":"484","line":273,"column":6,"nodeType":"414","endLine":273,"endColumn":12,"suggestions":"485"},{"ruleId":"412","severity":1,"message":"486","line":285,"column":6,"nodeType":"414","endLine":285,"endColumn":17,"suggestions":"487"},{"ruleId":"412","severity":1,"message":"488","line":417,"column":6,"nodeType":"414","endLine":417,"endColumn":17,"suggestions":"489"},{"ruleId":"412","severity":1,"message":"428","line":534,"column":6,"nodeType":"414","endLine":534,"endColumn":8,"suggestions":"490"},{"ruleId":"412","severity":1,"message":"491","line":647,"column":6,"nodeType":"414","endLine":647,"endColumn":8,"suggestions":"492"},{"ruleId":"412","severity":1,"message":"493","line":47,"column":6,"nodeType":"414","endLine":47,"endColumn":12,"suggestions":"494"},{"ruleId":"430","severity":1,"message":"495","line":204,"column":20,"nodeType":"432","messageId":"433","endLine":204,"endColumn":27},{"ruleId":"412","severity":1,"message":"496","line":208,"column":6,"nodeType":"414","endLine":208,"endColumn":8,"suggestions":"497"},{"ruleId":"412","severity":1,"message":"447","line":302,"column":6,"nodeType":"414","endLine":302,"endColumn":8,"suggestions":"498"},{"ruleId":"412","severity":1,"message":"413","line":20,"column":6,"nodeType":"414","endLine":20,"endColumn":13,"suggestions":"499"},{"ruleId":"430","severity":1,"message":"431","line":6,"column":8,"nodeType":"432","messageId":"433","endLine":6,"endColumn":14},{"ruleId":"412","severity":1,"message":"428","line":22,"column":6,"nodeType":"414","endLine":22,"endColumn":8,"suggestions":"500"},{"ruleId":"430","severity":1,"message":"501","line":8,"column":10,"nodeType":"432","messageId":"433","endLine":8,"endColumn":21},{"ruleId":"409","severity":1,"message":"410","line":7,"column":1,"nodeType":"411","endLine":29,"endColumn":2},{"ruleId":"458","severity":1,"message":"459","line":66,"column":21,"nodeType":"424","endLine":66,"endColumn":74},{"ruleId":"430","severity":1,"message":"502","line":4,"column":8,"nodeType":"432","messageId":"433","endLine":4,"endColumn":15},{"ruleId":"430","severity":1,"message":"503","line":98,"column":7,"nodeType":"432","messageId":"433","endLine":98,"endColumn":35},{"ruleId":"430","severity":1,"message":"504","line":101,"column":11,"nodeType":"432","messageId":"433","endLine":101,"endColumn":16},{"ruleId":"430","severity":1,"message":"505","line":102,"column":11,"nodeType":"432","messageId":"433","endLine":102,"endColumn":19},{"ruleId":"430","severity":1,"message":"506","line":18,"column":11,"nodeType":"432","messageId":"433","endLine":18,"endColumn":15},{"ruleId":"412","severity":1,"message":"428","line":28,"column":6,"nodeType":"414","endLine":28,"endColumn":8,"suggestions":"507"},{"ruleId":"430","severity":1,"message":"508","line":9,"column":25,"nodeType":"432","messageId":"433","endLine":9,"endColumn":29},{"ruleId":"509","severity":1,"message":"510","line":33,"column":11,"nodeType":"424","endLine":40,"endColumn":12},{"ruleId":"412","severity":1,"message":"413","line":35,"column":6,"nodeType":"414","endLine":35,"endColumn":13,"suggestions":"511"},{"ruleId":"412","severity":1,"message":"512","line":39,"column":6,"nodeType":"414","endLine":39,"endColumn":8,"suggestions":"513"},{"ruleId":"416","severity":1,"message":"417","line":3,"column":31,"nodeType":"418","messageId":"419","endLine":3,"endColumn":32,"suggestions":"514"},{"ruleId":"416","severity":1,"message":"417","line":3,"column":56,"nodeType":"418","messageId":"419","endLine":3,"endColumn":57,"suggestions":"515"},{"ruleId":"412","severity":1,"message":"516","line":52,"column":6,"nodeType":"414","endLine":52,"endColumn":8,"suggestions":"517"},{"ruleId":"409","severity":1,"message":"410","line":5,"column":1,"nodeType":"411","endLine":56,"endColumn":2},{"ruleId":"412","severity":1,"message":"518","line":42,"column":6,"nodeType":"414","endLine":42,"endColumn":8,"suggestions":"519"},{"ruleId":"430","severity":1,"message":"520","line":77,"column":9,"nodeType":"432","messageId":"433","endLine":77,"endColumn":19},{"ruleId":"412","severity":1,"message":"413","line":375,"column":6,"nodeType":"414","endLine":375,"endColumn":13,"suggestions":"521"},{"ruleId":"412","severity":1,"message":"522","line":387,"column":6,"nodeType":"414","endLine":387,"endColumn":17,"suggestions":"523"},{"ruleId":"430","severity":1,"message":"524","line":36,"column":31,"nodeType":"432","messageId":"433","endLine":36,"endColumn":40},{"ruleId":"412","severity":1,"message":"525","line":95,"column":6,"nodeType":"414","endLine":95,"endColumn":70,"suggestions":"526"},{"ruleId":"412","severity":1,"message":"428","line":48,"column":6,"nodeType":"414","endLine":48,"endColumn":8,"suggestions":"527"},{"ruleId":"412","severity":1,"message":"437","line":56,"column":6,"nodeType":"414","endLine":56,"endColumn":13,"suggestions":"528"},{"ruleId":"412","severity":1,"message":"451","line":36,"column":6,"nodeType":"414","endLine":36,"endColumn":8,"suggestions":"529"},{"ruleId":"430","severity":1,"message":"431","line":2,"column":8,"nodeType":"432","messageId":"433","endLine":2,"endColumn":14},{"ruleId":"430","severity":1,"message":"508","line":5,"column":25,"nodeType":"432","messageId":"433","endLine":5,"endColumn":29},{"ruleId":"430","severity":1,"message":"530","line":10,"column":11,"nodeType":"432","messageId":"433","endLine":10,"endColumn":14},{"ruleId":"412","severity":1,"message":"512","line":39,"column":6,"nodeType":"414","endLine":39,"endColumn":8,"suggestions":"531"},{"ruleId":"409","severity":1,"message":"410","line":4,"column":1,"nodeType":"411","endLine":28,"endColumn":2},{"ruleId":"412","severity":1,"message":"428","line":11,"column":7,"nodeType":"414","endLine":11,"endColumn":9,"suggestions":"532"},{"ruleId":"412","severity":1,"message":"533","line":15,"column":6,"nodeType":"414","endLine":15,"endColumn":13,"suggestions":"534"},{"ruleId":"412","severity":1,"message":"535","line":19,"column":6,"nodeType":"414","endLine":19,"endColumn":17,"suggestions":"536"},"no-native-reassign",["537"],"no-negated-in-lhs",["538"],["537"],["538"],["537"],["538"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clearErrors'. Either include it or remove the dependency array.","ArrayExpression",["539"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["540","541"],["542","543"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'loanData'. Either include it or remove the dependency array. You can also do a functional update 'setLoanData(l => ...)' if you only need 'loanData' in the 'setLoanData' call.",["544"],["545"],"React Hook useEffect has a missing dependency: 'retrieveClientLoans'. Either include it or remove the dependency array.",["546"],"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar",["547"],"'approvedStatus' is assigned a value but never used.","'resetApprovalStatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'clearError'. Either include it or remove the dependency array.",["548"],"React Hook useEffect has a missing dependency: 'getBankList'. Either include it or remove the dependency array.",["549"],"React Hook useEffect has a missing dependency: 'approvalData'. Either include it or remove the dependency array. You can also do a functional update 'setApprovalData(a => ...)' if you only need 'approvalData' in the 'setApprovalData' call.",["550"],"React Hook useEffect has a missing dependency: 'clientBank'. Either include it or remove the dependency array. Outer scope values like 'disburseBank' aren't valid dependencies because mutating them doesn't re-render the component.",["551"],"React Hook useEffect has a missing dependency: 'repayData'. Either include it or remove the dependency array. You can also do a functional update 'setRepayData(r => ...)' if you only need 'repayData' in the 'setRepayData' call.",["552"],"React Hook useEffect has missing dependencies: 'loanId' and 'retrieveLoan'. Either include them or remove the dependency array.",["553"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'clientId' and 'getClientDetails'. Either include them or remove the dependency array.",["554"],["555"],"'location' is assigned a value but never used.","'setLgaLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getClientDetails' and 'user.user_id'. Either include them or remove the dependency array.",["556"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'resetLinkSuccess' is assigned a value but never used.","React Hook React.useMemo has missing dependencies: 'authenticateUser' and 'user.user_id'. Either include them or remove the dependency array.",["557"],["558"],"React Hook useEffect has missing dependencies: 'currentAddedUser' and 'getClientDetails'. Either include them or remove the dependency array.",["559"],"React Hook useEffect has a missing dependency: 'biodata'. Either include it or remove the dependency array. You can also do a functional update 'setBiodata(b => ...)' if you only need 'biodata' in the 'setBiodata' call.",["560"],["561"],"React Hook useEffect has missing dependencies: 'bankList' and 'verifyBankInfo'. Either include them or remove the dependency array.",["562"],"React Hook useEffect has a missing dependency: 'bankInfo'. Either include it or remove the dependency array. You can also do a functional update 'setBankInfo(b => ...)' if you only need 'bankInfo' in the 'setBankInfo' call.",["563"],"React Hook useEffect has a missing dependency: 'close'. Either include it or remove the dependency array. If 'close' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["564"],["565"],["566"],["567"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["568"],["569"],["570"],"React Hook useEffect has a missing dependency: 'nextOfKin'. Either include it or remove the dependency array. You can also do a functional update 'setNextOfKin(n => ...)' if you only need 'nextOfKin' in the 'setNextOfKin' call.",["571"],"React Hook useEffect has a missing dependency: 'disburseBank'. Either include it or remove the dependency array. You can also do a functional update 'setDisburseBank(d => ...)' if you only need 'disburseBank' in the 'setDisburseBank' call.",["572"],"React Hook useEffect has a missing dependency: 'salaryBank'. Either include it or remove the dependency array. You can also do a functional update 'setSalaryBank(s => ...)' if you only need 'salaryBank' in the 'setSalaryBank' call.",["573"],"React Hook useEffect has missing dependencies: 'OfficeAddress' and 'employerInfo'. Either include them or remove the dependency array. You can also do a functional update 'setEmployerInfo(e => ...)' if you only need 'employerInfo' in the 'setEmployerInfo' call.",["574"],["575"],"React Hook useEffect has missing dependencies: 'clearErrors', 'clientId', and 'getClientDetails'. Either include them or remove the dependency array.",["576"],"React Hook useEffect has a missing dependency: 'basicInfo'. Either include it or remove the dependency array. You can also do a functional update 'setBasicInfo(b => ...)' if you only need 'basicInfo' in the 'setBasicInfo' call.",["577"],"'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loanId' and 'verifyRepaymentStatus'. Either include them or remove the dependency array.",["578"],["579"],["580"],["581"],"'RiUser3Fill' is defined but never used.","'history' is defined but never used.","'getAccountTransactionHistory' is assigned a value but never used.","'token' is assigned a value but never used.","'response' is assigned a value but never used.","'path' is assigned a value but never used.",["582"],"'Link' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.",["583"],"React Hook useEffect has missing dependencies: 'getClientListForRole' and 'retrieveClientLoans'. Either include them or remove the dependency array.",["584"],["585","586"],["587","588"],"React Hook useEffect has missing dependencies: 'loanData?.approvedAmount', 'loanData?.client?.firstName', 'loanData?.client?.lastName', 'loanData?.employment?.sector', 'loanData?.loanPurpose', 'loanData?.monthlyRepayment', 'loanData?.residence?.street', and 'offerFormData'. Either include them or remove the dependency array. You can also do a functional update 'setOfferFormData(o => ...)' if you only need 'offerFormData' in the 'setOfferFormData' call.",["589"],"React Hook useEffect has a missing dependency: 'returnNumber'. Either include it or remove the dependency array. If 'setFaqs' needs the current value of 'returnNumber', you can also switch to useReducer instead of useState and read 'returnNumber' in the reducer.",["590"],"'emptyState' is assigned a value but never used.",["591"],"React Hook useEffect has a missing dependency: 'clearErr'. Either include it or remove the dependency array.",["592"],"'loanApply' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loanCalcData'. Either include it or remove the dependency array. You can also do a functional update 'setLoanCalcData(l => ...)' if you only need 'loanCalcData' in the 'setLoanCalcData' call.",["593"],["594"],["595"],["596"],"'url' is assigned a value but never used.",["597"],["598"],"React Hook useMemo has a missing dependency: 'clientId'. Either include it or remove the dependency array.",["599"],"React Hook useEffect has a missing dependency: 'retrieveLoan'. Either include it or remove the dependency array.",["600"],"no-global-assign","no-unsafe-negation",{"desc":"601","fix":"602"},{"messageId":"603","fix":"604","desc":"605"},{"messageId":"606","fix":"607","desc":"608"},{"messageId":"603","fix":"609","desc":"605"},{"messageId":"606","fix":"610","desc":"608"},{"desc":"611","fix":"612"},{"desc":"613","fix":"614"},{"desc":"615","fix":"616"},{"desc":"615","fix":"617"},{"desc":"618","fix":"619"},{"desc":"620","fix":"621"},{"desc":"622","fix":"623"},{"desc":"624","fix":"625"},{"desc":"626","fix":"627"},{"desc":"628","fix":"629"},{"desc":"630","fix":"631"},{"desc":"628","fix":"632"},{"desc":"633","fix":"634"},{"desc":"635","fix":"636"},{"desc":"601","fix":"637"},{"desc":"638","fix":"639"},{"desc":"640","fix":"641"},{"desc":"620","fix":"642"},{"desc":"643","fix":"644"},{"desc":"645","fix":"646"},{"desc":"647","fix":"648"},{"desc":"601","fix":"649"},{"desc":"601","fix":"650"},{"desc":"633","fix":"651"},{"desc":"652","fix":"653"},{"desc":"601","fix":"654"},{"desc":"655","fix":"656"},{"desc":"657","fix":"658"},{"desc":"659","fix":"660"},{"desc":"661","fix":"662"},{"desc":"663","fix":"664"},{"desc":"615","fix":"665"},{"desc":"666","fix":"667"},{"desc":"668","fix":"669"},{"desc":"670","fix":"671"},{"desc":"628","fix":"672"},{"desc":"601","fix":"673"},{"desc":"615","fix":"674"},{"desc":"615","fix":"675"},{"desc":"601","fix":"676"},{"desc":"677","fix":"678"},{"messageId":"603","fix":"679","desc":"605"},{"messageId":"606","fix":"680","desc":"608"},{"messageId":"603","fix":"681","desc":"605"},{"messageId":"606","fix":"682","desc":"608"},{"desc":"683","fix":"684"},{"desc":"685","fix":"686"},{"desc":"601","fix":"687"},{"desc":"688","fix":"689"},{"desc":"690","fix":"691"},{"desc":"615","fix":"692"},{"desc":"618","fix":"693"},{"desc":"630","fix":"694"},{"desc":"677","fix":"695"},{"desc":"615","fix":"696"},{"desc":"697","fix":"698"},{"desc":"699","fix":"700"},"Update the dependencies array to be: [clearErrors, error]",{"range":"701","text":"702"},"removeEscape",{"range":"703","text":"704"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"705","text":"706"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"707","text":"704"},{"range":"708","text":"706"},"Update the dependencies array to be: [loanData, location]",{"range":"709","text":"710"},"Update the dependencies array to be: [proposedAmount, proposedDuration, monthlyIncome, loanData]",{"range":"711","text":"712"},"Update the dependencies array to be: [retrieveClientLoans]",{"range":"713","text":"714"},{"range":"715","text":"714"},"Update the dependencies array to be: [clearError, error]",{"range":"716","text":"717"},"Update the dependencies array to be: [getBankList]",{"range":"718","text":"719"},"Update the dependencies array to be: [approvalData, loanData]",{"range":"720","text":"721"},"Update the dependencies array to be: [clientBank]",{"range":"722","text":"723"},"Update the dependencies array to be: [loanData, repayData]",{"range":"724","text":"725"},"Update the dependencies array to be: [loanId, retrieveLoan]",{"range":"726","text":"727"},"Update the dependencies array to be: [clientId, getClientDetails]",{"range":"728","text":"729"},{"range":"730","text":"727"},"Update the dependencies array to be: [getClientDetails, user.user_id]",{"range":"731","text":"732"},"Update the dependencies array to be: [authenticateUser, user.user_id]",{"range":"733","text":"734"},{"range":"735","text":"702"},"Update the dependencies array to be: [currentAddedUser, getClientDetails]",{"range":"736","text":"737"},"Update the dependencies array to be: [biodata, currentAddedUser, userDetails]",{"range":"738","text":"739"},{"range":"740","text":"719"},"Update the dependencies array to be: [bankInfo.accountNumber, bankInfo.bankName, bankList, verifyBankInfo]",{"range":"741","text":"742"},"Update the dependencies array to be: [bankInfo, userBankDetails]",{"range":"743","text":"744"},"Update the dependencies array to be: [close]",{"range":"745","text":"746"},{"range":"747","text":"702"},{"range":"748","text":"702"},{"range":"749","text":"732"},"Update the dependencies array to be: [history, userDetails]",{"range":"750","text":"751"},{"range":"752","text":"702"},"Update the dependencies array to be: [biodata, data]",{"range":"753","text":"754"},"Update the dependencies array to be: [data, nextOfKin]",{"range":"755","text":"756"},"Update the dependencies array to be: [data, disburseBank]",{"range":"757","text":"758"},"Update the dependencies array to be: [loanDeets, salaryBank]",{"range":"759","text":"760"},"Update the dependencies array to be: [OfficeAddress, employerInfo, loanDeets]",{"range":"761","text":"762"},{"range":"763","text":"714"},"Update the dependencies array to be: [clearErrors, clientId, getClientDetails]",{"range":"764","text":"765"},"Update the dependencies array to be: [basicInfo, data]",{"range":"766","text":"767"},"Update the dependencies array to be: [loanId, verifyRepaymentStatus]",{"range":"768","text":"769"},{"range":"770","text":"727"},{"range":"771","text":"702"},{"range":"772","text":"714"},{"range":"773","text":"714"},{"range":"774","text":"702"},"Update the dependencies array to be: [getClientListForRole, retrieveClientLoans]",{"range":"775","text":"776"},{"range":"777","text":"704"},{"range":"778","text":"706"},{"range":"779","text":"704"},{"range":"780","text":"706"},"Update the dependencies array to be: [loanData?.approvedAmount, loanData?.client?.firstName, loanData?.client?.lastName, loanData?.employment?.sector, loanData?.loanPurpose, loanData?.monthlyRepayment, loanData?.residence?.street, offerFormData]",{"range":"781","text":"782"},"Update the dependencies array to be: [returnNumber]",{"range":"783","text":"784"},{"range":"785","text":"702"},"Update the dependencies array to be: [clearErr, userError]",{"range":"786","text":"787"},"Update the dependencies array to be: [monthlySalary, loanAmount, installmentPeriod, loanCalcData.dti, loanCalcData]",{"range":"788","text":"789"},{"range":"790","text":"714"},{"range":"791","text":"717"},{"range":"792","text":"729"},{"range":"793","text":"776"},{"range":"794","text":"714"},"Update the dependencies array to be: [clientId, loans]",{"range":"795","text":"796"},"Update the dependencies array to be: [retrieveLoan, userLoans]",{"range":"797","text":"798"},[1192,1199],"[clearErrors, error]",[1464,1465],"",[1464,1464],"\\",[1489,1490],[1489,1489],[1402,1412],"[loanData, location]",[2253,2302],"[proposedAmount, proposedDuration, monthlyIncome, loanData]",[904,906],"[retrieveClientLoans]",[812,814],[1703,1710],"[clearError, error]",[2471,2473],"[getBankList]",[2946,2956],"[approvalData, loanData]",[5748,5762],"[clientBank]",[12364,12374],"[loanData, repayData]",[19713,19715],"[loanId, retrieveLoan]",[2829,2831],"[clientId, getClientDetails]",[1179,1181],[1193,1195],"[getClientDetails, user.user_id]",[1060,1062],"[authenticateUser, user.user_id]",[1332,1339],[2818,2820],"[currentAddedUser, getClientDetails]",[3184,3215],"[biodata, currentAddedUser, userDetails]",[14599,14601],[15039,15082],"[bankInfo.accountNumber, bankInfo.bankName, bankList, verifyBankInfo]",[15255,15272],"[bankInfo, userBankDetails]",[21241,21243],"[close]",[882,889],[868,875],[1704,1706],[2253,2266],"[history, userDetails]",[2363,2370],[1984,1990],"[biodata, data]",[4959,4965],"[data, nextOfKin]",[6937,6943],"[data, disburseBank]",[7287,7298],"[loanDeets, salaryBank]",[10781,10792],"[OfficeAddress, employerInfo, loanDeets]",[13630,13632],[17010,17012],"[clearErrors, clientId, getClientDetails]",[1696,1702],"[basicInfo, data]",[5923,5925],"[loanId, verifyRepaymentStatus]",[8621,8623],[664,671],[819,821],[1105,1107],[1036,1043],[1813,1815],"[getClientListForRole, retrieveClientLoans]",[92,93],[92,92],[117,118],[117,117],[1773,1775],"[loanData?.approvedAmount, loanData?.client?.firstName, loanData?.client?.lastName, loanData?.employment?.sector, loanData?.loanPurpose, loanData?.monthlyRepayment, loanData?.residence?.street, offerFormData]",[1194,1196],"[returnNumber]",[10218,10225],[10372,10383],"[clearErr, userError]",[2869,2933],"[monthlySalary, loanAmount, installmentPeriod, loanCalcData.dti, loanCalcData]",[1840,1842],[1939,1946],[1155,1157],[1811,1813],[375,377],[493,500],"[clientId, loans]",[564,575],"[retrieveLoan, userLoans]"]