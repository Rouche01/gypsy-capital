[{"/home/tga/Desktop/gypsy-capital/src/App.js":"1","/home/tga/Desktop/gypsy-capital/src/pages/pages.js":"2","/home/tga/Desktop/gypsy-capital/src/context/UserContext.js":"3","/home/tga/Desktop/gypsy-capital/src/context/AuthContext.js":"4","/home/tga/Desktop/gypsy-capital/src/api/gypsy-web.js":"5","/home/tga/Desktop/gypsy-capital/src/utils/resolveToken.js":"6","/home/tga/Desktop/gypsy-capital/src/pages/Profile/Profile.jsx":"7","/home/tga/Desktop/gypsy-capital/src/pages/OtpVerify/OtpVerify.jsx":"8","/home/tga/Desktop/gypsy-capital/src/pages/SignUp/SignUp.jsx":"9","/home/tga/Desktop/gypsy-capital/src/pages/ContactPage/ContactPage.jsx":"10","/home/tga/Desktop/gypsy-capital/src/pages/LoanDetail/LoanDetail.jsx":"11","/home/tga/Desktop/gypsy-capital/src/pages/Faqs/Faqs.jsx":"12","/home/tga/Desktop/gypsy-capital/src/pages/ForgotPassword/ForgotPassword.jsx":"13","/home/tga/Desktop/gypsy-capital/src/pages/ResetPassword/ResetPassword.jsx":"14","/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerClientDetails/AuthorizerClientDetails.jsx":"15","/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerClients/AuthorizerClients.jsx":"16","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorClientDetails/ProcessorClientDetails.jsx":"17","/home/tga/Desktop/gypsy-capital/src/utils/nigeriaStates.js":"18","/home/tga/Desktop/gypsy-capital/src/components/InputField/InputField.js":"19","/home/tga/Desktop/gypsy-capital/src/components/PersonalForm/PersonalForm.jsx":"20","/home/tga/Desktop/gypsy-capital/src/components/EmployerInfoForm/EmployerInfoForm.jsx":"21","/home/tga/Desktop/gypsy-capital/src/components/BankInfoForm/BankInfoForm.jsx":"22","/home/tga/Desktop/gypsy-capital/src/components/NavTabs/NavTabs.jsx":"23","/home/tga/Desktop/gypsy-capital/src/components/StatBox/StatBox.jsx":"24","/home/tga/Desktop/gypsy-capital/src/utils/mappedLgas.js":"25","/home/tga/Desktop/gypsy-capital/src/components/FaqSection/FaqSection.jsx":"26","/home/tga/Desktop/gypsy-capital/src/components/OfferLetter/OfferLetter.jsx":"27","/home/tga/Desktop/gypsy-capital/src/components/AccountSetupModal/AccountSetupModal.jsx":"28","/home/tga/Desktop/gypsy-capital/src/components/OfferLetter/OfferLetterForm.jsx":"29","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorLoanDetails/ProcessorLoanDetails.jsx":"30","/home/tga/Desktop/gypsy-capital/src/pages/LoanCalculator/LoanCalculator.jsx":"31","/home/tga/Desktop/gypsy-capital/src/components/CustomDatePicker/CustomDatePicker.jsx":"32","/home/tga/Desktop/gypsy-capital/src/index.js":"33","/home/tga/Desktop/gypsy-capital/src/routes/pageUrl.js":"34","/home/tga/Desktop/gypsy-capital/src/context/MonoContext.js":"35","/home/tga/Desktop/gypsy-capital/src/utils/history.js":"36","/home/tga/Desktop/gypsy-capital/src/context/ApprovalContext.js":"37","/home/tga/Desktop/gypsy-capital/src/context/createPersistDataContext.js":"38","/home/tga/Desktop/gypsy-capital/src/pages/Overview/Overview.jsx":"39","/home/tga/Desktop/gypsy-capital/src/pages/SignIn/SignIn.jsx":"40","/home/tga/Desktop/gypsy-capital/src/pages/AgentOverview/AgentOverview.jsx":"41","/home/tga/Desktop/gypsy-capital/src/pages/Support/Support.jsx":"42","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorClients/ProcessorClients.jsx":"43","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorLoans/ProcessorLoans.jsx":"44","/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerLoanDetails/AuthorizerLoanDetails.jsx":"45","/home/tga/Desktop/gypsy-capital/src/utils/convertInputType.js":"46","/home/tga/Desktop/gypsy-capital/src/components/LoanCalculatorForm/LoanCalculatorForm.jsx":"47","/home/tga/Desktop/gypsy-capital/src/components/NavBar/NavBar.jsx":"48","/home/tga/Desktop/gypsy-capital/src/components/LoanList/LoanList.jsx":"49","/home/tga/Desktop/gypsy-capital/src/components/ProfileView/ProfileView.jsx":"50","/home/tga/Desktop/gypsy-capital/src/components/ModalForm/ModalForm.jsx":"51","/home/tga/Desktop/gypsy-capital/src/components/MonoWidget/MonoWidget.jsx":"52","/home/tga/Desktop/gypsy-capital/src/components/ProcessOffer/ProcessOffer.jsx":"53","/home/tga/Desktop/gypsy-capital/src/utils/validateInput.js":"54","/home/tga/Desktop/gypsy-capital/src/context/BankCotext.js":"55","/home/tga/Desktop/gypsy-capital/src/pages/HomePage/HomePage.jsx":"56","/home/tga/Desktop/gypsy-capital/src/pages/Products/Products.jsx":"57","/home/tga/Desktop/gypsy-capital/src/pages/ClientDetails/ClientDetails.jsx":"58","/home/tga/Desktop/gypsy-capital/src/routes/sidebarRoutes.js":"59","/home/tga/Desktop/gypsy-capital/src/components/Dashboard/Dashboard.jsx":"60","/home/tga/Desktop/gypsy-capital/src/components/Loader/Loader.jsx":"61","/home/tga/Desktop/gypsy-capital/src/components/ScrollToTopOnMount/ScrollToTopOnMount.jsx":"62","/home/tga/Desktop/gypsy-capital/src/components/LoanModal/LoanModal.jsx":"63","/home/tga/Desktop/gypsy-capital/src/hooks/useNavigateAfterAuth.js":"64","/home/tga/Desktop/gypsy-capital/src/components/BvnForm/BvnForm.jsx":"65","/home/tga/Desktop/gypsy-capital/src/context/RepaymentContext.js":"66"},{"size":4659,"mtime":1615286487857,"results":"67","hashOfConfig":"68"},{"size":2387,"mtime":1615165250184,"results":"69","hashOfConfig":"68"},{"size":8357,"mtime":1615172320352,"results":"70","hashOfConfig":"68"},{"size":8060,"mtime":1615162900026,"results":"71","hashOfConfig":"68"},{"size":194,"mtime":1615812339399,"results":"72","hashOfConfig":"68"},{"size":192,"mtime":1612142197425,"results":"73","hashOfConfig":"68"},{"size":5552,"mtime":1614520423023,"results":"74","hashOfConfig":"68"},{"size":2391,"mtime":1612574568451,"results":"75","hashOfConfig":"68"},{"size":8013,"mtime":1615162061114,"results":"76","hashOfConfig":"68"},{"size":5318,"mtime":1615812259199,"results":"77","hashOfConfig":"68"},{"size":9994,"mtime":1615812339415,"results":"78","hashOfConfig":"68"},{"size":855,"mtime":1615812259207,"results":"79","hashOfConfig":"68"},{"size":1549,"mtime":1613844663739,"results":"80","hashOfConfig":"68"},{"size":3453,"mtime":1613889706632,"results":"81","hashOfConfig":"68"},{"size":2997,"mtime":1615812259183,"results":"82","hashOfConfig":"68"},{"size":1072,"mtime":1614757665510,"results":"83","hashOfConfig":"68"},{"size":4749,"mtime":1615230346385,"results":"84","hashOfConfig":"68"},{"size":6681,"mtime":1615332137598,"results":"85","hashOfConfig":"68"},{"size":2658,"mtime":1615812259071,"results":"86","hashOfConfig":"68"},{"size":14395,"mtime":1613915891204,"results":"87","hashOfConfig":"68"},{"size":9416,"mtime":1614451042975,"results":"88","hashOfConfig":"68"},{"size":5659,"mtime":1613933105810,"results":"89","hashOfConfig":"68"},{"size":504,"mtime":1613386895718,"results":"90","hashOfConfig":"68"},{"size":359,"mtime":1613662172186,"results":"91","hashOfConfig":"68"},{"size":14356,"mtime":1614449747162,"results":"92","hashOfConfig":"68"},{"size":2165,"mtime":1615812259055,"results":"93","hashOfConfig":"68"},{"size":11980,"mtime":1615826503262,"results":"94","hashOfConfig":"68"},{"size":21688,"mtime":1614430258872,"results":"95","hashOfConfig":"68"},{"size":23650,"mtime":1615885590519,"results":"96","hashOfConfig":"68"},{"size":35816,"mtime":1615964471118,"results":"97","hashOfConfig":"68"},{"size":7784,"mtime":1615886397781,"results":"98","hashOfConfig":"68"},{"size":794,"mtime":1615944781210,"results":"99","hashOfConfig":"68"},{"size":601,"mtime":1615892768088,"results":"100","hashOfConfig":"68"},{"size":2456,"mtime":1615165274533,"results":"101","hashOfConfig":"68"},{"size":3808,"mtime":1615411153492,"results":"102","hashOfConfig":"68"},{"size":84,"mtime":1612764469627,"results":"103","hashOfConfig":"68"},{"size":2656,"mtime":1615411153492,"results":"104","hashOfConfig":"68"},{"size":821,"mtime":1612688150601,"results":"105","hashOfConfig":"68"},{"size":5197,"mtime":1613938100761,"results":"106","hashOfConfig":"68"},{"size":3662,"mtime":1614846996299,"results":"107","hashOfConfig":"68"},{"size":5044,"mtime":1615450279629,"results":"108","hashOfConfig":"68"},{"size":473,"mtime":1614546415965,"results":"109","hashOfConfig":"68"},{"size":1079,"mtime":1614757571893,"results":"110","hashOfConfig":"68"},{"size":1038,"mtime":1614577544983,"results":"111","hashOfConfig":"68"},{"size":3336,"mtime":1615964017891,"results":"112","hashOfConfig":"68"},{"size":404,"mtime":1615812259267,"results":"113","hashOfConfig":"68"},{"size":8395,"mtime":1615885381873,"results":"114","hashOfConfig":"68"},{"size":3124,"mtime":1615812259099,"results":"115","hashOfConfig":"68"},{"size":3592,"mtime":1614577812286,"results":"116","hashOfConfig":"68"},{"size":7350,"mtime":1615166227442,"results":"117","hashOfConfig":"68"},{"size":11735,"mtime":1614471117577,"results":"118","hashOfConfig":"68"},{"size":1633,"mtime":1615286487857,"results":"119","hashOfConfig":"68"},{"size":2173,"mtime":1615812259143,"results":"120","hashOfConfig":"68"},{"size":1191,"mtime":1615908375499,"results":"121","hashOfConfig":"68"},{"size":1970,"mtime":1615411153492,"results":"122","hashOfConfig":"68"},{"size":16172,"mtime":1615812259207,"results":"123","hashOfConfig":"68"},{"size":12257,"mtime":1615039376564,"results":"124","hashOfConfig":"68"},{"size":18542,"mtime":1615230346361,"results":"125","hashOfConfig":"68"},{"size":2677,"mtime":1614724878260,"results":"126","hashOfConfig":"68"},{"size":4301,"mtime":1614470843592,"results":"127","hashOfConfig":"68"},{"size":244,"mtime":1614263157725,"results":"128","hashOfConfig":"68"},{"size":183,"mtime":1615812259163,"results":"129","hashOfConfig":"68"},{"size":4849,"mtime":1614451456706,"results":"130","hashOfConfig":"68"},{"size":990,"mtime":1614729905905,"results":"131","hashOfConfig":"68"},{"size":1331,"mtime":1612592363525,"results":"132","hashOfConfig":"68"},{"size":2488,"mtime":1615963618400,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"t9s37o",{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"153"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"153"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"157"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"153"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"153"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"153"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/tga/Desktop/gypsy-capital/src/App.js",[],"/home/tga/Desktop/gypsy-capital/src/pages/pages.js",[],"/home/tga/Desktop/gypsy-capital/src/context/UserContext.js",[],"/home/tga/Desktop/gypsy-capital/src/context/AuthContext.js",[],"/home/tga/Desktop/gypsy-capital/src/api/gypsy-web.js",[],"/home/tga/Desktop/gypsy-capital/src/utils/resolveToken.js",["279"],"/home/tga/Desktop/gypsy-capital/src/pages/Profile/Profile.jsx",["280","281","282"],"/home/tga/Desktop/gypsy-capital/src/pages/OtpVerify/OtpVerify.jsx",["283"],"/home/tga/Desktop/gypsy-capital/src/pages/SignUp/SignUp.jsx",["284","285","286"],"import React, { useContext, useEffect, useState } from 'react';\nimport Logo from '../../assets/logo.png';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport styles from './SignUp.module.scss';\nimport { Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport pageUrl from '../../routes/pageUrl';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\nconst SignUp = () => {\n\n  const { \n    state: { loading, error }, \n    registerUser, \n    getActiveUser, \n    clearErrors \n  } = useContext(AuthContext);\n\n  const [signUpValues, setSignUpvalues] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    mobileNumber: '',\n    password: '',\n    confirmPassword: '',\n    referralChoice: ''\n  });\n\n  const [validationErrors, setValidationErrors] = useState({\n    firstName: null,\n    lastName: null,\n    email: null,\n    mobileNumber: null,\n    password: null,\n    confirmPassword: null,\n    referralChoice: null\n  })\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearErrors();\n    }\n  }, [error])\n\n  const referralOptions = [\n    'Search Engine', \n    'Google Ads', \n    'Email', \n    'Radio', \n    'TV', \n    'Newspaper', \n    'Word of mouth',\n    'Facebook',\n    'Instagram',\n    'Other'\n  ]\n\n  const validateInput = () => {\n\n    const validMail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    let validPhoneNumber = /^[0]\\d{10}$/;\n\n    const errorsInit = {};\n    let fields = { ...signUpValues }\n\n    for(const key in fields) {\n      if(!fields[key]) {\n        errorsInit[key] = \"This field is required\";\n      } \n      if(fields.email && !fields.email.match(validMail)) {\n        errorsInit.email = \"Please enter a valid email address\"\n      } \n      if(fields.mobileNumber && !fields.mobileNumber.match(validPhoneNumber)) {\n        errorsInit.mobileNumber = \"Please enter a valid phone number\"\n      } \n      if(fields.password && fields.password.length < 8) {\n        errorsInit.password = \"Password must be at least 8 characters\";\n      }\n      if(fields.confirmPassword && fields.confirmPassword !== fields.password) {\n        errorsInit.confirmPassword = \"Your password does not match\"\n      }\n    }\n\n    setValidationErrors(errorsInit);\n\n    if(Object.entries(errorsInit).length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n\n  }\n\n  const handleSubmit = () => {\n    const validated = validateInput();\n    const signUpData = {\n      email: signUpValues.email,\n      firstName: signUpValues.firstName,\n      lastName: signUpValues.lastName,\n      phoneNumber: signUpValues.mobileNumber.replace('0', '234'),\n      password: signUpValues.password,\n      hearAboutUs: signUpValues.referralChoice,\n    }\n    console.log(signUpData);\n    if(validated) {\n      registerUser(signUpData, getActiveUser);\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <Link to={pageUrl.HOMEPAGE}><img src={Logo} alt=\"Gypsy Logo\" /></Link>\n      <h1>Create your account</h1>\n      <p className={styles.subtitle}>Hey there, let's setup your Gypsy Capital account</p>\n      <div className={styles.registerBox}>\n        <ToastContainer position=\"top-center\" />\n        <Row>\n          <Col sm={12} md={6} className=\"mb-4 mb-md-0\">\n            <InputField type=\"text\" \n              nameAttr=\"firstName\" \n              label=\"First Name\" \n              value={signUpValues.firstName} \n              changed={(val) => {\n                setValidationErrors({ ...validationErrors, firstName: null })\n                setSignUpvalues({...signUpValues, firstName: val})\n              }}\n              error={validationErrors.firstName && validationErrors.firstName}\n            />\n          </Col>\n          <Col sm={12} md={6} className=\"mb-4 mb-md-0\">\n            <InputField type=\"text\" \n              nameAttr=\"lastName\" \n              label=\"Last Name\" \n              value={signUpValues.lastName}\n              changed={(val) => {\n                setValidationErrors({ ...validationErrors, lastName: null })\n                setSignUpvalues({...signUpValues, lastName: val})\n              }}\n              error={validationErrors.lastName && validationErrors.lastName}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mt-0 mt-md-4\">\n          <Col sm={12} md={6} className=\"mb-4 mb-md-0\">\n            <InputField type=\"email\" \n              nameAttr=\"email\" \n              label=\"Email\" \n              value={signUpValues.email}\n              changed={(val) => {\n                setValidationErrors({ ...validationErrors, email: null })\n                setSignUpvalues({...signUpValues, email: val})\n              }}\n              error={validationErrors.email && validationErrors.email}\n            />\n          </Col>\n          <Col sm={12} md={6} className=\"mb-4 mb-md-0\">\n            <InputField type=\"phone\" \n              nameAttr=\"mobileNo\" \n              label=\"Mobile Number\" \n              value={signUpValues.mobileNumber}\n              changed={(val) => {\n                setValidationErrors({...validationErrors, mobileNumber: null})\n                setSignUpvalues({...signUpValues, mobileNumber: val})\n              }}\n              error={validationErrors.mobileNumber && validationErrors.mobileNumber}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mt-0 mt-md-4\">\n          <Col sm={12} md={6} className=\"mb-4 mb-md-0\">\n            <InputField type=\"password\" \n              nameAttr=\"password\" \n              label=\"Password\" \n              value={signUpValues.password}\n              changed={(val) => {\n                setValidationErrors({...validationErrors, password: null})\n                setSignUpvalues({...signUpValues, password: val})\n              }}\n              error={validationErrors.password && validationErrors.password}\n            />\n          </Col>\n          <Col sm={12} md={6} className=\"mb-4 mb-md-0\">\n            <InputField type=\"password\" \n              nameAttr=\"confirmPassword\" \n              label=\"Confirm Password\" \n              value={signUpValues.confirmPassword}\n              changed={(val) => {\n                setValidationErrors({...validationErrors, confirmPassword: null})\n                setSignUpvalues({...signUpValues, confirmPassword: val})\n              }}\n              error={validationErrors.confirmPassword && validationErrors.confirmPassword}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mt-0 mt-md-4\">\n          <Col className=\"mb-4 mb-md-0\">\n            <InputField type=\"select\" \n              label=\"How did you hear about us?\" \n              options={referralOptions} \n              nameAttr=\"publicity\"\n              changed={(val) => {\n                setValidationErrors({...validationErrors, referralChoice: null})\n                setSignUpvalues({...signUpValues, referralChoice: val})\n              }}\n              error={validationErrors.referralChoice && validationErrors.referralChoice}\n            />\n          </Col>\n        </Row>\n        <Button \n          className={ loading ? [styles.loadingBtn, \"mt-5\"].join(' ') : \"mt-5\" } \n          fullWidth \n          clicked={handleSubmit} \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n          disabled={loading}\n          loading={loading}\n        >\n          Sign Up\n        </Button>\n        <p className={[styles.authLink, 'mt-3'].join(' ')}>\n          Already have an account? <Link to={pageUrl.SIGNIN_PAGE}>Log in</Link>\n        </p>\n        <p className={styles.legalLink}>\n          By continuing, you agree to our <Link to={pageUrl.TERMS_CONDITIONS_PAGE}>Terms and Conditions</Link> of service and <Link to={pageUrl.PRIVACY_POLICY_PAGE}>Privacy Policy.</Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n\n\nexport default SignUp;",["287","288"],"/home/tga/Desktop/gypsy-capital/src/pages/ContactPage/ContactPage.jsx",["289"],"import React, { useState } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport styles from \"./ContactPage.module.scss\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport { HiLocationMarker, HiMail, HiPhone } from \"react-icons/hi\";\nimport { IoLogoWhatsapp } from \"react-icons/io\";\nimport Footer from \"../../components/Footer/Footer\";\nimport InputField from \"../../components/InputField/InputField\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport ScrollToTopOnMount from \"../../components/ScrollToTopOnMount/ScrollToTopOnMount\";\n\nconst ContactPage = ({ history }) => {\n  const { url } = useRouteMatch();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    subject: \"\",\n    message: \"\",\n  });\n\n  return (\n    <>\n      <ScrollToTopOnMount />\n      <NavBar history={history} location={url} />\n      <div className={styles.heroSection}>\n        <div className={styles.container}>\n          <h2>Contact Us</h2>\n        </div>\n        <div className={styles.bgOverlay}></div>\n      </div>\n      <div className={styles.mapSection}>\n        <div className={styles.container}>\n          <iframe\n            className={styles.map}\n            frameBorder={0}\n            scrolling=\"no\"\n            marginHeight={0}\n            marginWidth={0}\n            src=\"https://maps.google.com/maps?hl=en&amp;q=Landmark%20Towers,%205B%20Water%20Corporation%20Rd,Oniru%20Rd,%20Victoria%20Island%20101241,%20Lagos+(Gypsy%20Capital)&amp;t=&amp;z=15&amp;ie=UTF8&amp;iwloc=B&amp;output=embed\"\n          ></iframe>\n        </div>\n      </div>\n      <div className={styles.contactSection}>\n        <div className={styles.container}>\n          <Row>\n            <Col sm={12} md={7} className=\"mb-5 mb-md-0\">\n              <div className={styles.contactForm}>\n                <h3>Send Us A Message</h3>\n                <Row className=\"mb-0 mb-md-4\">\n                  <Col sm={12} md={6} className=\"mb-3 mb-md-0\">\n                    <InputField\n                      type=\"text\"\n                      placeholder=\"Name\"\n                      nameAttr=\"name\"\n                      value={formData.name}\n                      changed={(val) => setFormData({ ...formData, name: val })}\n                    />\n                  </Col>\n                  <Col sm={12} md={6} className=\"mb-3 mb-md-0\">\n                    <InputField\n                      type=\"email\"\n                      placeholder=\"Email\"\n                      nameAttr=\"email\"\n                      value={formData.email}\n                      changed={(val) =>\n                        setFormData({ ...formData, email: val })\n                      }\n                    />\n                  </Col>\n                </Row>\n                <Row className=\"mb-0 mb-md-4\">\n                  <Col className=\"mb-3 mb-md-0\">\n                    <InputField\n                      type=\"text\"\n                      placeholder=\"Subject\"\n                      nameAttr=\"subject\"\n                      value={formData.subject}\n                      changed={(val) =>\n                        setFormData({ ...formData, subject: val })\n                      }\n                    />\n                  </Col>\n                </Row>\n                <Row className=\"mb-0 mb-md-4\">\n                  <Col className=\"mb-3 mb-md-0\">\n                    <InputField\n                      type=\"textarea\"\n                      placeholder=\"Message\"\n                      nameAttr=\"message\"\n                      value={formData.message}\n                      changed={(val) =>\n                        setFormData({ ...formData, message: val })\n                      }\n                    />\n                  </Col>\n                </Row>\n                <button>Submit</button>\n              </div>\n            </Col>\n            <Col sm={12} md={5} className=\"mb-5 mb-md-0\">\n              <div className={styles.addressBox}>\n                <h3>Get In Touch</h3>\n                <div className={styles.addressGroup}>\n                  <HiLocationMarker\n                    className={[styles.icon, styles.locator].join(\" \")}\n                    size=\"3.5em\"\n                  />\n                  <p>\n                    Landmark Towers, 5B Water Corporation Rd,Oniru Rd, Victoria\n                    Island 101241, Lagos\n                  </p>\n                </div>\n                <div className={styles.addressGroup}>\n                  <HiMail\n                    className={[styles.icon, styles.others].join(\" \")}\n                    size=\"1.8em\"\n                  />\n                  <p>hello@gypsycapital.com</p>\n                </div>\n                <div className={styles.addressGroup}>\n                  <HiPhone\n                    className={[styles.icon, styles.others].join(\" \")}\n                    size=\"1.8em\"\n                  />\n                  <p>+234 904 144 4888</p>\n                </div>\n                <div className={styles.addressGroup}>\n                  <IoLogoWhatsapp\n                    className={[styles.icon, styles.others].join(\" \")}\n                    size=\"1.8em\"\n                  />\n                  <p>+234 904 144 4888</p>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default ContactPage;\n",["290","291"],"/home/tga/Desktop/gypsy-capital/src/pages/LoanDetail/LoanDetail.jsx",["292","293","294","295"],"/home/tga/Desktop/gypsy-capital/src/pages/Faqs/Faqs.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/ForgotPassword/ForgotPassword.jsx",["296"],"import React, { useContext, useEffect, useState } from 'react';\nimport styles from './ForgotPassword.module.scss';\nimport Logo from '../../assets/logo.png';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { ToastContainer, toast  } from 'react-toastify';\n\n\nconst ForgotPassword = () => {\n\n  const [email, setEmail] = useState('');\n  const { state: { loading, error }, resetPassword, clearErrors } = useContext(UserContext);\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearErrors();\n    }\n  }, [error])\n\n  const initiatePasswordReset = () => {\n    resetPassword(email);\n  }\n\n  return (\n    <div className={styles.container}>\n      <ToastContainer position=\"top-center\" />\n      <img src={Logo} alt=\"Gypsy Logo\" />\n      <h1>Forgot Password?</h1>\n      <p>Enter the email address associated with your account</p>\n      <div className={styles.formBox}>\n        <InputField \n          type=\"email\"\n          label=\"Email\"\n          nameAttr=\"email\"\n          value={email}\n          changed={(val) => setEmail(val)}\n        />\n        <Button\n          fullWidth \n          clicked={initiatePasswordReset}\n          className=\"mt-4\" \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n          loading={loading}\n          disabled={loading}\n        >\n          Reset Password\n        </Button>\n      </div>\n    </div>\n  )\n}\n\n\nexport default ForgotPassword;","/home/tga/Desktop/gypsy-capital/src/pages/ResetPassword/ResetPassword.jsx",["297"],"/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerClientDetails/AuthorizerClientDetails.jsx",["298"],"/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerClients/AuthorizerClients.jsx",["299","300"],"import React, { useEffect, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport { routes } from '../../routes/sidebarRoutes';\nimport ClientList from '../../components/ClientList/ClientList';\nimport styles from './AuthorizerClients.module.scss';\nimport Loader from '../../components/Loader/Loader';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\n\n\nconst AuthorizerClients = () => {\n\n  const authorizerRoutes = routes[3]\n  const location = useLocation()\n\n  const { state: { user } } = useContext(AuthContext);\n  const { state: { clientsForRole, loading }, getClientListForRole } = useContext(UserContext);\n\n  useEffect(() => {\n    getClientListForRole()\n  }, [])\n\n  return(\n    <Dashboard sidebarRoutes={authorizerRoutes} location={location}>\n      { !loading ? <ClientList clientList={clientsForRole} role={user.role}/> : <Loader /> }\n    </Dashboard>\n  )\n}\n\n\nexport default AuthorizerClients;","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorClientDetails/ProcessorClientDetails.jsx",["301","302"],"/home/tga/Desktop/gypsy-capital/src/utils/nigeriaStates.js",[],"/home/tga/Desktop/gypsy-capital/src/components/InputField/InputField.js",[],"/home/tga/Desktop/gypsy-capital/src/components/PersonalForm/PersonalForm.jsx",["303","304","305","306"],"/home/tga/Desktop/gypsy-capital/src/components/EmployerInfoForm/EmployerInfoForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/BankInfoForm/BankInfoForm.jsx",["307","308","309"],"import React, { useState, useRef, useMemo, useContext, useEffect } from 'react';\nimport styles from './BankInfoForm.module.scss';\nimport { Row, Col } from 'react-bootstrap';\nimport InputField from '../InputField/InputField';\nimport FileUploadButton from '../FileUploadButton/FileUploadButton';\nimport { FaCloudUploadAlt } from 'react-icons/fa';\nimport Button from '../Button/Button';\nimport { Context as BankContext } from '../../context/BankCotext';\nimport { Context as LoanContext } from '../../context/LoanContext';\nimport { validateInput } from '../../utils/validateInput';\nimport { ToastContainer, toast } from 'react-toastify';\nimport BeatLoader from 'react-spinners/BeatLoader';\n\n\nconst BankInfoForm = ({ submitBankInfo }) => {\n\n  const { state: { loading } } = useContext(LoanContext);\n\n  const { \n    state: { bankList, userBankDetails, bankLoading }, \n    getBankList, \n    verifyBankInfo,\n  } = useContext(BankContext);\n\n  const [bankInfo, setBankInfo] = useState({\n    bankName: \"\",\n    accountType: \"\",\n    accountNumber: \"\",\n    accountName: \"\",\n  })\n\n  const [bankErrors, setBankErrors] = useState({\n    bankName: null,\n    accountType: null,\n    accountNumber: null,\n  })\n\n  useEffect(() => {\n    (async() => {\n      await getBankList();\n    })()\n  }, [])\n \n  const bankNames = useMemo(() => {\n    return bankList ? \n      bankList.map((bank) => bank.name) :\n      []\n  }, [bankList])\n\n  const acctStatementRef = useRef();\n\n  const uploadBankInfo = () => {\n    if(acctStatementRef.current.files.length > 0) {\n      const acctStatement = acctStatementRef.current.files[0];\n      const validated = validateInput(bankInfo, setBankErrors);\n      if(validated) {\n        // console.log('validated')\n        const data = new FormData();\n        data.append('bank_name', bankInfo.bankName);\n        data.append('bank_account_type', bankInfo.accountType);\n        data.append('bank_account_number', bankInfo.accountNumber);\n        data.append('bank_account_name', bankInfo.accountName);\n        data.append('image', acctStatement);\n\n        // addBankInfoForLoan(data, user.user_id);\n        submitBankInfo(data);\n      }\n    } else {\n      toast.error(\"You need to upload your account statement to be able to proceed\")\n    }\n  }\n\n  useEffect(() => {\n    if(bankInfo.accountNumber.length === 10 && bankInfo.bankName) {\n      const bank = bankList.find(bank => bank.name.toLowerCase() === bankInfo.bankName);\n      const bankCode = bank.code;\n      console.log(bankCode)\n      verifyBankInfo(bankInfo.accountNumber, bankCode)\n    }\n  }, [bankInfo.accountNumber, bankInfo.bankName])\n\n  useEffect(() => {\n    console.log(userBankDetails);\n    if(userBankDetails) {\n      setBankInfo({ ...bankInfo, accountName: userBankDetails.account_name })\n    }\n  }, [userBankDetails]);\n\n  return (\n    <div className={styles.bankInfo}>\n      <ToastContainer position=\"top-center\" />\n      <p className={styles.importantInfo}>Bank account provided must be your salary account</p>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"select\"\n            nameAttr=\"bankName\"\n            label=\"Bank Name\"\n            options={bankNames}\n            value={bankInfo.bankName}\n            changed={(val) => {\n              setBankErrors({ ...bankErrors, bankName: null })\n              setBankInfo({ ...bankInfo, bankName: val })\n            }}\n            error={bankErrors.bankName && bankErrors.bankName}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"select\"\n            nameAttr=\"accountType\"\n            label=\"Bank Account Type\"\n            options={['Savings', 'Current']}\n            value={bankInfo.accountType}\n            changed={(val) => {\n              setBankErrors({ ...bankErrors, accountType: null })\n              setBankInfo({ ...bankInfo, accountType: val })\n            }}\n            error={bankErrors.accountType && bankErrors.accountType}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            nameAttr=\"acctNumber\"\n            label=\"Account Number\"\n            value={bankInfo.accountNumber}\n            changed={(val) => {\n              setBankErrors({ ...bankErrors, accountNumber: null })\n              setBankInfo({ ...bankInfo, accountNumber: val })\n            }}\n            error={bankErrors.accountNumber && bankErrors.accountNumber}\n          />\n        </Col>\n        <Col>\n          { !bankLoading ? <InputField \n            type=\"type\"\n            nameAttr=\"acctName\"\n            label=\"Account Name\"\n            value={bankInfo.accountName}\n            disable={true}\n            changed={(val) => setBankInfo({ ...bankInfo, accountName: val })}\n          /> : \n            <div className={styles.loaderWrapper}>\n              <BeatLoader color=\"#741763\" size={10} />\n            </div>\n          }\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <FileUploadButton \n            label=\"Choose file\"\n            icon={<FaCloudUploadAlt className=\"ml-3\" size=\"1.2em\" />}\n            id=\"acct-statement-upload\" \n            fileRef={acctStatementRef}\n            visibleLabel=\"Statement of Account\"\n            fullwidth\n          />\n          <p className={styles.inputHint}>Please provide your 6 months bank statement to us.</p>\n        </Col>\n      </Row>\n      <Button \n        className=\"mt-5\" \n        fullWidth \n        clicked={uploadBankInfo} \n        bgColor=\"#741763\" \n        size=\"lg\" \n        color=\"#EBEBEB\"\n        disabled={loading}\n        loading={loading}\n      >\n        Submit\n      </Button>\n    </div>\n  )\n}\n\nexport default BankInfoForm;","/home/tga/Desktop/gypsy-capital/src/components/NavTabs/NavTabs.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/StatBox/StatBox.jsx",[],"/home/tga/Desktop/gypsy-capital/src/utils/mappedLgas.js",[],"/home/tga/Desktop/gypsy-capital/src/components/FaqSection/FaqSection.jsx",["310"],"/home/tga/Desktop/gypsy-capital/src/components/OfferLetter/OfferLetter.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/AccountSetupModal/AccountSetupModal.jsx",["311","312","313","314","315","316"],"import React, { useContext, useEffect, useMemo, useState, useRef } from 'react';\nimport styles from './AccountSetupModal.module.scss';\nimport { Modal, Row, Col } from 'react-bootstrap';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport { validateInput } from '../../utils/validateInput';\nimport { nigeriaStates } from '../../utils/nigeriaStates';\nimport { Context as BankContext } from '../../context/BankCotext';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport FileUploadButton from '../FileUploadButton/FileUploadButton';\nimport { FaCloudUploadAlt } from 'react-icons/fa';\nimport { toast, ToastContainer } from 'react-toastify';\nimport Loader from '../Loader/Loader';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport BeatLoader from 'react-spinners/BeatLoader';\n\n\nexport const VerifyBvn = ({ submit }) => {\n\n  const [bvn, setBvn] = useState('');\n  const { state: { loading } } = useContext(UserContext);\n\n  const submitBvn = () => {\n    if(bvn) {\n      submit(bvn);\n    }\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Verify BVN</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row>\n            <Col>\n              <InputField \n                type=\"text\"\n                nameAttr=\"otp\"\n                label=\"Enter Client's BVN\"\n                value={bvn}\n                changed={(val) => {\n                  setBvn(val)\n                }}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button\n          fullWidth\n          bgColor=\"#741763\" \n          size=\"lg\" \n          clicked={submitBvn}\n          color=\"#EBEBEB\"\n          loading={loading}\n          disabled={loading}\n        >\n          Verify\n        </Button>\n        <p className={styles.hint}>To get your BVN, Dial *565*0#</p>\n      </Modal.Footer>\n    </>\n  )\n}\n\n\nexport const PersonalInfo = ({ submit }) => {\n\n  const { state: { userDetails }, getClientDetails } = useContext(UserContext);\n  const { state: { currentAddedUser} } = useContext(AuthContext);\n\n\n  const [biodata, setBiodata] = useState({\n    fullName: '',\n    dateOfBirth: '',\n    bvnPhoneNo: '',\n    email: '',\n    phoneNo: '',\n    altPhone: '',\n    gender: ''\n  });\n\n  const [biodataErrors, setBiodataErrors] = useState({\n    fullName: null,\n    dateOfBirth: null,\n    bvnPhoneNo: null,\n    email: null,\n    phoneNo: null,\n    altPhone: null,\n    gender: null\n  });\n\n\n  useEffect(() => {\n    const { user_id } = currentAddedUser;\n    getClientDetails(user_id);\n  }, []);\n\n  useEffect(() => {\n    if(userDetails) {\n      const { bioData } = userDetails;\n      setBiodata({ ...biodata, \n        fullName: `${bioData.firstName} ${bioData.lastName}`,\n        email: bioData.email,\n        phoneNo: bioData.phoneNumber.replace('234', '0'),\n        dateOfBirth: bioData.DOB,\n        bvnPhoneNo: bioData.bvnPhoneNumber\n      })\n    }\n  }, [currentAddedUser, userDetails]);\n\n\n  const addPersonalInfo = () => {\n    const validated = validateInput(biodata, setBiodataErrors);\n    if(validated) {\n      submit(biodata);\n    }\n  }\n  if(!userDetails) {\n    return <Loader />\n  }\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Personal Info</h2>\n        </Modal.Title>\n        {/* <p className={styles.subtitle}>Personal Info</p> */}\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Full name\"\n                type=\"text\"\n                nameAttr=\"fullname\"\n                value={biodata.fullName}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, fullName: null })\n                  setBiodata({ ...biodata, fullName: val})\n                }}\n                error={biodataErrors.fullName && biodataErrors.fullName}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Date of Birth\"\n                type=\"text\"\n                nameAttr=\"dob\"\n                value={biodata.dateOfBirth}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, dateOfBirth: null })\n                  setBiodata({ ...biodata, dateOfBirth: val})\n                }}\n                error={biodataErrors.dateOfBirth && biodataErrors.dateOfBirth}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"BVN-linked Phone Number\"\n                type=\"text\"\n                nameAttr=\"bvnPhoneNo\"\n                value={biodata.bvnPhoneNo}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, bvnPhoneNo: null })\n                  setBiodata({ ...biodata, bvnPhoneNo: val})\n                }}\n                error={biodataErrors.bvnPhoneNo && biodataErrors.bvnPhoneNo}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Email\"\n                type=\"email\"\n                nameAttr=\"email\"\n                value={biodata.email}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, email: null })\n                  setBiodata({ ...biodata, email: val})\n                }}\n                error={biodataErrors.email && biodataErrors.email}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Phone Number\"\n                type=\"text\"\n                nameAttr=\"PhoneNo\"\n                value={biodata.phoneNo}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, phoneNo: null })\n                  setBiodata({ ...biodata, phoneNo: val})\n                }}\n                error={biodataErrors.phoneNo && biodataErrors.phoneNo}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Alternative Phone Number\"\n                type=\"text\"\n                nameAttr=\"altPhoneNo\"\n                value={biodata.altPhone}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, altPhone: null })\n                  setBiodata({ ...biodata, altPhone: val})\n                }}\n                error={biodataErrors.altPhone && biodataErrors.altPhone}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <InputField \n                label=\"Gender\"\n                type=\"select\"\n                options={['Female', 'Male', 'Other']}\n                nameAttr=\"gender\"\n                value={biodata.gender}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, gender: null })\n                  setBiodata({ ...biodata, gender: val})\n                }}\n                error={biodataErrors.gender && biodataErrors.gender}\n              />\n            </Col>\n          </Row>\n          <Modal.Footer>\n            <Button \n              className=\"mt-4\" \n              clicked={addPersonalInfo} \n              fullWidth \n              bgColor=\"#741763\" \n              size=\"lg\" \n              color=\"#EBEBEB\"\n            >\n              Save & Continue\n            </Button>\n          </Modal.Footer>\n        </div>\n      </Modal.Body>\n    </>\n  )\n}\n\n\nexport const Residence = ({ submit }) => {\n\n  const [residentialInfo, setResidentialInfo] = useState({\n    street: '',\n    city: '',\n    state: ''\n  });\n\n  const [residentialErrors, setResidentialErrors] = useState({\n    street: null,\n    city: null,\n    state: null\n  });\n\n  const addResidence = () => {\n    const validated = validateInput(residentialInfo, setResidentialErrors);\n    if(validated) {\n      submit(residentialInfo);\n    }\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Residential Address</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Street\"\n                type=\"text\"\n                nameAttr=\"residentStreet\"\n                value={residentialInfo.street}\n                changed={(val) => {\n                  setResidentialErrors({ ...residentialErrors, street: null })\n                  setResidentialInfo({ ...residentialInfo, street: val})\n                }}\n                error={residentialErrors.street && residentialErrors.street}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"City\"\n                type=\"text\"\n                nameAttr=\"city\"\n                value={residentialInfo.city}\n                changed={(val) => {\n                  setResidentialErrors({ ...residentialErrors, city: null })\n                  setResidentialInfo({ ...residentialInfo, city: val})\n                }}\n                error={residentialErrors.city && residentialErrors.city}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"State\"\n                type=\"select\"\n                options={nigeriaStates}\n                nameAttr=\"state\"\n                value={residentialInfo.state}\n                changed={(val) => {\n                  setResidentialErrors({ ...residentialErrors, state: null })\n                  setResidentialInfo({ ...residentialInfo, state: val})\n                }}\n                error={residentialErrors.state && residentialErrors.state}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addResidence} \n          fullWidth \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\n\nexport const NextOfKin = ({ submit }) => {\n\n  const [kinInfo, setKinInfo] = useState({\n    fullName: '',\n    relationship: '',\n    email: '',\n    phoneNo: '',\n    address: ''\n  });\n\n  const [kinErrors, setKinErrors] = useState({\n    fullName: null,\n    relationship: null,\n    email: null,\n    phoneNo: null,\n    address: null\n  });\n\n  const addNextOfKin = () => {\n    const validated = validateInput(kinInfo, setKinErrors);\n    if(validated) {\n      submit(kinInfo);\n    }\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Next of Kin Info</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Full name\"\n                type=\"text\"\n                nameAttr=\"kinFullname\"\n                value={kinInfo.fullName}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, fullName: null })\n                  setKinInfo({ ...kinInfo, fullName: val})\n                }}\n                error={kinErrors.fullName && kinErrors.fullName}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Relationship\"\n                type=\"text\"\n                nameAttr=\"kinRelationship\"\n                value={kinInfo.relationship}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, relationship: null })\n                  setKinInfo({ ...kinInfo, relationship: val})\n                }}\n                error={kinErrors.relationship && kinErrors.relationship}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Email Address\"\n                type=\"email\"\n                nameAttr=\"kinEmail\"\n                value={kinInfo.email}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, email: null })\n                  setKinInfo({ ...kinInfo, email: val})\n                }}\n                error={kinErrors.email && kinErrors.email}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Phone Number\"\n                type=\"text\"\n                nameAttr=\"kinPhone\"\n                value={kinInfo.phoneNo}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, phoneNo: null })\n                  setKinInfo({ ...kinInfo, phoneNo: val})\n                }}\n                error={kinErrors.phoneNo && kinErrors.phoneNo}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Residential Address\"\n                type=\"text\"\n                nameAttr=\"kinAddress\"\n                placeholder=\"Street address to the nearest bus stop\"\n                value={kinInfo.address}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, address: null })\n                  setKinInfo({ ...kinInfo, address: val})\n                }}  \n                error={kinErrors.address && kinErrors.address}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addNextOfKin} \n          fullWidth \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\nexport const BankInfo = ({ submit }) => {\n\n  const { state: { loading } } = useContext(UserContext);\n\n  const [bankInfo, setBankInfo] = useState({\n    bankName: '',\n    accountType: '',\n    accountNumber: '',\n    accountName: ''\n  });\n\n  const [bankInfoErrors, setBankInfoErrors] = useState({\n    bankName: null,\n    accountType: null,\n    accountNumber: null,\n    accountName: null\n  });\n\n  const { \n    state: { bankList, userBankDetails, bankLoading }, \n    getBankList,\n    verifyBankInfo\n  } = useContext(BankContext);\n\n  useEffect(() => {\n      getBankList();\n  }, []);\n\n  const bankNames = useMemo(() => {\n    return bankList ? \n      bankList.map((bank) => bank.name) :\n      []\n  }, [bankList]);\n\n  useEffect(() => {\n    if(bankInfo.accountNumber.length === 10 && bankInfo.bankName) {\n      const bank = bankList.find(bank => bank.name.toLowerCase() === bankInfo.bankName);\n      const bankCode = bank.code;\n      console.log(bankCode)\n      verifyBankInfo(bankInfo.accountNumber, bankCode)\n    }\n  }, [bankInfo.accountNumber, bankInfo.bankName])\n\n\n  useEffect(() => {\n    console.log(userBankDetails);\n    if(userBankDetails) {\n      setBankInfo({ ...bankInfo, accountName: userBankDetails.account_name })\n    }\n  }, [userBankDetails]);\n\n  const addBankInfo = () => {\n    const validated = validateInput(bankInfo, setBankInfoErrors);\n    if(validated) {\n      submit(bankInfo);\n    }\n  }\n\n  return(\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Bank Info</h2>\n          <p className={styles.subtitle}>Add a bank account where we can send investment proceeds or loan requests to.</p>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"select\"\n                label=\"Bank\"\n                options={bankNames}\n                nameAttr=\"bank\"\n                value={bankInfo.bankName}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, bankName: null })\n                  setBankInfo({ ...bankInfo, bankName: val})\n                }}\n                error={bankInfoErrors.bankName && bankInfoErrors.bankName}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Account Type\"\n                type=\"select\"\n                options={[\"Savings\", \"Current\"]}\n                nameAttr=\"acountType\"\n                value={bankInfo.accountType}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, accountType: null })\n                  setBankInfo({ ...bankInfo, accountType: val})\n                }}\n                error={bankInfoErrors.accountType && bankInfoErrors.accountType}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"text\"\n                label=\"Account Number\"\n                nameAttr=\"accountNo\"\n                value={bankInfo.accountNumber}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, accountNumber: null })\n                  setBankInfo({ ...bankInfo, accountNumber: val})\n                }}\n                error={bankInfoErrors.accountNumber && bankInfoErrors.accountNumber}\n              />\n            </Col>\n            <Col>\n              { !bankLoading ? <InputField \n                label=\"Account Name\"\n                type=\"text\"\n                nameAttr=\"accountName\"\n                value={bankInfo.accountName}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, accountName: null })\n                  setBankInfo({ ...bankInfo, accountName: val})\n                }}\n                error={bankInfoErrors.accountName && bankInfoErrors.accountName}\n              /> : \n              <div className={styles.loaderWrapper}>\n                <BeatLoader color=\"#741763\" size={10} />\n              </div>\n              }\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addBankInfo} \n          fullWidth \n          loading={loading}\n          disabled={loading}\n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\nexport const IdentityForm = ({ submit }) => {\n\n  const { state: { loading } } = useContext(UserContext);\n  const idFileRef = useRef();\n  const passportFileRef= useRef();\n\n  const [idType, setIdType] = useState('');\n\n  const addIdentityInfo = () => {\n    if(idFileRef.current.files.length > 0) {\n      if(passportFileRef.current.files.length > 0) {\n        if(idType) {\n          const idFile = idFileRef.current.files[0];\n          const passportFile = passportFileRef.current.files[0];\n          submit(idFile, passportFile, idType);\n        }\n      } else {\n        toast.error(\"Please upload a passport photograph of yourself\")\n      }\n    } else {\n      toast.error(\"Please upload a verified identification card\")\n    }\n  }\n\n  return (\n    <>\n      <ToastContainer position=\"top-center\" />\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Identity</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <div className={styles.validId}>\n            <p className={styles.validID}>Upload a valid government issued Identification</p>\n            <InputField \n              type=\"select\"\n              options={['International Passport', \"Driver's License\", 'Voters Card', 'National Identity Card']}\n              nameAttr=\"identityType\"\n              value={idType}\n              changed={(val) => setIdType(val)}\n            />\n            <FileUploadButton \n              label=\"Choose File\" \n              icon={<FaCloudUploadAlt className=\"ml-3\" size=\"1.1em\" />}\n              id=\"id-upload\" \n              className=\"mt-3\"\n              fileRef={idFileRef}\n              fullwidth\n            />\n          </div>\n          <div className={styles.passportVerify}>\n            <p className={styles.passportImg}>Please upload a clear and resent passport photograph.</p>\n            <FileUploadButton \n              label=\"Choose File\" \n              icon={<FaCloudUploadAlt className=\"ml-3\" size=\"1.1em\" />}\n              id=\"passport-upload\"  \n              fileRef={passportFileRef}\n              fullwidth\n            />\n          </div>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addIdentityInfo} \n          fullWidth \n          loading={loading}\n          disabled={loading}\n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\n\nexport const OnboardSuccess = ({ close }) => {\n\n  useEffect(() => {\n    setTimeout(() => {\n      close();\n    }, 3000);\n  }, []);\n\n  return (\n    <>\n      <Modal.Body>\n        <div className={styles.onboard}>\n          <FaCheckCircle size=\"4em\" color=\"#741763\" />\n          <h4>User successfully onboarded.</h4>\n          <Button\n            className=\"mt-4\" \n            clicked={close} \n            bgColor=\"#741763\" \n            size=\"sm\" \n            color=\"#EBEBEB\"\n          >\n            Continue\n          </Button>\n        </div>\n      </Modal.Body>\n    </>\n  )\n}","/home/tga/Desktop/gypsy-capital/src/components/OfferLetter/OfferLetterForm.jsx",["317"],"import React, { useEffect, useState } from \"react\";\nimport styles from \"./OfferLetterForm.module.scss\";\nimport WhiteLogo from \"../../assets/logo-white.png\";\nimport OfferLetterPdf from \"./OfferLetter\";\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Button from \"../Button/Button\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport { numberWithCommas } from \"../../utils/nigeriaStates\";\nimport { convertInput } from \"../../utils/convertInputType\";\nimport { toast, ToastContainer } from \"react-toastify\";\n\nconst OfferLetterForm = ({ setState, loanData }) => {\n  console.log(loanData);\n  const [offerFormData, setOfferFormData] = useState({\n    date: \"\",\n    fullName: \"\",\n    clientAddress: \"\",\n    loanAmount: \"\",\n    borrowerName: \"\",\n    natureofBusiness: \"\",\n    loanFacility: \"\",\n    loanPurpose: \"\",\n    monthlyRepayment: \"\",\n    repaymentSource: \"\",\n    headCreditSign: \"\",\n    headRiskSign: \"\",\n    memoFullName: \"\",\n    memoAddress: \"\",\n    memoName: \"\",\n    memoSign: \"\",\n  });\n\n  const [formErr, setFormErr] = useState({\n    date: true,\n    fullName: true,\n    clientAddress: true,\n    loanAmount: true,\n    borrowerName: true,\n    natureofBusiness: true,\n    loanFacility: true,\n    loanPurpose: true,\n    monthlyRepayment: true,\n    repaymentSource: true,\n    headCreditSign: true,\n    headRiskSign: true,\n    memoFullName: true,\n    memoAddress: true,\n    memoName: true,\n    memoSign: true,\n  });\n\n  const [btnState, setBtnState] = useState(false);\n\n  useEffect(() => {\n    setOfferFormData({\n      ...offerFormData,\n      date: moment().format(\"DD-MM-YYYY\"),\n      fullName: `${_.capitalize(loanData?.client?.firstName)}`,\n      clientAddress: loanData?.residence?.street,\n      loanAmount: `N${numberWithCommas(loanData?.approvedAmount)}`,\n      borrowerName: `${_.capitalize(\n        loanData?.client?.firstName\n      )} ${_.capitalize(loanData?.client?.lastName)}`,\n      natureofBusiness: _.startCase(loanData?.employment?.sector),\n      loanFacility: numberWithCommas(loanData?.approvedAmount),\n      loanPurpose: _.startCase(loanData?.loanPurpose),\n      monthlyRepayment: numberWithCommas(loanData?.monthlyRepayment),\n      repaymentSource: \"Salary\",\n    });\n  }, []);\n\n  const sendOffer = () => {\n    setState(true);\n  };\n\n  const createPdf = () => {\n    const toValidateFields = (({\n      date,\n      fullName,\n      clientAddress,\n      loanAmount,\n      borrowerName,\n      natureofBusiness,\n      loanFacility,\n      loanPurpose,\n      monthlyRepayment,\n      repaymentSource,\n      headCreditSign,\n      headRiskSign,\n    }) => ({\n      date,\n      fullName,\n      clientAddress,\n      loanAmount,\n      borrowerName,\n      natureofBusiness,\n      loanFacility,\n      loanPurpose,\n      monthlyRepayment,\n      repaymentSource,\n      headCreditSign,\n      headRiskSign,\n    }))(offerFormData);\n\n    let fieldValidator = {};\n\n    for (const key in toValidateFields) {\n      if (!toValidateFields[key] || Number(toValidateFields[key]) === 0) {\n        fieldValidator[key] = false;\n      } else {\n        fieldValidator[key] = true;\n      }\n    }\n\n    setFormErr(fieldValidator);\n    const validatorValues = Object.values(fieldValidator);\n    if (!validatorValues.includes(false)) {\n      setBtnState(true);\n    } else {\n      toast.error(\"You need to fill in all necessary fields\");\n    }\n    console.log(validatorValues);\n  };\n\n  return (\n    <>\n      <ToastContainer position=\"top-center\" />\n      <div className={styles.formWrapper}>\n        <div className={styles.formHeader}>\n          <img src={WhiteLogo} alt=\"logo\" />\n          <hr />\n          <div className={styles.approvedDate}>\n            <p>Loan Approved</p>\n            <div className={styles.dateGroup}>\n              <p>Date: </p>\n              <input\n                className={!formErr?.date ? styles.error : null}\n                type=\"text\"\n                placeholder=\"DD/MM/YYYY\"\n                name=\"date\"\n                value={offerFormData.date}\n                onChange={(e) => {\n                  setFormErr({ ...formErr, date: true });\n                  setOfferFormData({\n                    ...offerFormData,\n                    date: e.currentTarget.value,\n                  });\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={styles.formBody}>\n          <div className={styles.addressGroup}>\n            <div className={styles.greet}>\n              <p>Dear,</p>\n              <input\n                type=\"text\"\n                name=\"clientName\"\n                placeholder=\"Full Name\"\n                value={offerFormData.fullName}\n                onChange={(e) => {\n                  setFormErr({ ...formErr, fullName: true });\n                  setOfferFormData({\n                    ...offerFormData,\n                    fullName: e.currentTarget.value,\n                  });\n                }}\n                className={!formErr?.fullName ? styles.error : null}\n              />\n            </div>\n            <input\n              type=\"text\"\n              name=\"clientAddress\"\n              placeholder=\"Client Address\"\n              className={\n                !formErr?.clientAddress\n                  ? [styles.address, styles.error].join(\" \")\n                  : styles.address\n              }\n              value={offerFormData.clientAddress}\n              onChange={(e) => {\n                setFormErr({ ...formErr, clientAddress: true });\n                setOfferFormData({\n                  ...offerFormData,\n                  clientAddress: e.currentTarget.value,\n                });\n              }}\n            />\n          </div>\n          <div className={styles.mainContent}>\n            <p className={styles.letterHead}>\n              OFFER FOR PERSONAL LOAN FACILITY\n            </p>\n            <p>\n              We are pleased to advise that the Management of Gypsy Capital\n              Limited has approved the loan facility requested, hence, this\n              offer made to you. This letter outlines the major terms and\n              conditions under which we are willing to make available to you,\n              the sum of\n              <span>\n                <input\n                  type=\"text\"\n                  name=\"additional\"\n                  placeholder=\"₦xxx,xxx (Loans amount in words)\"\n                  value={offerFormData.loanAmount}\n                  onChange={(e) => {\n                    setFormErr({ ...formErr, loanAmount: true });\n                    setOfferFormData({\n                      ...offerFormData,\n                      loanAmount: e.currentTarget.value,\n                    });\n                  }}\n                  className={!formErr?.loanAmount ? styles.error : null}\n                />\n              </span>\n            </p>\n            <div className={styles.loanData}>\n              <Row className=\"mb-4\">\n                <Col md={4}>\n                  <p>Lender:</p>\n                </Col>\n                <Col md={8}>\n                  <p style={{ color: \"gray\" }}>Gypsy Capital</p>\n                </Col>\n              </Row>\n              <Row className=\"mb-4 align-items-center\">\n                <Col md={4}>\n                  <p>Borrower:</p>\n                </Col>\n                <Col md={8}>\n                  <input\n                    type=\"text\"\n                    name=\"clientname\"\n                    placeholder=\"Client Name\"\n                    value={offerFormData.borrowerName}\n                    onChange={(e) => {\n                      setFormErr({ ...formErr, borrowerName: true });\n                      setOfferFormData({\n                        ...offerFormData,\n                        borrowerName: e.currentTarget.value,\n                      });\n                    }}\n                    className={!formErr?.borrowerName ? styles.error : null}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"mb-4 align-items-center\">\n                <Col md={4}>\n                  <p>Nature of Business:</p>\n                </Col>\n                <Col md={8}>\n                  <input\n                    type=\"text\"\n                    name=\"business\"\n                    value={offerFormData.natureofBusiness}\n                    onChange={(e) => {\n                      setFormErr({ ...formErr, natureofBusiness: true });\n                      setOfferFormData({\n                        ...offerFormData,\n                        natureofBusiness: e.currentTarget.value,\n                      });\n                    }}\n                    className={!formErr?.natureofBusiness ? styles.error : null}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"mb-4 align-items-center\">\n                <Col md={4}>\n                  <p>Amount of Loan Facility:</p>\n                </Col>\n                <Col md={8}>\n                  <input\n                    type=\"text\"\n                    name=\"loanAmount\"\n                    value={offerFormData.loanFacility}\n                    onChange={(e) => {\n                      setFormErr({ ...formErr, loanFacility: true });\n                      const {\n                        includesAlphabet,\n                        convertedToNumber,\n                      } = convertInput(e.currentTarget.value);\n                      if (!includesAlphabet) {\n                        setOfferFormData({\n                          ...offerFormData,\n                          loanFacility: convertedToNumber.toLocaleString(),\n                        });\n                      }\n                    }}\n                    className={!formErr?.loanFacility ? styles.error : null}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"mb-4 align-items-center\">\n                <Col md={4}>\n                  <p>Purpose:</p>\n                </Col>\n                <Col md={8}>\n                  <input\n                    type=\"text\"\n                    name=\"purpose\"\n                    value={offerFormData.loanPurpose}\n                    onChange={(e) => {\n                      setFormErr({ ...formErr, loanPurpose: true });\n                      setOfferFormData({\n                        ...offerFormData,\n                        loanPurpose: e.currentTarget.value,\n                      });\n                    }}\n                    className={!formErr?.loanPurpose ? styles.error : null}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"mb-4 align-items-center\">\n                <Col md={4}>\n                  <p>Monthly Repayment:</p>\n                </Col>\n                <Col md={8}>\n                  <input\n                    type=\"text\"\n                    name=\"monthlyRepay\"\n                    value={offerFormData.monthlyRepayment}\n                    onChange={(e) => {\n                      setFormErr({ ...formErr, monthlyRepayment: true });\n                      const {\n                        includesAlphabet,\n                        convertedToNumber,\n                      } = convertInput(e.currentTarget.value);\n                      if (!includesAlphabet) {\n                        setOfferFormData({\n                          ...offerFormData,\n                          monthlyRepayment: convertedToNumber.toLocaleString(),\n                        });\n                      }\n                    }}\n                    className={!formErr?.monthlyRepayment ? styles.error : null}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"mb-4 align-items-center\">\n                <Col md={4}>\n                  <p>Repayment Source/Method:</p>\n                </Col>\n                <Col md={8}>\n                  <input\n                    type=\"text\"\n                    name=\"source\"\n                    value={offerFormData.repaymentSource}\n                    onChange={(e) => {\n                      setFormErr({ ...formErr, repaymentSource: true });\n                      setOfferFormData({\n                        ...offerFormData,\n                        repaymentSource: e.currentTarget.value,\n                      });\n                    }}\n                    className={!formErr?.repaymentSource ? styles.error : null}\n                  />\n                </Col>\n              </Row>\n            </div>\n            <div className={styles.terms}>\n              <p className={styles.title}>TERMS OF THE OFFER:</p>\n              <ol>\n                <li>\n                  Disbursement is subject to the availability of funds and\n                  statutory regulations.\n                </li>\n                <li>\n                  The Borrower will reimburse Gypsy Capital Limited on-demand,\n                  all expenses (including but not limited to legal and insurance\n                  expenses and all taxes Where-so applicable) thereon incurred\n                  by Gypsy Capital Limited in Processing this facility and in\n                  suing for or recovering any sum due hereunder or otherwise in\n                  enforcing or protecting its rights and interests hereunder.\n                </li>\n                <li>\n                  Gypsy Capital reserves the right to refuse and/or withhold\n                  disbursement without notice.\n                </li>\n                <li>\n                  The facility is expected to run its full course and there\n                  non-cancellable Otherwise a non-cancellable fee shall apply.\n                  This fee shall be equivalent to the interest for the month of\n                  Cancellation/Pre liquidation and an additional one month.\n                </li>\n                <li>\n                  This Offer is subject to external confirmation and\n                  authenticity of all documents submitted for the loan\n                  application.\n                </li>\n                <li>\n                  Where any document submitted by the Borrower is found to be\n                  ingenuine or unreliable this offer will automatically\n                  terminate.\n                </li>\n              </ol>\n            </div>\n            <div className={styles.terms}>\n              <p className={styles.title}>EVENTS OF DEFAULT:</p>\n              <p>\n                The occurrence of any of the following shall cause all\n                outstanding sums under this facility to become immediately\n                repayable:\n              </p>\n              <ol>\n                <li>\n                  If the Borrower fails to settle when due, any outstanding\n                  amount owed to and advised by Gypsy Capital Limited;\n                </li>\n                <li>\n                  If the Borrower defaults in the performance or the observance\n                  of any terms or/and conditions here-above stated;\n                </li>\n                <li>\n                  Where Gypsy Capital Limited gives notice of said\n                  breach/default to the borrower and said Breach/default\n                  continues and remains unalleviated after (7) days' notice had\n                  been given to it; or\n                </li>\n                <li>\n                  Where the repayment of the facility is not discharged as at\n                  when due (with reference to the monthly installment payment\n                  and other outstanding amounts applicable to the facility),\n                  Gypsy Capital Limited has the right to upload customer's data\n                  as delinquent on the Credit bureau.\n                </li>\n                <li>\n                  Should any of the rentals remain un-paid, for any reason\n                  whatsoever, a penalty equal to 1.67% of the amount of the\n                  rental shall be payable for each day of the period that the\n                  rental remained unpaid.\n                </li>\n              </ol>\n            </div>\n            <div className={styles.terms}>\n              <p className={styles.title}>General</p>\n              <ol>\n                <li>\n                  All cheques must be made in the name of Gypsy Capital Limited\n                  to the express exclusion of any known staff of the company.\n                </li>\n                <li>\n                  The Borrower hereby irrevocably and unconditionally consents\n                  to Gypsy Capital Limited providing any and all information on\n                  the Borrower's dealings with it to the credit\n                  Bureaus/Registries as it may deem necessary.\n                </li>\n                <li>\n                  Gypsy Capital reserves the right to refuse and/or withhold\n                  disbursement without notice.\n                </li>\n              </ol>\n            </div>\n            <hr />\n            <div className={styles.terms}>\n              <p className={styles.title}>Important Notice</p>\n              <p>\n                Please note that where this offer is not accepted within 7\n                (Seven) days, it shall be subjected to review against the\n                prevailing market values.\n              </p>\n              <p>\n                We hope that our offer meets your needs. if so, kindly indicate\n                your acceptance of the conditions outlined above by executing\n                the Memorandum of acceptance attached to this letter.\n              </p>\n              <p>\n                Upon acceptance of this offer, kindly find the Personal Loan\n                Agreement attached, for your execution.\n              </p>\n              <p>We thank you for this opportunity to be of service to you.</p>\n            </div>\n            <div className={styles.importantNotice}>\n              <p>\n                **The parties acknowledge and agree that this agreement (offer\n                letter) may execute by electronic signature, which shall be\n                considered as an original signature for all purposes and shall\n                include faxed versions of the parties original signature, copied\n                and pasted image of the parties handwritten signature on the\n                agreement, parties written name or signature using a stylus,\n                keypad or keyboard or electronically scanned and transmitted\n                versions (e.g., via pdf) of an original signature.**\n              </p>\n              <p>For Gypsy Capital</p>\n            </div>\n            <div className={styles.signatureGroup}>\n              <div>\n                <p>HEAD, CREDIT</p>\n                <textarea\n                  name=\"headCredit\"\n                  style={{ padding: \"15px 18px\" }}\n                  value={offerFormData.headCreditSign}\n                  onChange={(e) => {\n                    setFormErr({ ...formErr, headCreditSign: true });\n                    setOfferFormData({\n                      ...offerFormData,\n                      headCreditSign: e.currentTarget.value,\n                    });\n                  }}\n                  className={!formErr?.headCreditSign ? styles.error : null}\n                />\n              </div>\n              <div>\n                <p>HEAD, CREDIT & RISK MANAGEMENT</p>\n                <textarea\n                  name=\"headRisk\"\n                  style={{ padding: \"15px 18px\" }}\n                  value={offerFormData.headRiskSign}\n                  onChange={(e) => {\n                    setFormErr({ ...formErr, headRiskSign: true });\n                    setOfferFormData({\n                      ...offerFormData,\n                      headRiskSign: e.currentTarget.value,\n                    });\n                  }}\n                  className={!formErr?.headRiskSign ? styles.error : null}\n                />\n              </div>\n            </div>\n            <div className={styles.memorandum}>\n              <p className={styles.title}>Memorandum of Acceptance</p>\n              <p style={{ lineHeight: \"1.8rem\" }}>\n                I{\" \"}\n                <span style={{ marginLeft: \"10px\" }}>\n                  <input\n                    style={{ width: \"250px\" }}\n                    type=\"text\"\n                    name=\"client\"\n                    placeholder=\"Full Name\"\n                    value={offerFormData.memoFullName}\n                    onChange={(e) =>\n                      setOfferFormData({\n                        ...offerFormData,\n                        memoFullName: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </span>\n                , OF{\" \"}\n                <span style={{ marginLeft: \"10px\" }}>\n                  <input\n                    type=\"text\"\n                    name=\"address\"\n                    placeholder=\"Address goes here\"\n                    value={offerFormData.memoAddress}\n                    onChange={(e) =>\n                      setOfferFormData({\n                        ...offerFormData,\n                        memoAddress: e.currentTarget.value,\n                      })\n                    }\n                  />\n                </span>{\" \"}\n                have read and have fully understood the terms and conditions of\n                the offer. Therefore I agree to the terms and conditions of the\n                offer and have accordingly affirmed same;\n              </p>\n              <div className={styles.clientSign}>\n                <Row>\n                  <Col sm={6}>\n                    Name:{\" \"}\n                    <input\n                      type=\"text\"\n                      name=\"name\"\n                      value={offerFormData.memoName}\n                      onChange={(e) =>\n                        setOfferFormData({\n                          ...offerFormData,\n                          memoName: e.currentTarget.value,\n                        })\n                      }\n                    />\n                  </Col>\n                  <Col sm={6}>\n                    Signature:{\" \"}\n                    <input\n                      type=\"text\"\n                      name=\"name\"\n                      value={offerFormData.memoSign}\n                      onChange={(e) =>\n                        setOfferFormData({\n                          ...offerFormData,\n                          memoSign: e.currentTarget.value,\n                        })\n                      }\n                    />\n                  </Col>\n                </Row>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className={styles.offerBtn}>\n        <>\n          {btnState ? (\n            <PDFDownloadLink\n              className={styles.downloadBtn}\n              document={<OfferLetterPdf dynamicData={{ ...offerFormData }} />}\n              fileName=\"offerLetter.pdf\"\n            >\n              {({ blob, url, loading, error }) =>\n                loading ? \"Loading document...\" : \"Download Offer Letter\"\n              }\n            </PDFDownloadLink>\n          ) : (\n            <Button\n              clicked={createPdf}\n              bgColor=\"#741763\"\n              size=\"lg\"\n              color=\"#EBEBEB\"\n              // disabled={loading}\n              // loading={loading}\n            >\n              Create Offer PDF\n            </Button>\n          )}\n        </>\n        <Button\n          clicked={sendOffer}\n          bgColor=\"#741763\"\n          size=\"lg\"\n          color=\"#EBEBEB\"\n          // disabled={loading}\n          // loading={loading}\n        >\n          Send Offer Letter\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default OfferLetterForm;\n",["318","319"],"/home/tga/Desktop/gypsy-capital/src/pages/ProcessorLoanDetails/ProcessorLoanDetails.jsx",["320","321","322","323","324","325","326","327","328","329","330","331"],"/home/tga/Desktop/gypsy-capital/src/pages/LoanCalculator/LoanCalculator.jsx",["332","333"],"import React, { useEffect, useState } from \"react\";\nimport styles from \"./LoanCalculator.module.scss\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport InputField from \"../../components/InputField/InputField\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Button from \"../../components/Button/Button\";\nimport { useLocation, useRouteMatch, useHistory } from \"react-router-dom\";\nimport { validateInput } from \"../../utils/validateInput\";\nimport { numberWithCommas } from \"../../utils/nigeriaStates\";\nimport {\n  convertInput,\n  stripCommasInNumber,\n} from \"../../utils/convertInputType\";\nimport ScrollToTopOnMount from \"../../components/ScrollToTopOnMount/ScrollToTopOnMount\";\n\nconst LoanCalculator = () => {\n  const [loanData, setLoanData] = useState({\n    proposedAmount: \"\",\n    proposedDuration: null,\n    monthlyIncome: \"\",\n    employmentStatus: null,\n    proposedMonthyRepayment: \"\",\n  });\n\n  const [inputErrors, setInputError] = useState({\n    proposedAmount: null,\n    proposedDuration: null,\n    monthlyIncome: null,\n    employmentStatus: null,\n    proposedMonthyRepayment: null,\n  });\n\n  const [limitError, setLimitError] = useState(null);\n\n  const location = useLocation();\n  const history = useHistory();\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    if (location.state) {\n      setLoanData({ ...loanData, proposedAmount: location.state.loanAmount });\n    }\n  }, [location]);\n\n  const { proposedAmount, proposedDuration, monthlyIncome } = loanData;\n\n  useEffect(() => {\n    if ((proposedAmount, proposedDuration, monthlyIncome)) {\n      const tenor = Number(proposedDuration);\n      let initAmount = stripCommasInNumber(proposedAmount);\n      let toRepay;\n      for (let i = 0; i < tenor; i++) {\n        toRepay = initAmount + initAmount * 0.04;\n        initAmount = toRepay;\n      }\n      const monthlyRepay = toRepay / tenor;\n      if (monthlyRepay > 0.33 * Number(stripCommasInNumber(monthlyIncome))) {\n        setLimitError(\n          \"You are not eligible for this amount, kindly enter a lower loan amount\"\n        );\n      } else {\n        setLimitError(null);\n      }\n      setLoanData({\n        ...loanData,\n        proposedMonthyRepayment: numberWithCommas(Math.floor(monthlyRepay)),\n      });\n    }\n  }, [proposedAmount, proposedDuration, monthlyIncome]);\n\n  const handleSubmit = () => {\n    const validated = validateInput(loanData, setInputError);\n    console.log(validated);\n    console.log(loanData);\n  };\n\n  return (\n    <>\n      <ScrollToTopOnMount />\n      <NavBar location={url} history={history} />\n      <div className={styles.mainSection}>\n        <div className={styles.container}>\n          <h3>Access Quick Loans of Up to ₦2,000,000</h3>\n          <p>Use our loan calculator to get started</p>\n          <div className={styles.calculatorBox}>\n            <Row className=\"mb-4\">\n              <Col>\n                <InputField\n                  type=\"text\"\n                  label=\"How much do you need?\"\n                  nameAttr=\"loanAmt\"\n                  value={loanData.proposedAmount}\n                  changed={(val) => {\n                    const {\n                      includesAlphabet,\n                      convertedToNumber,\n                    } = convertInput(val);\n                    if (!includesAlphabet) {\n                      console.log(val);\n                      setLoanData({\n                        ...loanData,\n                        proposedAmount: convertedToNumber.toLocaleString(),\n                      });\n                      setInputError({ ...inputErrors, proposedAmount: null });\n                    }\n                  }}\n                  error={\n                    inputErrors.proposedAmount && inputErrors.proposedAmount\n                  }\n                />\n              </Col>\n            </Row>\n            <Row className=\"mb-4\">\n              <Col>\n                <InputField\n                  type=\"select\"\n                  label=\"How long before you pay back? (Months)\"\n                  nameAttr=\"proposedDuration\"\n                  options={[1, 2, 3, 4, 5, 6]}\n                  value={loanData.proposedDuration}\n                  changed={(val) => {\n                    setLoanData({ ...loanData, proposedDuration: val });\n                    setInputError({ ...inputErrors, proposedDuration: null });\n                  }}\n                  error={\n                    inputErrors.proposedDuration && inputErrors.proposedDuration\n                  }\n                />\n              </Col>\n            </Row>\n            <Row className=\"mb-4\">\n              <Col>\n                <InputField\n                  type=\"text\"\n                  label=\"What is your monthly income?\"\n                  nameAttr=\"monthlyIncome\"\n                  value={loanData.monthlyIncome}\n                  changed={(val) => {\n                    const {\n                      includesAlphabet,\n                      convertedToNumber,\n                    } = convertInput(val);\n                    if (!includesAlphabet) {\n                      setLoanData({\n                        ...loanData,\n                        monthlyIncome: convertedToNumber.toLocaleString(),\n                      });\n                      setInputError({ ...inputErrors, monthlyIncome: null });\n                    }\n                  }}\n                  error={inputErrors.monthlyIncome && inputErrors.monthlyIncome}\n                />\n              </Col>\n            </Row>\n            <Row className=\"mb-4\">\n              <Col>\n                <InputField\n                  type=\"select\"\n                  label=\"Employment status\"\n                  options={[\"Self-Employed\", \"Unemployed\", \"Employed\"]}\n                  nameAttr=\"employStatus\"\n                  value={loanData.employmentStatus}\n                  changed={(val) => {\n                    setLoanData({ ...loanData, employmentStatus: val });\n                    setInputError({ ...inputErrors, employmentStatus: null });\n                  }}\n                  error={\n                    inputErrors.employmentStatus && inputErrors.employmentStatus\n                  }\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <InputField\n                  type=\"text\"\n                  label=\"Estimated monthly repayment\"\n                  nameAttr=\"proposedRepayment\"\n                  value={loanData.proposedMonthyRepayment}\n                  changed={(val) => {\n                    const {\n                      includesAlphabet,\n                      convertedToNumber,\n                    } = convertInput(val);\n                    if (!includesAlphabet) {\n                      setLoanData({\n                        ...loanData,\n                        proposedMonthyRepayment: convertedToNumber.toLocaleString(),\n                      });\n                      setInputError({\n                        ...inputErrors,\n                        proposedMonthyRepayment: null,\n                      });\n                    }\n                  }}\n                  error={\n                    inputErrors.proposedMonthyRepayment &&\n                    inputErrors.proposedMonthyRepayment\n                  }\n                />\n              </Col>\n              {limitError && <p className={styles.limitError}>{limitError}</p>}\n            </Row>\n            <Button\n              className={\"mt-5\"}\n              fullWidth\n              clicked={handleSubmit}\n              bgColor=\"#741763\"\n              size=\"lg\"\n              color=\"#EBEBEB\"\n              // disabled={loading}\n              // loading={loading}\n            >\n              Continue\n            </Button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LoanCalculator;\n","/home/tga/Desktop/gypsy-capital/src/components/CustomDatePicker/CustomDatePicker.jsx",[],"/home/tga/Desktop/gypsy-capital/src/index.js",[],"/home/tga/Desktop/gypsy-capital/src/routes/pageUrl.js",[],"/home/tga/Desktop/gypsy-capital/src/context/MonoContext.js",["334","335","336","337"],"import createDataContext from './createDataContext';\nimport gypsy from '../api/gypsy-web';\nimport resolveToken from '../utils/resolveToken';\nimport history from '../utils/history';\n// import _ from 'lodash';\n\n\nconst monoReducer = (state, action) => {\n  switch(action.type) {\n    case 'set_loading':\n      return { ...state, loading: action.payload }\n    case 'set_error':\n      return { ...state, error: action.payload }\n    case 'set_link_success':\n      return { ...state, linkSuccess: action.payload }\n    case 'clear_errors':\n      return { ...state, error: action.payload }\n    default:\n      return state;\n  }\n}\n\n\nconst authenticateUser = dispatch => async(userId, code) => {\n  dispatch({ type: \"set_loading\", payload: true });\n  try {\n    const token = resolveToken();\n    const response = await gypsy.post(`/api/mono/get_id/${userId}`, {mono_code: code}, {\n      headers: {\n        \"Authorization\": `Bearer ${token}`\n      }\n    });\n    console.log(response.data);\n    dispatch({ type: 'set_link_success', payload: true });\n    dispatch({ type: \"set_loading\", payload: false });\n  } catch(err) {\n    if(err.response) {\n      console.log(err.response.data);\n      const errorMessage = err.response.data.error || err.response.data.message\n      dispatch({\n        type: \"set_error\",\n        payload: errorMessage\n      });\n      dispatch({ type: \"set_loading\", payload: false });\n    }\n  }\n}\n\nconst getAccountInfo = dispatch => async(userId) => {\n  dispatch({ type: \"set_loading\", payload: true });\n  try {\n    const token = resolveToken();\n    const response = await gypsy.get(`/api/mono/account_info/${userId}`, {\n      headers: {\n        \"Authorization\": `Bearer ${token}`\n      }\n    });\n    console.log(response.data.data);\n    dispatch({ type: \"set_loading\", payload: false });\n  } catch(err) {\n    if(err.response) {\n      console.log(err.response.data);\n      const errorMessage = err.response.data.error || err.response.data.message\n      dispatch({\n        type: \"set_error\",\n        payload: errorMessage\n      });\n      dispatch({ type: \"set_loading\", payload: false });\n    }\n  }\n}\n\n\nconst getAccountStatement = dispatch => async(userId, months) => {\n  dispatch({ type: \"set_loading\", payload: true });\n  try {\n    const token = resolveToken();\n    const response = await gypsy.get(`/api/mono/account_statement/${userId}/${months}`, {\n      headers: {\n        \"Authorization\": `Bearer ${token}`\n      }\n    });\n    console.log(response.data);\n    dispatch({ type: \"set_loading\", payload: false });\n  } catch(err) {\n    if(err.response) {\n      console.log(err.response.data);\n      const errorMessage = err.response.data.error || err.response.data.message\n      dispatch({\n        type: \"set_error\",\n        payload: errorMessage\n      });\n      dispatch({ type: \"set_loading\", payload: false });\n    }\n  }\n}\n\nconst getAccountTransactionHistory = dispatch => async(userId) => {\n  dispatch({ type: \"set_loading\", payload: true });\n  try {\n    const token = resolveToken();\n    const response = await gypsy.get(`/api/mono/transaction_history/${userId}`,   )\n  } catch(err) {\n    if(err.response) {\n      console.log(err.response.data);\n      const errorMessage = err.response.data.error || err.response.data.message\n      dispatch({\n        type: \"set_error\",\n        payload: errorMessage\n      });\n      dispatch({ type: \"set_loading\", payload: false });\n    }\n  }\n}\n\nconst resetLinkSuccess = dispatch => () => {\n  dispatch({ type: 'set_link_success', payload: false });\n}\n\nconst clearErrors = dispatch => () => {\n  dispatch({ type: 'clear_errors', payload: null });\n}\n\n\nexport const { Context, Provider } = createDataContext(\n  monoReducer,\n  { authenticateUser, resetLinkSuccess, clearErrors, getAccountInfo, getAccountStatement },\n  { loading: false, error: null, linkSuccess: false }\n)","/home/tga/Desktop/gypsy-capital/src/utils/history.js",[],"/home/tga/Desktop/gypsy-capital/src/context/ApprovalContext.js",[],"/home/tga/Desktop/gypsy-capital/src/context/createPersistDataContext.js",["338"],"/home/tga/Desktop/gypsy-capital/src/pages/Overview/Overview.jsx",["339","340"],"import React, { useContext, useEffect, useState } from 'react';\nimport styles from './Overview.module.scss';\nimport { clientRoutes } from '../../routes/sidebarRoutes';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport Button from '../../components/Button/Button';\nimport gypsyNote from '../../assets/icons/gypsyNotes.svg';\nimport altInvestment from '../../assets/icons/alternative.svg';\nimport { Col, Row } from 'react-bootstrap';\nimport noLoan from '../../assets/no-loan.png';\nimport moment from 'moment';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { Context as LoanContext } from '../../context/LoanContext';\nimport { useRouteMatch, useHistory, useLocation } from 'react-router-dom';\n\n\nconst Overview = () => {\n\n  const { path } = useRouteMatch();\n  const history = useHistory();\n  const location = useLocation();\n  const [activeLoan, setActiveLoan] = useState(null);\n\n  const { state: { user } } = useContext(AuthContext);\n  const { state: { loans }, retrieveClientLoans } = useContext(LoanContext)\n\n  useEffect(() => {\n    retrieveClientLoans()\n  }, []);\n\n  useEffect(() => {\n    const statusToDisplay = loans.filter(loan => loan.status.toLowerCase() === 'pending' || 'active');\n    console.log(statusToDisplay[0]);\n    setActiveLoan(statusToDisplay[0]);\n  }, [loans]);\n\n  useEffect(() => {\n    console.log(user);\n  }, [user]);\n\n  const numberWithCommas = (x) => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  if(!user) {\n    return null\n  }\n\n  return (\n    <Dashboard sidebarRoutes={clientRoutes} location={location}>\n      <div className={styles.welcomeGroup}>\n        <h2>Hey, {user.firstName}</h2>\n        <p className={styles.currentDate}>Today is {moment().format('dddd Do[,] MMMM')}.</p>\n      </div>\n      <div className={styles.loanStatus} style={{padding: '30px 40px'}}>\n        { !activeLoan && <div className={styles.innerContainer}>\n          <div className={styles.mainContent}>\n            <h3>Active Loan</h3>\n            <p>Sorry you currently have no active loan</p>\n            <Button\n              bgColor=\"#741763\"\n              size=\"sm\"\n              color=\"#fff\"\n              className=\"mt-4\"\n              clicked={() => history.push('/dashboard/consumer-credit/apply/calculator')}\n            >\n              Apply for loan\n            </Button>\n          </div>\n          <img src={noLoan} alt=\"No active loan\" height=\"280\" />\n        </div> } \n        { activeLoan && <div className={styles.activeStyle}>\n          <div className={styles.mainContent}>\n            <h3>Active Loan <span>{activeLoan.status}</span></h3>\n            <div className={styles.statusBoard}>\n              <Row>\n                <Col className={styles.borderClass}>\n                  <div className={styles.loanData}>\n                    <div>\n                      <h6>Loan amount</h6>\n                      <h1>{`N${numberWithCommas(activeLoan.amount)}`}</h1>\n                    </div>\n                  </div>\n                </Col>\n                <Col className={styles.borderClass}>\n                  <div className={styles.loanData}>\n                    <div>\n                      <h6>Monthly Repayment</h6>\n                      <h1>{`N${numberWithCommas(activeLoan.monthlyRepayment)}`}</h1>\n                    </div>\n                  </div>\n                </Col>\n                <Col>\n                  <div className={styles.loanData}>\n                    <div>\n                      <h6>Tenure</h6>\n                      <h1>{activeLoan.paymentPeriod}</h1>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </div>}\n      </div>\n      <div className={styles.otherProducts}>\n        <Row>\n          <Col sm={12} md={6}>\n            <div className={[styles.product, styles.borderClass].join(' ')}>\n              <div className={styles.productIcon}>\n                <img src={gypsyNote} alt=\"Gypsy Notes\" width=\"25\" />\n              </div>\n              <h3 className={styles.productTitle}>Gypsy Notes</h3>\n              <p className=\"mt-2\">Let your money work for you and enjoy high interest rates on your money. Start a Gypsy Fixed Income Note today and earn more.</p>\n              <button className={[styles.productBtn, \"mt-3\"].join(' ')}>\n                Be the first to know when we launch\n              </button>\n            </div>\n          </Col>\n          <Col sm={12} md={6}>\n            <div className={[styles.product, styles.border2Class].join(' ')}>\n              <div className={styles.productIcon}>\n                <img src={altInvestment} alt=\"Alternative Investment\" width=\"40\" />\n              </div>\n              <h3 className={styles.productTitle}>Alternative Investment</h3>\n              <p className=\"mt-2\">Are you an investor who seek greater rewards? Our Alternative Investment service is here to help you earn more.</p>\n              <button className={[styles.productBtn, \"mt-3\"].join(' ')}>\n                Be the first to know when we launch\n              </button>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </Dashboard>\n  )\n}\n\n\nexport default Overview;","/home/tga/Desktop/gypsy-capital/src/pages/SignIn/SignIn.jsx",["341"],"/home/tga/Desktop/gypsy-capital/src/pages/AgentOverview/AgentOverview.jsx",["342"],"/home/tga/Desktop/gypsy-capital/src/pages/Support/Support.jsx",["343"],"/home/tga/Desktop/gypsy-capital/src/pages/ProcessorClients/ProcessorClients.jsx",["344","345","346"],"/home/tga/Desktop/gypsy-capital/src/pages/ProcessorLoans/ProcessorLoans.jsx",["347","348"],"/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerLoanDetails/AuthorizerLoanDetails.jsx",["349"],"/home/tga/Desktop/gypsy-capital/src/utils/convertInputType.js",[],"/home/tga/Desktop/gypsy-capital/src/components/LoanCalculatorForm/LoanCalculatorForm.jsx",["350","351"],"/home/tga/Desktop/gypsy-capital/src/components/NavBar/NavBar.jsx",["352"],"/home/tga/Desktop/gypsy-capital/src/components/LoanList/LoanList.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/ProfileView/ProfileView.jsx",["353","354"],"/home/tga/Desktop/gypsy-capital/src/components/ModalForm/ModalForm.jsx",["355","356","357"],"/home/tga/Desktop/gypsy-capital/src/components/MonoWidget/MonoWidget.jsx",["358","359","360"],"/home/tga/Desktop/gypsy-capital/src/components/ProcessOffer/ProcessOffer.jsx",[],"/home/tga/Desktop/gypsy-capital/src/utils/validateInput.js",["361","362"],"/home/tga/Desktop/gypsy-capital/src/context/BankCotext.js",[],"/home/tga/Desktop/gypsy-capital/src/pages/HomePage/HomePage.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/Products/Products.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/ClientDetails/ClientDetails.jsx",["363","364","365","366","367","368","369"],"/home/tga/Desktop/gypsy-capital/src/routes/sidebarRoutes.js",["370"],"/home/tga/Desktop/gypsy-capital/src/components/Dashboard/Dashboard.jsx",["371"],"/home/tga/Desktop/gypsy-capital/src/components/Loader/Loader.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/ScrollToTopOnMount/ScrollToTopOnMount.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/LoanModal/LoanModal.jsx",["372","373"],"/home/tga/Desktop/gypsy-capital/src/hooks/useNavigateAfterAuth.js",["374"],"/home/tga/Desktop/gypsy-capital/src/components/BvnForm/BvnForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/context/RepaymentContext.js",[],{"ruleId":"375","severity":1,"message":"376","line":1,"column":1,"nodeType":"377","endLine":7,"endColumn":2},{"ruleId":"378","severity":1,"message":"379","line":49,"column":6,"nodeType":"380","endLine":49,"endColumn":8,"suggestions":"381"},{"ruleId":"378","severity":1,"message":"382","line":68,"column":6,"nodeType":"380","endLine":68,"endColumn":19,"suggestions":"383"},{"ruleId":"378","severity":1,"message":"384","line":75,"column":6,"nodeType":"380","endLine":75,"endColumn":13,"suggestions":"385"},{"ruleId":"378","severity":1,"message":"384","line":29,"column":6,"nodeType":"380","endLine":29,"endColumn":13,"suggestions":"386"},{"ruleId":"378","severity":1,"message":"384","line":47,"column":6,"nodeType":"380","endLine":47,"endColumn":13,"suggestions":"387"},{"ruleId":"388","severity":1,"message":"389","line":64,"column":33,"nodeType":"390","messageId":"391","endLine":64,"endColumn":34,"suggestions":"392"},{"ruleId":"388","severity":1,"message":"389","line":64,"column":58,"nodeType":"390","messageId":"391","endLine":64,"endColumn":59,"suggestions":"393"},{"ruleId":"394","replacedBy":"395"},{"ruleId":"396","replacedBy":"397"},{"ruleId":"398","severity":1,"message":"399","line":33,"column":11,"nodeType":"400","endLine":40,"endColumn":12},{"ruleId":"394","replacedBy":"401"},{"ruleId":"396","replacedBy":"402"},{"ruleId":"378","severity":1,"message":"403","line":47,"column":6,"nodeType":"380","endLine":47,"endColumn":12,"suggestions":"404"},{"ruleId":"405","severity":1,"message":"406","line":204,"column":20,"nodeType":"407","messageId":"408","endLine":204,"endColumn":27},{"ruleId":"378","severity":1,"message":"409","line":208,"column":6,"nodeType":"380","endLine":208,"endColumn":8,"suggestions":"410"},{"ruleId":"378","severity":1,"message":"411","line":302,"column":6,"nodeType":"380","endLine":302,"endColumn":8,"suggestions":"412"},{"ruleId":"378","severity":1,"message":"384","line":20,"column":6,"nodeType":"380","endLine":20,"endColumn":13,"suggestions":"413"},{"ruleId":"378","severity":1,"message":"384","line":35,"column":6,"nodeType":"380","endLine":35,"endColumn":13,"suggestions":"414"},{"ruleId":"378","severity":1,"message":"415","line":36,"column":6,"nodeType":"380","endLine":36,"endColumn":8,"suggestions":"416"},{"ruleId":"405","severity":1,"message":"417","line":6,"column":8,"nodeType":"407","messageId":"408","endLine":6,"endColumn":14},{"ruleId":"378","severity":1,"message":"418","line":22,"column":6,"nodeType":"380","endLine":22,"endColumn":8,"suggestions":"419"},{"ruleId":"420","severity":1,"message":"421","line":44,"column":11,"nodeType":"400","endLine":44,"endColumn":45},{"ruleId":"378","severity":1,"message":"415","line":89,"column":6,"nodeType":"380","endLine":89,"endColumn":8,"suggestions":"422"},{"ruleId":"378","severity":1,"message":"423","line":32,"column":6,"nodeType":"380","endLine":32,"endColumn":8,"suggestions":"424"},{"ruleId":"378","severity":1,"message":"425","line":103,"column":6,"nodeType":"380","endLine":103,"endColumn":49,"suggestions":"426"},{"ruleId":"378","severity":1,"message":"427","line":111,"column":6,"nodeType":"380","endLine":111,"endColumn":23,"suggestions":"428"},{"ruleId":"378","severity":1,"message":"429","line":136,"column":6,"nodeType":"380","endLine":136,"endColumn":25,"suggestions":"430"},{"ruleId":"378","severity":1,"message":"431","line":42,"column":6,"nodeType":"380","endLine":42,"endColumn":8,"suggestions":"432"},{"ruleId":"378","severity":1,"message":"425","line":80,"column":6,"nodeType":"380","endLine":80,"endColumn":49,"suggestions":"433"},{"ruleId":"378","severity":1,"message":"427","line":87,"column":6,"nodeType":"380","endLine":87,"endColumn":23,"suggestions":"434"},{"ruleId":"378","severity":1,"message":"435","line":42,"column":6,"nodeType":"380","endLine":42,"endColumn":8,"suggestions":"436"},{"ruleId":"378","severity":1,"message":"437","line":103,"column":6,"nodeType":"380","endLine":103,"endColumn":8,"suggestions":"438"},{"ruleId":"378","severity":1,"message":"429","line":116,"column":6,"nodeType":"380","endLine":116,"endColumn":37,"suggestions":"439"},{"ruleId":"378","severity":1,"message":"431","line":500,"column":6,"nodeType":"380","endLine":500,"endColumn":8,"suggestions":"440"},{"ruleId":"378","severity":1,"message":"425","line":515,"column":6,"nodeType":"380","endLine":515,"endColumn":49,"suggestions":"441"},{"ruleId":"378","severity":1,"message":"427","line":523,"column":6,"nodeType":"380","endLine":523,"endColumn":23,"suggestions":"442"},{"ruleId":"378","severity":1,"message":"443","line":713,"column":6,"nodeType":"380","endLine":713,"endColumn":8,"suggestions":"444"},{"ruleId":"378","severity":1,"message":"445","line":72,"column":6,"nodeType":"380","endLine":72,"endColumn":8,"suggestions":"446"},{"ruleId":"394","replacedBy":"447"},{"ruleId":"396","replacedBy":"448"},{"ruleId":"405","severity":1,"message":"449","line":40,"column":30,"nodeType":"407","messageId":"408","endLine":40,"endColumn":44},{"ruleId":"405","severity":1,"message":"450","line":44,"column":5,"nodeType":"407","messageId":"408","endLine":44,"endColumn":24},{"ruleId":"378","severity":1,"message":"451","line":53,"column":6,"nodeType":"380","endLine":53,"endColumn":13,"suggestions":"452"},{"ruleId":"378","severity":1,"message":"431","line":91,"column":6,"nodeType":"380","endLine":91,"endColumn":8,"suggestions":"453"},{"ruleId":"378","severity":1,"message":"454","line":106,"column":6,"nodeType":"380","endLine":106,"endColumn":16,"suggestions":"455"},{"ruleId":"378","severity":1,"message":"456","line":187,"column":8,"nodeType":"380","endLine":187,"endColumn":22,"suggestions":"457"},{"ruleId":"378","severity":1,"message":"458","line":408,"column":6,"nodeType":"380","endLine":408,"endColumn":16,"suggestions":"459"},{"ruleId":"405","severity":1,"message":"460","line":636,"column":5,"nodeType":"407","messageId":"408","endLine":636,"endColumn":25},{"ruleId":"378","severity":1,"message":"451","line":693,"column":6,"nodeType":"380","endLine":693,"endColumn":13,"suggestions":"461"},{"ruleId":"378","severity":1,"message":"462","line":722,"column":6,"nodeType":"380","endLine":722,"endColumn":26,"suggestions":"463"},{"ruleId":"378","severity":1,"message":"464","line":751,"column":6,"nodeType":"380","endLine":757,"endColumn":4,"suggestions":"465"},{"ruleId":"378","severity":1,"message":"411","line":1128,"column":6,"nodeType":"380","endLine":1128,"endColumn":8,"suggestions":"466"},{"ruleId":"378","severity":1,"message":"467","line":43,"column":6,"nodeType":"380","endLine":43,"endColumn":16,"suggestions":"468"},{"ruleId":"378","severity":1,"message":"467","line":69,"column":6,"nodeType":"380","endLine":69,"endColumn":55,"suggestions":"469"},{"ruleId":"405","severity":1,"message":"470","line":4,"column":8,"nodeType":"407","messageId":"408","endLine":4,"endColumn":15},{"ruleId":"405","severity":1,"message":"471","line":98,"column":7,"nodeType":"407","messageId":"408","endLine":98,"endColumn":35},{"ruleId":"405","severity":1,"message":"472","line":101,"column":11,"nodeType":"407","messageId":"408","endLine":101,"endColumn":16},{"ruleId":"405","severity":1,"message":"473","line":102,"column":11,"nodeType":"407","messageId":"408","endLine":102,"endColumn":19},{"ruleId":"375","severity":1,"message":"376","line":4,"column":1,"nodeType":"377","endLine":34,"endColumn":2},{"ruleId":"405","severity":1,"message":"474","line":18,"column":11,"nodeType":"407","messageId":"408","endLine":18,"endColumn":15},{"ruleId":"378","severity":1,"message":"475","line":28,"column":6,"nodeType":"380","endLine":28,"endColumn":8,"suggestions":"476"},{"ruleId":"378","severity":1,"message":"384","line":28,"column":6,"nodeType":"380","endLine":28,"endColumn":13,"suggestions":"477"},{"ruleId":"378","severity":1,"message":"478","line":36,"column":6,"nodeType":"380","endLine":36,"endColumn":8,"suggestions":"479"},{"ruleId":"405","severity":1,"message":"417","line":5,"column":8,"nodeType":"407","messageId":"408","endLine":5,"endColumn":14},{"ruleId":"405","severity":1,"message":"480","line":1,"column":28,"nodeType":"407","messageId":"408","endLine":1,"endColumn":36},{"ruleId":"405","severity":1,"message":"417","line":3,"column":8,"nodeType":"407","messageId":"408","endLine":3,"endColumn":14},{"ruleId":"378","severity":1,"message":"418","line":21,"column":6,"nodeType":"380","endLine":21,"endColumn":8,"suggestions":"481"},{"ruleId":"405","severity":1,"message":"417","line":3,"column":8,"nodeType":"407","messageId":"408","endLine":3,"endColumn":14},{"ruleId":"378","severity":1,"message":"475","line":22,"column":6,"nodeType":"380","endLine":22,"endColumn":8,"suggestions":"482"},{"ruleId":"378","severity":1,"message":"411","line":34,"column":6,"nodeType":"380","endLine":34,"endColumn":8,"suggestions":"483"},{"ruleId":"405","severity":1,"message":"484","line":36,"column":31,"nodeType":"407","messageId":"408","endLine":36,"endColumn":40},{"ruleId":"378","severity":1,"message":"485","line":95,"column":6,"nodeType":"380","endLine":95,"endColumn":70,"suggestions":"486"},{"ruleId":"405","severity":1,"message":"487","line":10,"column":9,"nodeType":"407","messageId":"408","endLine":10,"endColumn":17},{"ruleId":"378","severity":1,"message":"379","line":38,"column":6,"nodeType":"380","endLine":38,"endColumn":8,"suggestions":"488"},{"ruleId":"489","severity":1,"message":"490","line":103,"column":29,"nodeType":"400","endLine":103,"endColumn":72},{"ruleId":"405","severity":1,"message":"491","line":77,"column":9,"nodeType":"407","messageId":"408","endLine":77,"endColumn":19},{"ruleId":"378","severity":1,"message":"384","line":375,"column":6,"nodeType":"380","endLine":375,"endColumn":13,"suggestions":"492"},{"ruleId":"378","severity":1,"message":"493","line":387,"column":6,"nodeType":"380","endLine":387,"endColumn":17,"suggestions":"494"},{"ruleId":"405","severity":1,"message":"495","line":13,"column":5,"nodeType":"407","messageId":"408","endLine":13,"endColumn":21},{"ruleId":"378","severity":1,"message":"496","line":33,"column":6,"nodeType":"380","endLine":33,"endColumn":8,"suggestions":"497"},{"ruleId":"378","severity":1,"message":"384","line":47,"column":6,"nodeType":"380","endLine":47,"endColumn":13,"suggestions":"498"},{"ruleId":"388","severity":1,"message":"389","line":2,"column":31,"nodeType":"390","messageId":"391","endLine":2,"endColumn":32,"suggestions":"499"},{"ruleId":"388","severity":1,"message":"389","line":2,"column":56,"nodeType":"390","messageId":"391","endLine":2,"endColumn":57,"suggestions":"500"},{"ruleId":"378","severity":1,"message":"429","line":54,"column":6,"nodeType":"380","endLine":54,"endColumn":12,"suggestions":"501"},{"ruleId":"378","severity":1,"message":"502","line":184,"column":6,"nodeType":"380","endLine":184,"endColumn":12,"suggestions":"503"},{"ruleId":"378","severity":1,"message":"504","line":273,"column":6,"nodeType":"380","endLine":273,"endColumn":12,"suggestions":"505"},{"ruleId":"378","severity":1,"message":"506","line":285,"column":6,"nodeType":"380","endLine":285,"endColumn":17,"suggestions":"507"},{"ruleId":"378","severity":1,"message":"508","line":417,"column":6,"nodeType":"380","endLine":417,"endColumn":17,"suggestions":"509"},{"ruleId":"378","severity":1,"message":"475","line":534,"column":6,"nodeType":"380","endLine":534,"endColumn":8,"suggestions":"510"},{"ruleId":"378","severity":1,"message":"511","line":647,"column":6,"nodeType":"380","endLine":647,"endColumn":8,"suggestions":"512"},{"ruleId":"405","severity":1,"message":"513","line":8,"column":10,"nodeType":"407","messageId":"408","endLine":8,"endColumn":21},{"ruleId":"489","severity":1,"message":"490","line":66,"column":21,"nodeType":"400","endLine":66,"endColumn":74},{"ruleId":"378","severity":1,"message":"443","line":121,"column":6,"nodeType":"380","endLine":121,"endColumn":8,"suggestions":"514"},{"ruleId":"378","severity":1,"message":"384","line":174,"column":6,"nodeType":"380","endLine":174,"endColumn":13,"suggestions":"515"},{"ruleId":"375","severity":1,"message":"376","line":7,"column":1,"nodeType":"377","endLine":29,"endColumn":2},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getClientDetails' and 'user.user_id'. Either include them or remove the dependency array.","ArrayExpression",["516"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["517"],"React Hook useEffect has a missing dependency: 'clearErrors'. Either include it or remove the dependency array.",["518"],["519"],["520"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["521","522"],["523","524"],"no-native-reassign",["525"],"no-negated-in-lhs",["526"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement",["525"],["526"],"React Hook useEffect has a missing dependency: 'basicInfo'. Either include it or remove the dependency array. You can also do a functional update 'setBasicInfo(b => ...)' if you only need 'basicInfo' in the 'setBasicInfo' call.",["527"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'loanId' and 'verifyRepaymentStatus'. Either include them or remove the dependency array.",["528"],"React Hook useEffect has missing dependencies: 'loanId' and 'retrieveLoan'. Either include them or remove the dependency array.",["529"],["530"],["531"],"React Hook useEffect has missing dependencies: 'clientId' and 'getClientDetails'. Either include them or remove the dependency array.",["532"],"'styles' is defined but never used.","React Hook useEffect has a missing dependency: 'getClientListForRole'. Either include it or remove the dependency array.",["533"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["534"],"React Hook useEffect has missing dependencies: 'getBankList', 'getClientDetails', and 'user.user_id'. Either include them or remove the dependency array.",["535"],"React Hook useEffect has missing dependencies: 'bankList' and 'verifyBankInfo'. Either include them or remove the dependency array.",["536"],"React Hook useEffect has a missing dependency: 'bankInfo'. Either include it or remove the dependency array. You can also do a functional update 'setBankInfo(b => ...)' if you only need 'bankInfo' in the 'setBankInfo' call.",["537"],"React Hook useEffect has a missing dependency: 'biodata'. Either include it or remove the dependency array. You can also do a functional update 'setBiodata(b => ...)' if you only need 'biodata' in the 'setBiodata' call.",["538"],"React Hook useEffect has a missing dependency: 'getBankList'. Either include it or remove the dependency array.",["539"],["540"],["541"],"React Hook useEffect has a missing dependency: 'returnNumber'. Either include it or remove the dependency array. If 'setFaqs' needs the current value of 'returnNumber', you can also switch to useReducer instead of useState and read 'returnNumber' in the reducer.",["542"],"React Hook useEffect has missing dependencies: 'currentAddedUser' and 'getClientDetails'. Either include them or remove the dependency array.",["543"],["544"],["545"],["546"],["547"],"React Hook useEffect has a missing dependency: 'close'. Either include it or remove the dependency array. If 'close' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["548"],"React Hook useEffect has missing dependencies: 'loanData?.approvedAmount', 'loanData?.client?.firstName', 'loanData?.client?.lastName', 'loanData?.employment?.sector', 'loanData?.loanPurpose', 'loanData?.monthlyRepayment', 'loanData?.residence?.street', and 'offerFormData'. Either include them or remove the dependency array. You can also do a functional update 'setOfferFormData(o => ...)' if you only need 'offerFormData' in the 'setOfferFormData' call.",["549"],["525"],["526"],"'approvedStatus' is assigned a value but never used.","'resetApprovalStatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'clearError'. Either include it or remove the dependency array.",["550"],["551"],"React Hook useEffect has a missing dependency: 'approvalData'. Either include it or remove the dependency array. You can also do a functional update 'setApprovalData(a => ...)' if you only need 'approvalData' in the 'setApprovalData' call.",["552"],"React Hook useEffect has a missing dependency: 'clientBank'. Either include it or remove the dependency array. Outer scope values like 'disburseBank' aren't valid dependencies because mutating them doesn't re-render the component.",["553"],"React Hook useEffect has a missing dependency: 'repayData'. Either include it or remove the dependency array. You can also do a functional update 'setRepayData(r => ...)' if you only need 'repayData' in the 'setRepayData' call.",["554"],"'resetRepaymentStatus' is assigned a value but never used.",["555"],"React Hook useEffect has a missing dependency: 'setupData'. Either include it or remove the dependency array. You can also do a functional update 'setSetupData(s => ...)' if you only need 'setupData' in the 'setSetupData' call.",["556"],"React Hook useEffect has missing dependencies: 'loanData?.monthlySalary' and 'setupData'. Either include them or remove the dependency array. You can also do a functional update 'setSetupData(s => ...)' if you only need 'setupData' in the 'setSetupData' call.",["557"],["558"],"React Hook useEffect has a missing dependency: 'loanData'. Either include it or remove the dependency array. You can also do a functional update 'setLoanData(l => ...)' if you only need 'loanData' in the 'setLoanData' call.",["559"],["560"],"'history' is defined but never used.","'getAccountTransactionHistory' is assigned a value but never used.","'token' is assigned a value but never used.","'response' is assigned a value but never used.","'path' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveClientLoans'. Either include it or remove the dependency array.",["561"],["562"],"React Hook useEffect has missing dependencies: 'getClientListForRole' and 'retrieveClientLoans'. Either include them or remove the dependency array.",["563"],"'useState' is defined but never used.",["564"],["565"],["566"],"'loanApply' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loanCalcData'. Either include it or remove the dependency array. You can also do a functional update 'setLoanCalcData(l => ...)' if you only need 'loanCalcData' in the 'setLoanCalcData' call.",["567"],"'location' is assigned a value but never used.",["568"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'emptyState' is assigned a value but never used.",["569"],"React Hook useEffect has a missing dependency: 'clearErr'. Either include it or remove the dependency array.",["570"],"'resetLinkSuccess' is assigned a value but never used.","React Hook React.useMemo has missing dependencies: 'authenticateUser' and 'user.user_id'. Either include them or remove the dependency array.",["571"],["572"],["573","574"],["575","576"],["577"],"React Hook useEffect has a missing dependency: 'nextOfKin'. Either include it or remove the dependency array. You can also do a functional update 'setNextOfKin(n => ...)' if you only need 'nextOfKin' in the 'setNextOfKin' call.",["578"],"React Hook useEffect has a missing dependency: 'disburseBank'. Either include it or remove the dependency array. You can also do a functional update 'setDisburseBank(d => ...)' if you only need 'disburseBank' in the 'setDisburseBank' call.",["579"],"React Hook useEffect has a missing dependency: 'salaryBank'. Either include it or remove the dependency array. You can also do a functional update 'setSalaryBank(s => ...)' if you only need 'salaryBank' in the 'setSalaryBank' call.",["580"],"React Hook useEffect has missing dependencies: 'OfficeAddress' and 'employerInfo'. Either include them or remove the dependency array. You can also do a functional update 'setEmployerInfo(e => ...)' if you only need 'employerInfo' in the 'setEmployerInfo' call.",["581"],["582"],"React Hook useEffect has missing dependencies: 'clearErrors', 'clientId', and 'getClientDetails'. Either include them or remove the dependency array.",["583"],"'RiUser3Fill' is defined but never used.",["584"],["585"],{"desc":"586","fix":"587"},{"desc":"588","fix":"589"},{"desc":"590","fix":"591"},{"desc":"590","fix":"592"},{"desc":"590","fix":"593"},{"messageId":"594","fix":"595","desc":"596"},{"messageId":"597","fix":"598","desc":"599"},{"messageId":"594","fix":"600","desc":"596"},{"messageId":"597","fix":"601","desc":"599"},"no-global-assign","no-unsafe-negation",{"desc":"602","fix":"603"},{"desc":"604","fix":"605"},{"desc":"606","fix":"607"},{"desc":"590","fix":"608"},{"desc":"590","fix":"609"},{"desc":"610","fix":"611"},{"desc":"612","fix":"613"},{"desc":"610","fix":"614"},{"desc":"615","fix":"616"},{"desc":"617","fix":"618"},{"desc":"619","fix":"620"},{"desc":"621","fix":"622"},{"desc":"623","fix":"624"},{"desc":"617","fix":"625"},{"desc":"619","fix":"626"},{"desc":"627","fix":"628"},{"desc":"629","fix":"630"},{"desc":"631","fix":"632"},{"desc":"623","fix":"633"},{"desc":"617","fix":"634"},{"desc":"619","fix":"635"},{"desc":"636","fix":"637"},{"desc":"638","fix":"639"},{"desc":"640","fix":"641"},{"desc":"623","fix":"642"},{"desc":"643","fix":"644"},{"desc":"645","fix":"646"},{"desc":"647","fix":"648"},{"desc":"640","fix":"649"},{"desc":"650","fix":"651"},{"desc":"652","fix":"653"},{"desc":"606","fix":"654"},{"desc":"655","fix":"656"},{"desc":"657","fix":"658"},{"desc":"659","fix":"660"},{"desc":"590","fix":"661"},{"desc":"662","fix":"663"},{"desc":"612","fix":"664"},{"desc":"659","fix":"665"},{"desc":"606","fix":"666"},{"desc":"667","fix":"668"},{"desc":"586","fix":"669"},{"desc":"590","fix":"670"},{"desc":"671","fix":"672"},{"desc":"673","fix":"674"},{"desc":"590","fix":"675"},{"messageId":"594","fix":"676","desc":"596"},{"messageId":"597","fix":"677","desc":"599"},{"messageId":"594","fix":"678","desc":"596"},{"messageId":"597","fix":"679","desc":"599"},{"desc":"680","fix":"681"},{"desc":"682","fix":"683"},{"desc":"684","fix":"685"},{"desc":"686","fix":"687"},{"desc":"688","fix":"689"},{"desc":"659","fix":"690"},{"desc":"691","fix":"692"},{"desc":"636","fix":"693"},{"desc":"590","fix":"694"},"Update the dependencies array to be: [getClientDetails, user.user_id]",{"range":"695","text":"696"},"Update the dependencies array to be: [history, userDetails]",{"range":"697","text":"698"},"Update the dependencies array to be: [clearErrors, error]",{"range":"699","text":"700"},{"range":"701","text":"700"},{"range":"702","text":"700"},"removeEscape",{"range":"703","text":"704"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"705","text":"706"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"707","text":"704"},{"range":"708","text":"706"},"Update the dependencies array to be: [basicInfo, data]",{"range":"709","text":"710"},"Update the dependencies array to be: [loanId, verifyRepaymentStatus]",{"range":"711","text":"712"},"Update the dependencies array to be: [loanId, retrieveLoan]",{"range":"713","text":"714"},{"range":"715","text":"700"},{"range":"716","text":"700"},"Update the dependencies array to be: [clientId, getClientDetails]",{"range":"717","text":"718"},"Update the dependencies array to be: [getClientListForRole]",{"range":"719","text":"720"},{"range":"721","text":"718"},"Update the dependencies array to be: [getBankList, getClientDetails, user.user_id]",{"range":"722","text":"723"},"Update the dependencies array to be: [bankInfo.accountNumber, bankInfo.bankName, bankList, verifyBankInfo]",{"range":"724","text":"725"},"Update the dependencies array to be: [bankInfo, userBankDetails]",{"range":"726","text":"727"},"Update the dependencies array to be: [biodata, user, userDetails]",{"range":"728","text":"729"},"Update the dependencies array to be: [getBankList]",{"range":"730","text":"731"},{"range":"732","text":"725"},{"range":"733","text":"727"},"Update the dependencies array to be: [returnNumber]",{"range":"734","text":"735"},"Update the dependencies array to be: [currentAddedUser, getClientDetails]",{"range":"736","text":"737"},"Update the dependencies array to be: [biodata, currentAddedUser, userDetails]",{"range":"738","text":"739"},{"range":"740","text":"731"},{"range":"741","text":"725"},{"range":"742","text":"727"},"Update the dependencies array to be: [close]",{"range":"743","text":"744"},"Update the dependencies array to be: [loanData?.approvedAmount, loanData?.client?.firstName, loanData?.client?.lastName, loanData?.employment?.sector, loanData?.loanPurpose, loanData?.monthlyRepayment, loanData?.residence?.street, offerFormData]",{"range":"745","text":"746"},"Update the dependencies array to be: [clearError, error]",{"range":"747","text":"748"},{"range":"749","text":"731"},"Update the dependencies array to be: [approvalData, loanData]",{"range":"750","text":"751"},"Update the dependencies array to be: [clientBank]",{"range":"752","text":"753"},"Update the dependencies array to be: [loanData, repayData]",{"range":"754","text":"755"},{"range":"756","text":"748"},"Update the dependencies array to be: [loanData, setupData, userRole]",{"range":"757","text":"758"},"Update the dependencies array to be: [approvedInterest, approvedLoanAmount, approvedTenure, adminFee, setupData.approvedDti, setupData, loanData?.monthlySalary]",{"range":"759","text":"760"},{"range":"761","text":"714"},"Update the dependencies array to be: [loanData, location]",{"range":"762","text":"763"},"Update the dependencies array to be: [proposedAmount, proposedDuration, monthlyIncome, loanData]",{"range":"764","text":"765"},"Update the dependencies array to be: [retrieveClientLoans]",{"range":"766","text":"767"},{"range":"768","text":"700"},"Update the dependencies array to be: [getClientListForRole, retrieveClientLoans]",{"range":"769","text":"770"},{"range":"771","text":"720"},{"range":"772","text":"767"},{"range":"773","text":"714"},"Update the dependencies array to be: [monthlySalary, loanAmount, installmentPeriod, loanCalcData.dti, loanCalcData]",{"range":"774","text":"775"},{"range":"776","text":"696"},{"range":"777","text":"700"},"Update the dependencies array to be: [clearErr, userError]",{"range":"778","text":"779"},"Update the dependencies array to be: [authenticateUser, user.user_id]",{"range":"780","text":"781"},{"range":"782","text":"700"},{"range":"783","text":"704"},{"range":"784","text":"706"},{"range":"785","text":"704"},{"range":"786","text":"706"},"Update the dependencies array to be: [biodata, data]",{"range":"787","text":"788"},"Update the dependencies array to be: [data, nextOfKin]",{"range":"789","text":"790"},"Update the dependencies array to be: [data, disburseBank]",{"range":"791","text":"792"},"Update the dependencies array to be: [loanDeets, salaryBank]",{"range":"793","text":"794"},"Update the dependencies array to be: [OfficeAddress, employerInfo, loanDeets]",{"range":"795","text":"796"},{"range":"797","text":"767"},"Update the dependencies array to be: [clearErrors, clientId, getClientDetails]",{"range":"798","text":"799"},{"range":"800","text":"744"},{"range":"801","text":"700"},[1704,1706],"[getClientDetails, user.user_id]",[2253,2266],"[history, userDetails]",[2363,2370],"[clearErrors, error]",[868,875],[1192,1199],[1464,1465],"",[1464,1464],"\\",[1489,1490],[1489,1489],[1696,1702],"[basicInfo, data]",[5923,5925],"[loanId, verifyRepaymentStatus]",[8621,8623],"[loanId, retrieveLoan]",[664,671],[1036,1043],[1155,1157],"[clientId, getClientDetails]",[837,839],"[getClientListForRole]",[2829,2831],[1094,1096],"[getBankList, getClientDetails, user.user_id]",[2707,2750],"[bankInfo.accountNumber, bankInfo.bankName, bankList, verifyBankInfo]",[2923,2940],"[bankInfo, userBankDetails]",[3787,3806],"[biodata, user, userDetails]",[1268,1270],"[getBankList]",[2545,2588],[2760,2777],[1194,1196],"[returnNumber]",[2818,2820],"[currentAddedUser, getClientDetails]",[3184,3215],"[biodata, currentAddedUser, userDetails]",[14599,14601],[15039,15082],[15255,15272],[21241,21243],"[close]",[2253,2255],"[loanData?.approvedAmount, loanData?.client?.firstName, loanData?.client?.lastName, loanData?.employment?.sector, loanData?.loanPurpose, loanData?.monthlyRepayment, loanData?.residence?.street, offerFormData]",[2170,2177],"[clearError, error]",[2938,2940],[3413,3423],"[approvalData, loanData]",[6215,6229],"[clientBank]",[12831,12841],"[loanData, repayData]",[20699,20706],[21719,21739],"[loanData, setupData, userRole]",[22743,22855],"[approvedInterest, approvedLoanAmount, approvedTenure, adminFee, setupData.approvedDti, setupData, loanData?.monthlySalary]",[33808,33810],[1402,1412],"[loanData, location]",[2253,2302],"[proposedAmount, proposedDuration, monthlyIncome, loanData]",[1105,1107],"[retrieveClientLoans]",[882,889],[1596,1598],"[getClientListForRole, retrieveClientLoans]",[844,846],[812,814],[1165,1167],[2888,2952],"[monthlySalary, loanAmount, installmentPeriod, loanCalcData.dti, loanCalcData]",[1193,1195],[10218,10225],[10372,10383],"[clearErr, userError]",[1060,1062],"[authenticateUser, user.user_id]",[1332,1339],[91,92],[91,91],[116,117],[116,116],[1984,1990],"[biodata, data]",[4959,4965],"[data, nextOfKin]",[6937,6943],"[data, disburseBank]",[7287,7298],"[loanDeets, salaryBank]",[10781,10792],"[OfficeAddress, employerInfo, loanDeets]",[13630,13632],[17010,17012],"[clearErrors, clientId, getClientDetails]",[3009,3011],[4188,4195]]