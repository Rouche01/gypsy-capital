[{"/home/tga/Desktop/gypsy-capital/src/index.js":"1","/home/tga/Desktop/gypsy-capital/src/context/AuthContext.js":"2","/home/tga/Desktop/gypsy-capital/src/context/ApprovalContext.js":"3","/home/tga/Desktop/gypsy-capital/src/routes/pageUrl.js":"4","/home/tga/Desktop/gypsy-capital/src/utils/resolveToken.js":"5","/home/tga/Desktop/gypsy-capital/src/pages/OtpVerify/OtpVerify.jsx":"6","/home/tga/Desktop/gypsy-capital/src/pages/Products/Products.jsx":"7","/home/tga/Desktop/gypsy-capital/src/pages/Overview/Overview.jsx":"8","/home/tga/Desktop/gypsy-capital/src/pages/HomePage/HomePage.jsx":"9","/home/tga/Desktop/gypsy-capital/src/pages/Faqs/Faqs.jsx":"10","/home/tga/Desktop/gypsy-capital/src/pages/LoanList/LoanList.jsx":"11","/home/tga/Desktop/gypsy-capital/src/pages/ClientDetails/ClientDetails.jsx":"12","/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerClientDetails/AuthorizerClientDetails.jsx":"13","/home/tga/Desktop/gypsy-capital/src/pages/LoanDetail/LoanDetail.jsx":"14","/home/tga/Desktop/gypsy-capital/src/utils/validateInput.js":"15","/home/tga/Desktop/gypsy-capital/src/hooks/useNavigateAfterAuth.js":"16","/home/tga/Desktop/gypsy-capital/src/components/InputField/InputField.js":"17","/home/tga/Desktop/gypsy-capital/src/components/Button/Button.jsx":"18","/home/tga/Desktop/gypsy-capital/src/components/ProgressBar/ProgressBar.jsx":"19","/home/tga/Desktop/gypsy-capital/src/components/NavTabs/NavTabs.jsx":"20","/home/tga/Desktop/gypsy-capital/src/components/LoanList/LoanList.jsx":"21","/home/tga/Desktop/gypsy-capital/src/components/LoanCalculatorForm/LoanCalculatorForm.jsx":"22","/home/tga/Desktop/gypsy-capital/src/components/StatBox/StatBox.jsx":"23","/home/tga/Desktop/gypsy-capital/src/components/LoanModal/LoanModal.jsx":"24","/home/tga/Desktop/gypsy-capital/src/components/EmployerInfoForm/EmployerInfoForm.jsx":"25","/home/tga/Desktop/gypsy-capital/src/components/ModalForm/ModalForm.jsx":"26","/home/tga/Desktop/gypsy-capital/src/components/OfferLetter/OfferLetterForm.jsx":"27","/home/tga/Desktop/gypsy-capital/src/components/AccountSetupModal/AccountSetupModal.jsx":"28","/home/tga/Desktop/gypsy-capital/src/components/Dashboard/Dashboard.jsx":"29","/home/tga/Desktop/gypsy-capital/src/pages/pages.js":"30","/home/tga/Desktop/gypsy-capital/src/context/RepaymentContext.js":"31","/home/tga/Desktop/gypsy-capital/src/utils/history.js":"32","/home/tga/Desktop/gypsy-capital/src/context/createPersistDataContext.js":"33","/home/tga/Desktop/gypsy-capital/src/api/gypsy-web.js":"34","/home/tga/Desktop/gypsy-capital/src/pages/CreditReport/CreditReport.jsx":"35","/home/tga/Desktop/gypsy-capital/src/pages/ContactPage/ContactPage.jsx":"36","/home/tga/Desktop/gypsy-capital/src/pages/AboutUs/AboutUs.jsx":"37","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorDashboard/ProcessorDashboard.jsx":"38","/home/tga/Desktop/gypsy-capital/src/pages/ProcessorLoanDetails/ProcessorLoanDetails.jsx":"39","/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerLoanDetails/AuthorizerLoanDetails.jsx":"40","/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerLoans/AuthorizerLoans.jsx":"41","/home/tga/Desktop/gypsy-capital/src/utils/nigeriaStates.js":"42","/home/tga/Desktop/gypsy-capital/src/components/NavBar/NavBar.jsx":"43","/home/tga/Desktop/gypsy-capital/src/components/ScrollToTopOnMount/ScrollToTopOnMount.jsx":"44","/home/tga/Desktop/gypsy-capital/src/components/ProfileView/ProfileView.jsx":"45","/home/tga/Desktop/gypsy-capital/src/components/CustomDatePicker/CustomDatePicker.jsx":"46","/home/tga/Desktop/gypsy-capital/src/components/ProcessOffer/ProcessOffer.jsx":"47","/home/tga/Desktop/gypsy-capital/src/components/FaqSection/FaqSection.jsx":"48","/home/tga/Desktop/gypsy-capital/src/components/LoanContactForm/LoanContactForm.jsx":"49","/home/tga/Desktop/gypsy-capital/src/components/OfferLetter/OfferLetter.jsx":"50"},{"size":601,"mtime":1616947056111,"results":"51","hashOfConfig":"52"},{"size":8621,"mtime":1616947056059,"results":"53","hashOfConfig":"52"},{"size":2972,"mtime":1616947056039,"results":"54","hashOfConfig":"52"},{"size":2456,"mtime":1615165274533,"results":"55","hashOfConfig":"52"},{"size":192,"mtime":1612142197425,"results":"56","hashOfConfig":"52"},{"size":2391,"mtime":1612574568451,"results":"57","hashOfConfig":"52"},{"size":12257,"mtime":1615039376564,"results":"58","hashOfConfig":"52"},{"size":5814,"mtime":1617081711125,"results":"59","hashOfConfig":"52"},{"size":16172,"mtime":1616947056151,"results":"60","hashOfConfig":"52"},{"size":855,"mtime":1615812259207,"results":"61","hashOfConfig":"52"},{"size":4424,"mtime":1615230346385,"results":"62","hashOfConfig":"52"},{"size":18542,"mtime":1615230346361,"results":"63","hashOfConfig":"52"},{"size":2997,"mtime":1615812259183,"results":"64","hashOfConfig":"52"},{"size":10912,"mtime":1616947119561,"results":"65","hashOfConfig":"52"},{"size":1191,"mtime":1616947056287,"results":"66","hashOfConfig":"52"},{"size":990,"mtime":1614729905905,"results":"67","hashOfConfig":"52"},{"size":2658,"mtime":1615812259071,"results":"68","hashOfConfig":"52"},{"size":917,"mtime":1614587267822,"results":"69","hashOfConfig":"52"},{"size":1565,"mtime":1611429643367,"results":"70","hashOfConfig":"52"},{"size":504,"mtime":1613386895718,"results":"71","hashOfConfig":"52"},{"size":3592,"mtime":1614577812286,"results":"72","hashOfConfig":"52"},{"size":9861,"mtime":1616947055951,"results":"73","hashOfConfig":"52"},{"size":359,"mtime":1613662172186,"results":"74","hashOfConfig":"52"},{"size":4902,"mtime":1616947055983,"results":"75","hashOfConfig":"52"},{"size":9874,"mtime":1616947055927,"results":"76","hashOfConfig":"52"},{"size":11735,"mtime":1614471117577,"results":"77","hashOfConfig":"52"},{"size":23650,"mtime":1616947056003,"results":"78","hashOfConfig":"52"},{"size":21688,"mtime":1614430258872,"results":"79","hashOfConfig":"52"},{"size":6624,"mtime":1617079933152,"results":"80","hashOfConfig":"52"},{"size":2387,"mtime":1615165250184,"results":"81","hashOfConfig":"52"},{"size":2566,"mtime":1616947056083,"results":"82","hashOfConfig":"52"},{"size":84,"mtime":1612764469627,"results":"83","hashOfConfig":"52"},{"size":821,"mtime":1612688150601,"results":"84","hashOfConfig":"52"},{"size":191,"mtime":1616947168942,"results":"85","hashOfConfig":"52"},{"size":498,"mtime":1613049821733,"results":"86","hashOfConfig":"52"},{"size":5306,"mtime":1616947056143,"results":"87","hashOfConfig":"52"},{"size":7035,"mtime":1615812259183,"results":"88","hashOfConfig":"52"},{"size":5721,"mtime":1615450279669,"results":"89","hashOfConfig":"52"},{"size":24644,"mtime":1616947119561,"results":"90","hashOfConfig":"52"},{"size":6816,"mtime":1616947056123,"results":"91","hashOfConfig":"52"},{"size":1045,"mtime":1615363832954,"results":"92","hashOfConfig":"52"},{"size":6981,"mtime":1616947056211,"results":"93","hashOfConfig":"52"},{"size":3124,"mtime":1615812259099,"results":"94","hashOfConfig":"52"},{"size":183,"mtime":1615812259163,"results":"95","hashOfConfig":"52"},{"size":7350,"mtime":1615166227442,"results":"96","hashOfConfig":"52"},{"size":794,"mtime":1616947055923,"results":"97","hashOfConfig":"52"},{"size":2173,"mtime":1615812259143,"results":"98","hashOfConfig":"52"},{"size":2165,"mtime":1615812259055,"results":"99","hashOfConfig":"52"},{"size":6146,"mtime":1616947055971,"results":"100","hashOfConfig":"52"},{"size":11980,"mtime":1616947055995,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"t9s37o",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"104"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"104"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"104"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/tga/Desktop/gypsy-capital/src/index.js",[],["207","208"],"/home/tga/Desktop/gypsy-capital/src/context/AuthContext.js",[],"/home/tga/Desktop/gypsy-capital/src/context/ApprovalContext.js",[],"/home/tga/Desktop/gypsy-capital/src/routes/pageUrl.js",[],"/home/tga/Desktop/gypsy-capital/src/utils/resolveToken.js",["209"],"export default () => {\n    const gypsyData = localStorage.getItem('gypsy');\n    if (!gypsyData) return null;\n    let token = JSON.parse(gypsyData);\n    token = token.token;\n    return token;\n}","/home/tga/Desktop/gypsy-capital/src/pages/OtpVerify/OtpVerify.jsx",["210"],"import React, { useContext, useEffect, useState } from 'react';\nimport styles from './OtpVerify.module.scss';\nimport Logo from '../../assets/logo.png';\nimport { Row, Col } from 'react-bootstrap';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport { Link } from 'react-router-dom';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst OtpVerify = () => {\n\n  const [otp, setOtp] = useState('');\n  const [validationErr, setValidationErr] = useState(null);\n\n  const { \n      state: { error, loading, message, user }, \n      verifyOtp, \n      getActiveUser, \n      resendOtp,\n      clearErrors \n  } = useContext(AuthContext);\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearErrors();\n    }\n  }, [error])\n\n  useEffect(() => {\n    if(message) {\n      toast.success(message);\n    }\n  }, [message])\n\n  const handleSubmit = () => {\n    if(!otp) {\n      setValidationErr('You need to enter your otp to verify your account')\n    } else {\n      verifyOtp(otp, user.email, getActiveUser);\n    }\n  }\n\n  const resendCode = () => {\n    resendOtp(user.email);\n  }\n\n  return(\n    <div className={styles.container}>\n      <img src={Logo} alt=\"Gypsy Logo\" />\n      <h1>Verify Your Details</h1>\n      <p>Please enter the OTP sent to your email to continue</p>\n      <div className={styles.verifyBox}>\n        <ToastContainer position=\"top-center\" />\n        <Row>\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"One Time Password\"\n              nameAttr=\"otp\"\n              value={otp}\n              changed={(val) => {\n                setValidationErr(null)\n                setOtp(val)\n              }}\n              error={validationErr && validationErr}\n            />\n          </Col>\n        </Row>\n        <Button \n          clicked={handleSubmit} \n          fullWidth \n          className=\"mt-4\" \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n          disabled={loading}\n          loading={loading}\n        >\n          Verify Code\n        </Button>\n        <p className={[styles.authLink, 'mt-3'].join(' ')}>\n          Didn’t receive code? <Link onClick={resendCode}>Resend OTP</Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n\n\nexport default OtpVerify;","/home/tga/Desktop/gypsy-capital/src/pages/Products/Products.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/Overview/Overview.jsx",["211","212"],"/home/tga/Desktop/gypsy-capital/src/pages/HomePage/HomePage.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/Faqs/Faqs.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/LoanList/LoanList.jsx",["213"],"/home/tga/Desktop/gypsy-capital/src/pages/ClientDetails/ClientDetails.jsx",["214","215","216","217","218","219","220"],"import React, { useContext, useEffect, useState, useMemo } from 'react';\nimport styles from './ClientDetails.module.scss';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport { routes } from '../../routes/sidebarRoutes';\nimport { useLocation, useParams, Link } from 'react-router-dom';\nimport InputField from '../../components/InputField/InputField';\nimport { Row, Col, Table, Pagination } from 'react-bootstrap';\nimport NavTabs from '../../components/NavTabs/NavTabs';\nimport Button from '../../components/Button/Button';\nimport LoanModal from '../../components/LoanModal/LoanModal';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { Context as LoanContext } from '../../context/LoanContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport Loader from '../../components/Loader/Loader';\nimport usePagination from '../../hooks/usePagination';\nimport { numberWithCommas } from '../../utils/nigeriaStates';\nimport { TiCancelOutline } from 'react-icons/ti';\nimport useLoanDetails from '../../hooks/useLoanDetails';\nimport _ from 'lodash';\n\n\nexport const Biodata = ({ data, userId }) => {\n\n  const [ loanDeets ] = useLoanDetails(userId);\n\n  const [biodata, setBiodata] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    gender: \"\",\n    dateOfBirth: \"\",\n    emailAddress: \"\",\n    phoneNumber: \"\",\n    altPhoneNumber: \"\",\n    residentialAddress: \"\",\n  });\n\n  const [residentialStatus, setResidentialStatus] = useState('');\n\n  useEffect(() => {\n    if(data) {\n      setBiodata({\n        ...biodata,\n        firstName: data.firstName,\n        lastName: data.lastName,\n        gender: _.capitalize(data.gender),\n        dateOfBirth: data.DOB,\n        emailAddress: data.email,\n        phoneNumber: data.phoneNumber.replace('234', '0'),\n        altPhoneNumber: data.alternativePhoneNumber,\n        residentialAddress: `${data.street}, ${_.capitalize(data.state)}`,\n        // residentialStatus: data\n      })\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if(loanDeets) {\n      setResidentialStatus(_.capitalize(loanDeets?.residence[0]?.residentialStatus))\n    }\n  }, [loanDeets])\n\n  return (\n    <>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"First Name\"\n            nameAttr=\"firstName\"\n            value={biodata.firstName}\n            disable={true}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Last Name\"\n            nameAttr=\"lastName\"\n            value={biodata.lastName}\n            disable={true}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Gender\"\n            nameAttr=\"gender\"\n            value={biodata.gender}\n            disable={true}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Date of Birth\"\n            nameAttr=\"dob\"\n            value={biodata.dateOfBirth}\n            disable={true}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"email\"\n            label=\"Email Address\"\n            nameAttr=\"emailAddress\"\n            value={biodata.emailAddress}\n            disable={true}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Phone Number\"\n            nameAttr=\"phoneNo\"\n            value={biodata.phoneNumber}\n            disable={true}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Residential Status\"\n            nameAttr=\"residentStatus\"\n            value={   residentialStatus}\n            disable={true}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Alternative Phone Number\"\n            nameAttr=\"altPhoneNo\"\n            value={biodata.altPhoneNumber}\n            disable={true}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Residential Address\"\n            nameAttr=\"homeAddress\"\n            value={biodata.residentialAddress}\n            disable={true}\n          />\n        </Col>\n      </Row>\n    </>\n  )\n}\n\n\nexport const NextOfKin = ({ data }) => {\n\n  const [nextOfKin, setNextOfKin] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    relationship: \"\" ,\n    phoneNumber: \"\",\n    residentialAddress: \"\"\n  });\n\n  useEffect(() => {\n\n    if(data) {\n      const names = data.fullName?.split(' ');\n\n      setNextOfKin({\n        ...nextOfKin,\n        firstName: names[0],\n        lastName: names[names.length - 1],\n        relationship: data.relationship,\n        phoneNumber: data.phoneNumber,\n        residentialAddress: data.residentialAddress\n      })\n    }\n  }, [data])\n\n  return (\n    <>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"First Name\"\n            nameAttr=\"firstName\"\n            value={nextOfKin.firstName}\n            disable={true}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Last Name\"\n            nameAttr=\"lastName\"\n            value={nextOfKin.lastName}\n            disable={true}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Relationship\"\n            nameAttr=\"relationship\"\n            value={nextOfKin.relationship}\n            disable={true}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Phone Number\"\n            nameAttr=\"phoneNo\"\n            value={nextOfKin.phoneNumber}\n            disable={true}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Residential Address\"\n            nameAttr=\"kinAddress\"\n            value={nextOfKin.residentialAddress}\n            disable={true}\n          />\n        </Col>\n      </Row>\n    </>\n  )\n}\n\n\nexport const Bank = ({ data, userId }) => {\n\n  const [disburseBank, setDisburseBank] = useState({\n    bankName: \"\",\n    accountType: \"\",\n    accountNumber: \"\",\n    accountName: \"\"\n  });\n\n  const [salaryBank, setSalaryBank] = useState({\n    bankName: \"\",\n    accountType: \"\",\n    accountNumber: \"\",\n    accountName: \"\"\n  });\n\n  const [ loanDeets ] = useLoanDetails(userId);\n\n  useEffect(() => {\n    if(data) {\n      console.log(data);\n      setDisburseBank({\n        ...disburseBank,\n        bankName: _.startCase(data.bankName),\n        accountType: _.capitalize(data.accountType),\n        accountNumber: data.accountNumber,\n        accountName: data.accountName\n      })\n    }\n  }, [data])\n\n  useEffect(() => {\n    if(loanDeets) {\n      setSalaryBank({\n        ...salaryBank,\n        bankName: _.startCase(loanDeets?.bank[0]?.bank),\n        accountType: _.capitalize(loanDeets?.bank[0]?.accountType),\n        accountNumber: loanDeets?.bank[0]?.accountNumber,\n        accountName: loanDeets?.bank[0]?.accountName\n      })\n    }\n  }, [loanDeets])\n\n  return (\n    <>\n      <div className={styles.disburse}>\n        <h3>Disbursement Account</h3>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Bank Name\"\n              nameAttr=\"bankName\"\n              value={disburseBank.bankName}\n              disable={true}\n            />\n          </Col>\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Account Type\"\n              nameAttr=\"accountType\"\n              value={disburseBank.accountType}\n              disable={true}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Account Number\"\n              nameAttr=\"accountNumber\"\n              value={disburseBank.accountNumber}\n              disable={true}\n            />\n          </Col>\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Account Name\"\n              nameAttr=\"accountName\"\n              value={disburseBank.accountName}\n              disable={true}\n            />\n          </Col>\n        </Row>\n      </div>\n      <div className={styles.salary}>\n        <h3>Salary Account</h3>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Bank Name\"\n              nameAttr=\"salaryBank\"\n              value={salaryBank.bankName}\n              disable={true}\n            />\n          </Col>\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Account Type\"\n              nameAttr=\"salaryAcctType\"\n              value={salaryBank.accountType}\n              disable={true}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Account Number\"\n              nameAttr=\"salaryAcctNum\"\n              value={salaryBank.accountNumber}\n              disable={true}\n            />\n          </Col>\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Account Name\"\n              nameAttr=\"salaryAcctName\"\n              value={salaryBank.accountName}\n              disable={true}\n            />\n          </Col>\n        </Row>\n      </div>\n    </>\n  )\n}\n\n\nexport const Employer = ({ userId }) => {\n\n  const [employerInfo, setEmployerInfo] = useState({\n    employerName: '',\n    employmentDate: '',\n    employmentSector: '',\n    employmentType: '',\n    officialEmail: ''\n  });\n\n  const [OfficeAddress, setOfficeAddress] = useState({\n    street: '',\n    city: '',\n    state: '',\n    lga: ''\n  })\n\n  const [ loanDeets ] = useLoanDetails(userId)\n\n  useEffect(() => {\n    if(loanDeets) {\n      setEmployerInfo({\n        ...employerInfo,\n        employerName: loanDeets?.employment[0]?.employerName,\n        employmentDate: loanDeets?.employment[0]?.resumptionDate,\n        employmentSector: _.capitalize(loanDeets?.employment[0]?.sector),\n        employmentType: _.capitalize(loanDeets?.employment[0]?.employmentType),\n        officialEmail: loanDeets?.employment[0]?.officialEmail\n      })\n      setOfficeAddress({\n        ...OfficeAddress,\n        street: loanDeets?.employment[0]?.street,\n        city: loanDeets?.employment[0]?.city,\n        state: _.capitalize(loanDeets?.employment[0]?.state),\n        lga: _.capitalize(loanDeets?.employment[0]?.city),\n      })\n    }\n  }, [loanDeets])\n\n  return (\n    <>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Employer Name\"\n            nameAttr=\"employerName\"\n            disable={true}\n            value={employerInfo.employerName}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Employment Date\"\n            nameAttr=\"employmentDate\"\n            disable={true}\n            value={employerInfo.employmentDate}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Employment Sector\"\n            nameAttr=\"employmentSector\"\n            disable={true}\n            value={employerInfo.employmentSector}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Employment Type\"\n            nameAttr=\"employmentType\"\n            disable={true}\n            value={employerInfo.employmentType}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Office Email Address\"\n            nameAttr=\"officeEmail\"\n            disable={true}\n            value={employerInfo.officialEmail}\n          />\n        </Col>\n      </Row>\n      <div className={styles.officeAddress}>\n        <h3>Office Address</h3>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Street Address\"\n              nameAttr=\"streetAddress\"\n              disable={true}\n              value={OfficeAddress.street}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"City\"\n            nameAttr=\"city\"\n            disable={true}\n            value={OfficeAddress.city}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"State\"\n            nameAttr=\"state\"\n            disable={true}\n            value={OfficeAddress.state}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Local Government Area\"\n            nameAttr=\"lga\"\n            disable={true}\n            value={OfficeAddress.lga}\n          />\n        </Col>\n      </Row>\n      </div>\n    </>\n  )\n}\n\n\nexport const ClientLoan = ({ userId, canApply, userRole }) => {\n\n  const [modalOpen, setModalOpen] = useState(false)\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(5);\n\n  const closeModal = () => {\n    setModalOpen(false);\n  }\n\n  const { state: { loans }, retrieveClientLoans } = useContext(LoanContext);\n\n  useEffect(() => {\n    retrieveClientLoans();\n  }, []);\n\n  const clientLoans = useMemo(() => {\n    return loans.filter((loan) => loan.userId === userId)\n  }, [loans, userId]);\n\n  useEffect(() => {\n    console.log(loans);\n  }, [loans])\n\n  const { \n    currentList, \n    items, \n    goToNextPage, \n    goToPrevPage \n  } = usePagination(currentPage, postsPerPage, clientLoans, setCurrentPage, styles)\n\n  const startApply = () => {\n    setModalOpen(true);\n  }\n\n  return (\n    <div className={styles.loanTable}>\n      { canApply && <Button\n        size=\"sm\" \n        clicked={startApply}\n        bgColor=\"#741763\" \n        color=\"#fff\"\n        className={styles.btn}\n      >\n        Apply for a Loan\n      </Button>}\n      <div className={styles.tableCard}>\n        <Table className={styles.table}>\n          <thead>\n            <tr>\n              <th>Loan ID</th>\n              <th>Monthly Repayment</th>\n              <th>Tenure</th>\n              <th>Status</th>\n              <th>Repayment Source</th>\n              <th>Loan Amount</th>\n              <th>Balance</th>\n            </tr>\n          </thead>\n          { currentList && currentList.length > 0 ? <tbody>\n            { currentList && currentList.map((loan) => {\n              return (\n                <tr>\n                  <td className={styles.loanId}>\n                    <Link to={`/${userRole}/loan/${loan._id}`}>\n                      {loan._id.slice(0, 6)}\n                    </Link>\n                  </td>\n                  <td>{`N${numberWithCommas(loan.monthlyRepayment)}`}</td>\n                  <td>{loan.paymentPeriod}</td>\n                  <td>{_.capitalize(loan.status)}</td>\n                  <td>Salary</td>\n                  <td>{`N${numberWithCommas(loan.amount)}`}</td>\n                  <td>_____</td>\n                </tr>\n              )\n            })}\n          </tbody> : null }\n        </Table>\n        { currentList && currentList.length === 0 ? <div className={styles.nullList}>\n            <TiCancelOutline size=\"6em\" color=\"rgba(116, 23, 99, 0.6)\" />\n          </div> : null }\n        { currentList && currentList.length > 0 ? <div className={styles.tableFooter}>\n          <div className={styles.rowsInput}>\n            <p>Rows per page: </p>\n            <select onChange={(e) => setPostsPerPage(Number(e.currentTarget.value))}>\n              <option value={5} selected>5</option>\n              <option value={10}>10</option>\n              <option value={15}>15</option>\n              <option value={20}>20</option>\n              <option value={10}>25</option>\n              <option value={30}>30</option>\n            </select>\n          </div>\n          <Pagination className={styles.pagination}>\n            <Pagination.Prev onClick={goToPrevPage}/>\n            {items}\n            <Pagination.Next onClick={goToNextPage} />\n          </Pagination>\n        </div> : null }\n      </div>\n      <LoanModal userId={userId} openState={modalOpen} closeHandler={closeModal} />\n    </div>\n  )\n}\n\n\nconst ClientDetails = () => {\n\n  const salesRoute = routes[1];\n  const location = useLocation();\n  const { clientId } = useParams();\n\n  const { \n    state: { userDetails, detailStatus }, \n    getClientDetails,\n    clearErrors\n  } = useContext(UserContext);\n\n  const { state: { user } } = useContext(AuthContext);\n  useEffect(() => {\n    getClientDetails(clientId);\n\n    return () => {\n      console.log('cleanup')\n      clearErrors();\n    }\n  }, [])\n\n  // console.log(userDetails)\n\n\n  const [detailSection, setDetailSection] = useState('biodata');\n\n  const navArray = [\n    {\n      title: \"Biodata\",\n      shortlink: \"biodata\"\n    },\n    {\n      title: \"Next of Kin Info\",\n      shortlink: \"kin\"\n    },\n    {\n      title: \"Bank Info\",\n      shortlink: \"bank\"\n    },\n    {\n      title: \"Employment Info\",\n      shortlink: \"employ\"\n    },\n    {\n      title: \"Loans\",\n      shortlink: \"loans\"\n    },\n  ]\n\n  const setActiveTab = (link) => {\n    setDetailSection(link);\n  }\n\n  return (\n    <Dashboard sidebarRoutes={salesRoute} location={location}>\n      <NavTabs navs={navArray} setActive={setActiveTab} currentTab={detailSection} />\n      { userDetails || !detailStatus  ? \n        <div className={detailSection !== \"loans\" && styles.detailFields}>\n          { detailSection === \"biodata\" && <Biodata data={userDetails && {...userDetails.bioData, ...userDetails.residence}} userId={userDetails?.clientId} /> }\n          { detailSection === \"kin\" && <NextOfKin data={userDetails && { ...userDetails.nextOfKin }} /> }\n          { detailSection === \"bank\" && <Bank data={userDetails && { ...userDetails.bank }} userId={userDetails?.clientId} /> }\n          { detailSection === \"employ\" && <Employer userId={userDetails?.clientId} /> }\n          { detailSection === \"loans\" && <ClientLoan userId={userDetails && userDetails.clientId} canApply={true} userRole={`${user.role}-agent`} /> }\n        </div> :\n        <Loader />\n      }\n    </Dashboard>\n  )\n}\n\n\nexport default ClientDetails;","/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerClientDetails/AuthorizerClientDetails.jsx",["221"],"/home/tga/Desktop/gypsy-capital/src/pages/LoanDetail/LoanDetail.jsx",["222","223","224"],"/home/tga/Desktop/gypsy-capital/src/utils/validateInput.js",["225","226"],"/home/tga/Desktop/gypsy-capital/src/hooks/useNavigateAfterAuth.js",["227"],"/home/tga/Desktop/gypsy-capital/src/components/InputField/InputField.js",[],"/home/tga/Desktop/gypsy-capital/src/components/Button/Button.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/ProgressBar/ProgressBar.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/NavTabs/NavTabs.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/LoanList/LoanList.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/LoanCalculatorForm/LoanCalculatorForm.jsx",["228","229"],"/home/tga/Desktop/gypsy-capital/src/components/StatBox/StatBox.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/LoanModal/LoanModal.jsx",["230","231"],"/home/tga/Desktop/gypsy-capital/src/components/EmployerInfoForm/EmployerInfoForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/ModalForm/ModalForm.jsx",["232","233","234"],"/home/tga/Desktop/gypsy-capital/src/components/OfferLetter/OfferLetterForm.jsx",["235"],"/home/tga/Desktop/gypsy-capital/src/components/AccountSetupModal/AccountSetupModal.jsx",["236","237","238","239","240","241"],"import React, { useContext, useEffect, useMemo, useState, useRef } from 'react';\nimport styles from './AccountSetupModal.module.scss';\nimport { Modal, Row, Col } from 'react-bootstrap';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport { validateInput } from '../../utils/validateInput';\nimport { nigeriaStates } from '../../utils/nigeriaStates';\nimport { Context as BankContext } from '../../context/BankCotext';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport FileUploadButton from '../FileUploadButton/FileUploadButton';\nimport { FaCloudUploadAlt } from 'react-icons/fa';\nimport { toast, ToastContainer } from 'react-toastify';\nimport Loader from '../Loader/Loader';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport BeatLoader from 'react-spinners/BeatLoader';\n\n\nexport const VerifyBvn = ({ submit }) => {\n\n  const [bvn, setBvn] = useState('');\n  const { state: { loading } } = useContext(UserContext);\n\n  const submitBvn = () => {\n    if(bvn) {\n      submit(bvn);\n    }\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Verify BVN</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row>\n            <Col>\n              <InputField \n                type=\"text\"\n                nameAttr=\"otp\"\n                label=\"Enter Client's BVN\"\n                value={bvn}\n                changed={(val) => {\n                  setBvn(val)\n                }}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button\n          fullWidth\n          bgColor=\"#741763\" \n          size=\"lg\" \n          clicked={submitBvn}\n          color=\"#EBEBEB\"\n          loading={loading}\n          disabled={loading}\n        >\n          Verify\n        </Button>\n        <p className={styles.hint}>To get your BVN, Dial *565*0#</p>\n      </Modal.Footer>\n    </>\n  )\n}\n\n\nexport const PersonalInfo = ({ submit }) => {\n\n  const { state: { userDetails }, getClientDetails } = useContext(UserContext);\n  const { state: { currentAddedUser} } = useContext(AuthContext);\n\n\n  const [biodata, setBiodata] = useState({\n    fullName: '',\n    dateOfBirth: '',\n    bvnPhoneNo: '',\n    email: '',\n    phoneNo: '',\n    altPhone: '',\n    gender: ''\n  });\n\n  const [biodataErrors, setBiodataErrors] = useState({\n    fullName: null,\n    dateOfBirth: null,\n    bvnPhoneNo: null,\n    email: null,\n    phoneNo: null,\n    altPhone: null,\n    gender: null\n  });\n\n\n  useEffect(() => {\n    const { user_id } = currentAddedUser;\n    getClientDetails(user_id);\n  }, []);\n\n  useEffect(() => {\n    if(userDetails) {\n      const { bioData } = userDetails;\n      setBiodata({ ...biodata, \n        fullName: `${bioData.firstName} ${bioData.lastName}`,\n        email: bioData.email,\n        phoneNo: bioData.phoneNumber.replace('234', '0'),\n        dateOfBirth: bioData.DOB,\n        bvnPhoneNo: bioData.bvnPhoneNumber\n      })\n    }\n  }, [currentAddedUser, userDetails]);\n\n\n  const addPersonalInfo = () => {\n    const validated = validateInput(biodata, setBiodataErrors);\n    if(validated) {\n      submit(biodata);\n    }\n  }\n  if(!userDetails) {\n    return <Loader />\n  }\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Personal Info</h2>\n        </Modal.Title>\n        {/* <p className={styles.subtitle}>Personal Info</p> */}\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Full name\"\n                type=\"text\"\n                nameAttr=\"fullname\"\n                value={biodata.fullName}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, fullName: null })\n                  setBiodata({ ...biodata, fullName: val})\n                }}\n                error={biodataErrors.fullName && biodataErrors.fullName}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Date of Birth\"\n                type=\"text\"\n                nameAttr=\"dob\"\n                value={biodata.dateOfBirth}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, dateOfBirth: null })\n                  setBiodata({ ...biodata, dateOfBirth: val})\n                }}\n                error={biodataErrors.dateOfBirth && biodataErrors.dateOfBirth}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"BVN-linked Phone Number\"\n                type=\"text\"\n                nameAttr=\"bvnPhoneNo\"\n                value={biodata.bvnPhoneNo}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, bvnPhoneNo: null })\n                  setBiodata({ ...biodata, bvnPhoneNo: val})\n                }}\n                error={biodataErrors.bvnPhoneNo && biodataErrors.bvnPhoneNo}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Email\"\n                type=\"email\"\n                nameAttr=\"email\"\n                value={biodata.email}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, email: null })\n                  setBiodata({ ...biodata, email: val})\n                }}\n                error={biodataErrors.email && biodataErrors.email}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Phone Number\"\n                type=\"text\"\n                nameAttr=\"PhoneNo\"\n                value={biodata.phoneNo}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, phoneNo: null })\n                  setBiodata({ ...biodata, phoneNo: val})\n                }}\n                error={biodataErrors.phoneNo && biodataErrors.phoneNo}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Alternative Phone Number\"\n                type=\"text\"\n                nameAttr=\"altPhoneNo\"\n                value={biodata.altPhone}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, altPhone: null })\n                  setBiodata({ ...biodata, altPhone: val})\n                }}\n                error={biodataErrors.altPhone && biodataErrors.altPhone}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <InputField \n                label=\"Gender\"\n                type=\"select\"\n                options={['Female', 'Male', 'Other']}\n                nameAttr=\"gender\"\n                value={biodata.gender}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, gender: null })\n                  setBiodata({ ...biodata, gender: val})\n                }}\n                error={biodataErrors.gender && biodataErrors.gender}\n              />\n            </Col>\n          </Row>\n          <Modal.Footer>\n            <Button \n              className=\"mt-4\" \n              clicked={addPersonalInfo} \n              fullWidth \n              bgColor=\"#741763\" \n              size=\"lg\" \n              color=\"#EBEBEB\"\n            >\n              Save & Continue\n            </Button>\n          </Modal.Footer>\n        </div>\n      </Modal.Body>\n    </>\n  )\n}\n\n\nexport const Residence = ({ submit }) => {\n\n  const [residentialInfo, setResidentialInfo] = useState({\n    street: '',\n    city: '',\n    state: ''\n  });\n\n  const [residentialErrors, setResidentialErrors] = useState({\n    street: null,\n    city: null,\n    state: null\n  });\n\n  const addResidence = () => {\n    const validated = validateInput(residentialInfo, setResidentialErrors);\n    if(validated) {\n      submit(residentialInfo);\n    }\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Residential Address</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Street\"\n                type=\"text\"\n                nameAttr=\"residentStreet\"\n                value={residentialInfo.street}\n                changed={(val) => {\n                  setResidentialErrors({ ...residentialErrors, street: null })\n                  setResidentialInfo({ ...residentialInfo, street: val})\n                }}\n                error={residentialErrors.street && residentialErrors.street}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"City\"\n                type=\"text\"\n                nameAttr=\"city\"\n                value={residentialInfo.city}\n                changed={(val) => {\n                  setResidentialErrors({ ...residentialErrors, city: null })\n                  setResidentialInfo({ ...residentialInfo, city: val})\n                }}\n                error={residentialErrors.city && residentialErrors.city}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"State\"\n                type=\"select\"\n                options={nigeriaStates}\n                nameAttr=\"state\"\n                value={residentialInfo.state}\n                changed={(val) => {\n                  setResidentialErrors({ ...residentialErrors, state: null })\n                  setResidentialInfo({ ...residentialInfo, state: val})\n                }}\n                error={residentialErrors.state && residentialErrors.state}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addResidence} \n          fullWidth \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\n\nexport const NextOfKin = ({ submit }) => {\n\n  const [kinInfo, setKinInfo] = useState({\n    fullName: '',\n    relationship: '',\n    email: '',\n    phoneNo: '',\n    address: ''\n  });\n\n  const [kinErrors, setKinErrors] = useState({\n    fullName: null,\n    relationship: null,\n    email: null,\n    phoneNo: null,\n    address: null\n  });\n\n  const addNextOfKin = () => {\n    const validated = validateInput(kinInfo, setKinErrors);\n    if(validated) {\n      submit(kinInfo);\n    }\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Next of Kin Info</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Full name\"\n                type=\"text\"\n                nameAttr=\"kinFullname\"\n                value={kinInfo.fullName}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, fullName: null })\n                  setKinInfo({ ...kinInfo, fullName: val})\n                }}\n                error={kinErrors.fullName && kinErrors.fullName}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Relationship\"\n                type=\"text\"\n                nameAttr=\"kinRelationship\"\n                value={kinInfo.relationship}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, relationship: null })\n                  setKinInfo({ ...kinInfo, relationship: val})\n                }}\n                error={kinErrors.relationship && kinErrors.relationship}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Email Address\"\n                type=\"email\"\n                nameAttr=\"kinEmail\"\n                value={kinInfo.email}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, email: null })\n                  setKinInfo({ ...kinInfo, email: val})\n                }}\n                error={kinErrors.email && kinErrors.email}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Phone Number\"\n                type=\"text\"\n                nameAttr=\"kinPhone\"\n                value={kinInfo.phoneNo}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, phoneNo: null })\n                  setKinInfo({ ...kinInfo, phoneNo: val})\n                }}\n                error={kinErrors.phoneNo && kinErrors.phoneNo}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Residential Address\"\n                type=\"text\"\n                nameAttr=\"kinAddress\"\n                placeholder=\"Street address to the nearest bus stop\"\n                value={kinInfo.address}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, address: null })\n                  setKinInfo({ ...kinInfo, address: val})\n                }}  \n                error={kinErrors.address && kinErrors.address}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addNextOfKin} \n          fullWidth \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\nexport const BankInfo = ({ submit }) => {\n\n  const { state: { loading } } = useContext(UserContext);\n\n  const [bankInfo, setBankInfo] = useState({\n    bankName: '',\n    accountType: '',\n    accountNumber: '',\n    accountName: ''\n  });\n\n  const [bankInfoErrors, setBankInfoErrors] = useState({\n    bankName: null,\n    accountType: null,\n    accountNumber: null,\n    accountName: null\n  });\n\n  const { \n    state: { bankList, userBankDetails, bankLoading }, \n    getBankList,\n    verifyBankInfo\n  } = useContext(BankContext);\n\n  useEffect(() => {\n      getBankList();\n  }, []);\n\n  const bankNames = useMemo(() => {\n    return bankList ? \n      bankList.map((bank) => bank.name) :\n      []\n  }, [bankList]);\n\n  useEffect(() => {\n    if(bankInfo.accountNumber.length === 10 && bankInfo.bankName) {\n      const bank = bankList.find(bank => bank.name.toLowerCase() === bankInfo.bankName);\n      const bankCode = bank.code;\n      console.log(bankCode)\n      verifyBankInfo(bankInfo.accountNumber, bankCode)\n    }\n  }, [bankInfo.accountNumber, bankInfo.bankName])\n\n\n  useEffect(() => {\n    console.log(userBankDetails);\n    if(userBankDetails) {\n      setBankInfo({ ...bankInfo, accountName: userBankDetails.account_name })\n    }\n  }, [userBankDetails]);\n\n  const addBankInfo = () => {\n    const validated = validateInput(bankInfo, setBankInfoErrors);\n    if(validated) {\n      submit(bankInfo);\n    }\n  }\n\n  return(\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Bank Info</h2>\n          <p className={styles.subtitle}>Add a bank account where we can send investment proceeds or loan requests to.</p>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"select\"\n                label=\"Bank\"\n                options={bankNames}\n                nameAttr=\"bank\"\n                value={bankInfo.bankName}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, bankName: null })\n                  setBankInfo({ ...bankInfo, bankName: val})\n                }}\n                error={bankInfoErrors.bankName && bankInfoErrors.bankName}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Account Type\"\n                type=\"select\"\n                options={[\"Savings\", \"Current\"]}\n                nameAttr=\"acountType\"\n                value={bankInfo.accountType}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, accountType: null })\n                  setBankInfo({ ...bankInfo, accountType: val})\n                }}\n                error={bankInfoErrors.accountType && bankInfoErrors.accountType}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"text\"\n                label=\"Account Number\"\n                nameAttr=\"accountNo\"\n                value={bankInfo.accountNumber}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, accountNumber: null })\n                  setBankInfo({ ...bankInfo, accountNumber: val})\n                }}\n                error={bankInfoErrors.accountNumber && bankInfoErrors.accountNumber}\n              />\n            </Col>\n            <Col>\n              { !bankLoading ? <InputField \n                label=\"Account Name\"\n                type=\"text\"\n                nameAttr=\"accountName\"\n                value={bankInfo.accountName}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, accountName: null })\n                  setBankInfo({ ...bankInfo, accountName: val})\n                }}\n                error={bankInfoErrors.accountName && bankInfoErrors.accountName}\n              /> : \n              <div className={styles.loaderWrapper}>\n                <BeatLoader color=\"#741763\" size={10} />\n              </div>\n              }\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addBankInfo} \n          fullWidth \n          loading={loading}\n          disabled={loading}\n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\nexport const IdentityForm = ({ submit }) => {\n\n  const { state: { loading } } = useContext(UserContext);\n  const idFileRef = useRef();\n  const passportFileRef= useRef();\n\n  const [idType, setIdType] = useState('');\n\n  const addIdentityInfo = () => {\n    if(idFileRef.current.files.length > 0) {\n      if(passportFileRef.current.files.length > 0) {\n        if(idType) {\n          const idFile = idFileRef.current.files[0];\n          const passportFile = passportFileRef.current.files[0];\n          submit(idFile, passportFile, idType);\n        }\n      } else {\n        toast.error(\"Please upload a passport photograph of yourself\")\n      }\n    } else {\n      toast.error(\"Please upload a verified identification card\")\n    }\n  }\n\n  return (\n    <>\n      <ToastContainer position=\"top-center\" />\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Identity</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <div className={styles.validId}>\n            <p className={styles.validID}>Upload a valid government issued Identification</p>\n            <InputField \n              type=\"select\"\n              options={['International Passport', \"Driver's License\", 'Voters Card', 'National Identity Card']}\n              nameAttr=\"identityType\"\n              value={idType}\n              changed={(val) => setIdType(val)}\n            />\n            <FileUploadButton \n              label=\"Choose File\" \n              icon={<FaCloudUploadAlt className=\"ml-3\" size=\"1.1em\" />}\n              id=\"id-upload\" \n              className=\"mt-3\"\n              fileRef={idFileRef}\n              fullwidth\n            />\n          </div>\n          <div className={styles.passportVerify}>\n            <p className={styles.passportImg}>Please upload a clear and resent passport photograph.</p>\n            <FileUploadButton \n              label=\"Choose File\" \n              icon={<FaCloudUploadAlt className=\"ml-3\" size=\"1.1em\" />}\n              id=\"passport-upload\"  \n              fileRef={passportFileRef}\n              fullwidth\n            />\n          </div>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addIdentityInfo} \n          fullWidth \n          loading={loading}\n          disabled={loading}\n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\n\nexport const OnboardSuccess = ({ close }) => {\n\n  useEffect(() => {\n    setTimeout(() => {\n      close();\n    }, 3000);\n  }, []);\n\n  return (\n    <>\n      <Modal.Body>\n        <div className={styles.onboard}>\n          <FaCheckCircle size=\"4em\" color=\"#741763\" />\n          <h4>User successfully onboarded.</h4>\n          <Button\n            className=\"mt-4\" \n            clicked={close} \n            bgColor=\"#741763\" \n            size=\"sm\" \n            color=\"#EBEBEB\"\n          >\n            Continue\n          </Button>\n        </div>\n      </Modal.Body>\n    </>\n  )\n}","/home/tga/Desktop/gypsy-capital/src/components/Dashboard/Dashboard.jsx",["242"],"/home/tga/Desktop/gypsy-capital/src/pages/pages.js",[],"/home/tga/Desktop/gypsy-capital/src/context/RepaymentContext.js",["243"],"/home/tga/Desktop/gypsy-capital/src/utils/history.js",[],"/home/tga/Desktop/gypsy-capital/src/context/createPersistDataContext.js",["244"],"/home/tga/Desktop/gypsy-capital/src/api/gypsy-web.js",[],"/home/tga/Desktop/gypsy-capital/src/pages/CreditReport/CreditReport.jsx",["245","246","247"],"/home/tga/Desktop/gypsy-capital/src/pages/ContactPage/ContactPage.jsx",["248"],"/home/tga/Desktop/gypsy-capital/src/pages/AboutUs/AboutUs.jsx",["249","250","251"],"/home/tga/Desktop/gypsy-capital/src/pages/ProcessorDashboard/ProcessorDashboard.jsx",["252"],"/home/tga/Desktop/gypsy-capital/src/pages/ProcessorLoanDetails/ProcessorLoanDetails.jsx",["253","254","255","256","257","258","259","260","261","262","263","264","265"],"/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerLoanDetails/AuthorizerLoanDetails.jsx",["266","267","268","269","270"],"/home/tga/Desktop/gypsy-capital/src/pages/AuthorizerLoans/AuthorizerLoans.jsx",["271","272"],"/home/tga/Desktop/gypsy-capital/src/utils/nigeriaStates.js",[],"/home/tga/Desktop/gypsy-capital/src/components/NavBar/NavBar.jsx",["273"],"/home/tga/Desktop/gypsy-capital/src/components/ScrollToTopOnMount/ScrollToTopOnMount.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/ProfileView/ProfileView.jsx",["274","275"],"/home/tga/Desktop/gypsy-capital/src/components/CustomDatePicker/CustomDatePicker.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/ProcessOffer/ProcessOffer.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/FaqSection/FaqSection.jsx",["276"],"/home/tga/Desktop/gypsy-capital/src/components/LoanContactForm/LoanContactForm.jsx",["277"],"/home/tga/Desktop/gypsy-capital/src/components/OfferLetter/OfferLetter.jsx",[],{"ruleId":"278","replacedBy":"279"},{"ruleId":"280","replacedBy":"281"},{"ruleId":"282","severity":1,"message":"283","line":1,"column":1,"nodeType":"284","endLine":7,"endColumn":2},{"ruleId":"285","severity":1,"message":"286","line":29,"column":6,"nodeType":"287","endLine":29,"endColumn":13,"suggestions":"288"},{"ruleId":"289","severity":1,"message":"290","line":16,"column":11,"nodeType":"291","messageId":"292","endLine":16,"endColumn":15},{"ruleId":"285","severity":1,"message":"293","line":31,"column":6,"nodeType":"287","endLine":31,"endColumn":8,"suggestions":"294"},{"ruleId":"285","severity":1,"message":"293","line":23,"column":6,"nodeType":"287","endLine":23,"endColumn":8,"suggestions":"295"},{"ruleId":"285","severity":1,"message":"296","line":54,"column":6,"nodeType":"287","endLine":54,"endColumn":12,"suggestions":"297"},{"ruleId":"285","severity":1,"message":"298","line":184,"column":6,"nodeType":"287","endLine":184,"endColumn":12,"suggestions":"299"},{"ruleId":"285","severity":1,"message":"300","line":273,"column":6,"nodeType":"287","endLine":273,"endColumn":12,"suggestions":"301"},{"ruleId":"285","severity":1,"message":"302","line":285,"column":6,"nodeType":"287","endLine":285,"endColumn":17,"suggestions":"303"},{"ruleId":"285","severity":1,"message":"304","line":417,"column":6,"nodeType":"287","endLine":417,"endColumn":17,"suggestions":"305"},{"ruleId":"285","severity":1,"message":"293","line":534,"column":6,"nodeType":"287","endLine":534,"endColumn":8,"suggestions":"306"},{"ruleId":"285","severity":1,"message":"307","line":647,"column":6,"nodeType":"287","endLine":647,"endColumn":8,"suggestions":"308"},{"ruleId":"285","severity":1,"message":"309","line":36,"column":6,"nodeType":"287","endLine":36,"endColumn":8,"suggestions":"310"},{"ruleId":"285","severity":1,"message":"311","line":49,"column":6,"nodeType":"287","endLine":49,"endColumn":12,"suggestions":"312"},{"ruleId":"285","severity":1,"message":"313","line":219,"column":6,"nodeType":"287","endLine":219,"endColumn":8,"suggestions":"314"},{"ruleId":"285","severity":1,"message":"315","line":330,"column":6,"nodeType":"287","endLine":330,"endColumn":8,"suggestions":"316"},{"ruleId":"317","severity":1,"message":"318","line":2,"column":31,"nodeType":"319","messageId":"320","endLine":2,"endColumn":32,"suggestions":"321"},{"ruleId":"317","severity":1,"message":"318","line":2,"column":56,"nodeType":"319","messageId":"320","endLine":2,"endColumn":57,"suggestions":"322"},{"ruleId":"282","severity":1,"message":"283","line":7,"column":1,"nodeType":"284","endLine":29,"endColumn":2},{"ruleId":"289","severity":1,"message":"323","line":34,"column":5,"nodeType":"291","messageId":"292","endLine":34,"endColumn":14},{"ruleId":"285","severity":1,"message":"324","line":107,"column":6,"nodeType":"287","endLine":107,"endColumn":70,"suggestions":"325"},{"ruleId":"285","severity":1,"message":"326","line":121,"column":6,"nodeType":"287","endLine":121,"endColumn":8,"suggestions":"327"},{"ruleId":"285","severity":1,"message":"286","line":176,"column":6,"nodeType":"287","endLine":176,"endColumn":13,"suggestions":"328"},{"ruleId":"289","severity":1,"message":"329","line":77,"column":9,"nodeType":"291","messageId":"292","endLine":77,"endColumn":19},{"ruleId":"285","severity":1,"message":"286","line":375,"column":6,"nodeType":"287","endLine":375,"endColumn":13,"suggestions":"330"},{"ruleId":"285","severity":1,"message":"331","line":387,"column":6,"nodeType":"287","endLine":387,"endColumn":17,"suggestions":"332"},{"ruleId":"285","severity":1,"message":"333","line":72,"column":6,"nodeType":"287","endLine":72,"endColumn":8,"suggestions":"334"},{"ruleId":"285","severity":1,"message":"335","line":103,"column":6,"nodeType":"287","endLine":103,"endColumn":8,"suggestions":"336"},{"ruleId":"285","severity":1,"message":"296","line":116,"column":6,"nodeType":"287","endLine":116,"endColumn":37,"suggestions":"337"},{"ruleId":"285","severity":1,"message":"338","line":500,"column":6,"nodeType":"287","endLine":500,"endColumn":8,"suggestions":"339"},{"ruleId":"285","severity":1,"message":"340","line":515,"column":6,"nodeType":"287","endLine":515,"endColumn":49,"suggestions":"341"},{"ruleId":"285","severity":1,"message":"342","line":523,"column":6,"nodeType":"287","endLine":523,"endColumn":23,"suggestions":"343"},{"ruleId":"285","severity":1,"message":"326","line":713,"column":6,"nodeType":"287","endLine":713,"endColumn":8,"suggestions":"344"},{"ruleId":"345","severity":1,"message":"346","line":92,"column":21,"nodeType":"347","endLine":92,"endColumn":74},{"ruleId":"289","severity":1,"message":"348","line":69,"column":13,"nodeType":"291","messageId":"292","endLine":69,"endColumn":25},{"ruleId":"282","severity":1,"message":"283","line":4,"column":1,"nodeType":"284","endLine":34,"endColumn":2},{"ruleId":"289","severity":1,"message":"349","line":2,"column":8,"nodeType":"291","messageId":"292","endLine":2,"endColumn":14},{"ruleId":"289","severity":1,"message":"350","line":5,"column":25,"nodeType":"291","messageId":"292","endLine":5,"endColumn":29},{"ruleId":"289","severity":1,"message":"351","line":10,"column":11,"nodeType":"291","messageId":"292","endLine":10,"endColumn":14},{"ruleId":"352","severity":1,"message":"353","line":33,"column":11,"nodeType":"347","endLine":40,"endColumn":12},{"ruleId":"354","severity":1,"message":"355","line":56,"column":15,"nodeType":"347","endLine":56,"endColumn":26},{"ruleId":"354","severity":1,"message":"355","line":59,"column":15,"nodeType":"347","endLine":59,"endColumn":26},{"ruleId":"354","severity":1,"message":"355","line":62,"column":15,"nodeType":"347","endLine":62,"endColumn":26},{"ruleId":"285","severity":1,"message":"356","line":39,"column":6,"nodeType":"287","endLine":39,"endColumn":8,"suggestions":"357"},{"ruleId":"289","severity":1,"message":"358","line":13,"column":21,"nodeType":"291","messageId":"292","endLine":13,"endColumn":32},{"ruleId":"289","severity":1,"message":"359","line":16,"column":20,"nodeType":"291","messageId":"292","endLine":16,"endColumn":25},{"ruleId":"289","severity":1,"message":"360","line":19,"column":8,"nodeType":"291","messageId":"292","endLine":19,"endColumn":9},{"ruleId":"289","severity":1,"message":"361","line":125,"column":14,"nodeType":"291","messageId":"292","endLine":125,"endColumn":30},{"ruleId":"289","severity":1,"message":"362","line":129,"column":5,"nodeType":"291","messageId":"292","endLine":129,"endColumn":17},{"ruleId":"285","severity":1,"message":"363","line":232,"column":6,"nodeType":"287","endLine":232,"endColumn":8,"suggestions":"364"},{"ruleId":"285","severity":1,"message":"365","line":236,"column":6,"nodeType":"287","endLine":236,"endColumn":17,"suggestions":"366"},{"ruleId":"285","severity":1,"message":"367","line":243,"column":6,"nodeType":"287","endLine":243,"endColumn":23,"suggestions":"368"},{"ruleId":"285","severity":1,"message":"369","line":256,"column":6,"nodeType":"287","endLine":256,"endColumn":22,"suggestions":"370"},{"ruleId":"285","severity":1,"message":"371","line":263,"column":6,"nodeType":"287","endLine":263,"endColumn":13,"suggestions":"372"},{"ruleId":"285","severity":1,"message":"373","line":270,"column":6,"nodeType":"287","endLine":270,"endColumn":21,"suggestions":"374"},{"ruleId":"285","severity":1,"message":"375","line":299,"column":6,"nodeType":"287","endLine":305,"endColumn":4,"suggestions":"376"},{"ruleId":"285","severity":1,"message":"315","line":741,"column":6,"nodeType":"287","endLine":741,"endColumn":8,"suggestions":"377"},{"ruleId":"285","severity":1,"message":"338","line":48,"column":6,"nodeType":"287","endLine":48,"endColumn":8,"suggestions":"378"},{"ruleId":"285","severity":1,"message":"379","line":59,"column":6,"nodeType":"287","endLine":59,"endColumn":20,"suggestions":"380"},{"ruleId":"285","severity":1,"message":"371","line":66,"column":6,"nodeType":"287","endLine":66,"endColumn":13,"suggestions":"381"},{"ruleId":"285","severity":1,"message":"382","line":73,"column":6,"nodeType":"287","endLine":73,"endColumn":23,"suggestions":"383"},{"ruleId":"285","severity":1,"message":"315","line":161,"column":6,"nodeType":"287","endLine":161,"endColumn":8,"suggestions":"384"},{"ruleId":"289","severity":1,"message":"349","line":6,"column":8,"nodeType":"291","messageId":"292","endLine":6,"endColumn":14},{"ruleId":"285","severity":1,"message":"293","line":22,"column":6,"nodeType":"287","endLine":22,"endColumn":8,"suggestions":"385"},{"ruleId":"289","severity":1,"message":"386","line":10,"column":9,"nodeType":"291","messageId":"292","endLine":10,"endColumn":17},{"ruleId":"285","severity":1,"message":"387","line":38,"column":6,"nodeType":"287","endLine":38,"endColumn":8,"suggestions":"388"},{"ruleId":"345","severity":1,"message":"346","line":103,"column":29,"nodeType":"347","endLine":103,"endColumn":72},{"ruleId":"285","severity":1,"message":"389","line":42,"column":6,"nodeType":"287","endLine":42,"endColumn":8,"suggestions":"390"},{"ruleId":"289","severity":1,"message":"391","line":39,"column":22,"nodeType":"291","messageId":"292","endLine":39,"endColumn":35},"no-native-reassign",["392"],"no-negated-in-lhs",["393"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clearErrors'. Either include it or remove the dependency array.","ArrayExpression",["394"],"no-unused-vars","'path' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'retrieveClientLoans'. Either include it or remove the dependency array.",["395"],["396"],"React Hook useEffect has a missing dependency: 'biodata'. Either include it or remove the dependency array. You can also do a functional update 'setBiodata(b => ...)' if you only need 'biodata' in the 'setBiodata' call.",["397"],"React Hook useEffect has a missing dependency: 'nextOfKin'. Either include it or remove the dependency array. You can also do a functional update 'setNextOfKin(n => ...)' if you only need 'nextOfKin' in the 'setNextOfKin' call.",["398"],"React Hook useEffect has a missing dependency: 'disburseBank'. Either include it or remove the dependency array. You can also do a functional update 'setDisburseBank(d => ...)' if you only need 'disburseBank' in the 'setDisburseBank' call.",["399"],"React Hook useEffect has a missing dependency: 'salaryBank'. Either include it or remove the dependency array. You can also do a functional update 'setSalaryBank(s => ...)' if you only need 'salaryBank' in the 'setSalaryBank' call.",["400"],"React Hook useEffect has missing dependencies: 'OfficeAddress' and 'employerInfo'. Either include them or remove the dependency array. You can also do a functional update 'setEmployerInfo(e => ...)' if you only need 'employerInfo' in the 'setEmployerInfo' call.",["401"],["402"],"React Hook useEffect has missing dependencies: 'clearErrors', 'clientId', and 'getClientDetails'. Either include them or remove the dependency array.",["403"],"React Hook useEffect has missing dependencies: 'clientId' and 'getClientDetails'. Either include them or remove the dependency array.",["404"],"React Hook useEffect has a missing dependency: 'basicInfo'. Either include it or remove the dependency array. You can also do a functional update 'setBasicInfo(b => ...)' if you only need 'basicInfo' in the 'setBasicInfo' call.",["405"],"React Hook useEffect has missing dependencies: 'clearError', 'loanId', and 'verifyRepaymentStatus'. Either include them or remove the dependency array.",["406"],"React Hook useEffect has missing dependencies: 'loanId' and 'retrieveLoan'. Either include them or remove the dependency array.",["407"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["408","409"],["410","411"],"'loanApply' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loanCalcData'. Either include it or remove the dependency array. You can also do a functional update 'setLoanCalcData(l => ...)' if you only need 'loanCalcData' in the 'setLoanCalcData' call.",["412"],"React Hook useEffect has a missing dependency: 'close'. Either include it or remove the dependency array. If 'close' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["413"],["414"],"'emptyState' is assigned a value but never used.",["415"],"React Hook useEffect has a missing dependency: 'clearErr'. Either include it or remove the dependency array.",["416"],"React Hook useEffect has missing dependencies: 'loanData?.approvedAmount', 'loanData?.client?.firstName', 'loanData?.client?.lastName', 'loanData?.employment?.sector', 'loanData?.loanPurpose', 'loanData?.monthlyRepayment', 'loanData?.residence?.street', and 'offerFormData'. Either include them or remove the dependency array. You can also do a functional update 'setOfferFormData(o => ...)' if you only need 'offerFormData' in the 'setOfferFormData' call.",["417"],"React Hook useEffect has missing dependencies: 'currentAddedUser' and 'getClientDetails'. Either include them or remove the dependency array.",["418"],["419"],"React Hook useEffect has a missing dependency: 'getBankList'. Either include it or remove the dependency array.",["420"],"React Hook useEffect has missing dependencies: 'bankList' and 'verifyBankInfo'. Either include them or remove the dependency array.",["421"],"React Hook useEffect has a missing dependency: 'bankInfo'. Either include it or remove the dependency array. You can also do a functional update 'setBankInfo(b => ...)' if you only need 'bankInfo' in the 'setBankInfo' call.",["422"],["423"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'errorMessage' is assigned a value but never used.","'styles' is defined but never used.","'Link' is defined but never used.","'url' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'getClientListForRole' and 'retrieveClientLoans'. Either include them or remove the dependency array.",["424"],"'BankContext' is defined but never used.","'Modal' is defined but never used.","'_' is defined but never used.","'approveLoanError' is assigned a value but never used.","'disburseLoan' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loanData', 'loanId', 'mappedRole', and 'setupData'. Either include them or remove the dependency array. You can also do a functional update 'setSetupData(s => ...)' if you only need 'setupData' in the 'setSetupData' call.",["425"],"React Hook useEffect has a missing dependency: 'loanId'. Either include it or remove the dependency array.",["426"],"React Hook useEffect has a missing dependency: 'resetRepaymentStatus'. Either include it or remove the dependency array.",["427"],"React Hook useEffect has missing dependencies: 'loanData', 'mappedRole', and 'resetApprovalStatus'. Either include them or remove the dependency array.",["428"],"React Hook useEffect has a missing dependency: 'clearError'. Either include it or remove the dependency array.",["429"],"React Hook useEffect has a missing dependency: 'clearApprovalError'. Either include it or remove the dependency array.",["430"],"React Hook useEffect has missing dependencies: 'loanData?.monthlySalary' and 'setupData'. Either include them or remove the dependency array. You can also do a functional update 'setSetupData(s => ...)' if you only need 'setupData' in the 'setSetupData' call.",["431"],["432"],["433"],"React Hook useEffect has missing dependencies: 'disburseData' and 'loanData.approvedAmount'. Either include them or remove the dependency array. You can also do a functional update 'setDisburseData(d => ...)' if you only need 'disburseData' in the 'setDisburseData' call.",["434"],["435"],"React Hook useEffect has a missing dependency: 'resetDisburseStatus'. Either include it or remove the dependency array.",["436"],["437"],["438"],"'location' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getClientDetails' and 'user.user_id'. Either include them or remove the dependency array.",["439"],"React Hook useEffect has a missing dependency: 'returnNumber'. Either include it or remove the dependency array. If 'setFaqs' needs the current value of 'returnNumber', you can also switch to useReducer instead of useState and read 'returnNumber' in the reducer.",["440"],"'setLgaLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},{"desc":"443","fix":"445"},{"desc":"446","fix":"447"},{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"443","fix":"456"},{"desc":"457","fix":"458"},{"desc":"459","fix":"460"},{"desc":"461","fix":"462"},{"desc":"463","fix":"464"},{"desc":"465","fix":"466"},{"messageId":"467","fix":"468","desc":"469"},{"messageId":"470","fix":"471","desc":"472"},{"messageId":"467","fix":"473","desc":"469"},{"messageId":"470","fix":"474","desc":"472"},{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},{"desc":"441","fix":"479"},{"desc":"441","fix":"480"},{"desc":"481","fix":"482"},{"desc":"483","fix":"484"},{"desc":"485","fix":"486"},{"desc":"487","fix":"488"},{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"desc":"493","fix":"494"},{"desc":"477","fix":"495"},{"desc":"496","fix":"497"},{"desc":"498","fix":"499"},{"desc":"500","fix":"501"},{"desc":"502","fix":"503"},{"desc":"504","fix":"505"},{"desc":"506","fix":"507"},{"desc":"508","fix":"509"},{"desc":"510","fix":"511"},{"desc":"465","fix":"512"},{"desc":"489","fix":"513"},{"desc":"514","fix":"515"},{"desc":"506","fix":"516"},{"desc":"517","fix":"518"},{"desc":"465","fix":"519"},{"desc":"443","fix":"520"},{"desc":"521","fix":"522"},{"desc":"523","fix":"524"},"Update the dependencies array to be: [clearErrors, error]",{"range":"525","text":"526"},"Update the dependencies array to be: [retrieveClientLoans]",{"range":"527","text":"528"},{"range":"529","text":"528"},"Update the dependencies array to be: [biodata, data]",{"range":"530","text":"531"},"Update the dependencies array to be: [data, nextOfKin]",{"range":"532","text":"533"},"Update the dependencies array to be: [data, disburseBank]",{"range":"534","text":"535"},"Update the dependencies array to be: [loanDeets, salaryBank]",{"range":"536","text":"537"},"Update the dependencies array to be: [OfficeAddress, employerInfo, loanDeets]",{"range":"538","text":"539"},{"range":"540","text":"528"},"Update the dependencies array to be: [clearErrors, clientId, getClientDetails]",{"range":"541","text":"542"},"Update the dependencies array to be: [clientId, getClientDetails]",{"range":"543","text":"544"},"Update the dependencies array to be: [basicInfo, data]",{"range":"545","text":"546"},"Update the dependencies array to be: [clearError, loanId, verifyRepaymentStatus]",{"range":"547","text":"548"},"Update the dependencies array to be: [loanId, retrieveLoan]",{"range":"549","text":"550"},"removeEscape",{"range":"551","text":"552"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"553","text":"554"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"555","text":"552"},{"range":"556","text":"554"},"Update the dependencies array to be: [monthlySalary, loanAmount, installmentPeriod, loanCalcData.dti, loanCalcData]",{"range":"557","text":"558"},"Update the dependencies array to be: [close]",{"range":"559","text":"560"},{"range":"561","text":"526"},{"range":"562","text":"526"},"Update the dependencies array to be: [clearErr, userError]",{"range":"563","text":"564"},"Update the dependencies array to be: [loanData?.approvedAmount, loanData?.client?.firstName, loanData?.client?.lastName, loanData?.employment?.sector, loanData?.loanPurpose, loanData?.monthlyRepayment, loanData?.residence?.street, offerFormData]",{"range":"565","text":"566"},"Update the dependencies array to be: [currentAddedUser, getClientDetails]",{"range":"567","text":"568"},"Update the dependencies array to be: [biodata, currentAddedUser, userDetails]",{"range":"569","text":"570"},"Update the dependencies array to be: [getBankList]",{"range":"571","text":"572"},"Update the dependencies array to be: [bankInfo.accountNumber, bankInfo.bankName, bankList, verifyBankInfo]",{"range":"573","text":"574"},"Update the dependencies array to be: [bankInfo, userBankDetails]",{"range":"575","text":"576"},{"range":"577","text":"560"},"Update the dependencies array to be: [getClientListForRole, retrieveClientLoans]",{"range":"578","text":"579"},"Update the dependencies array to be: [loanData, loanId, mappedRole, setupData]",{"range":"580","text":"581"},"Update the dependencies array to be: [loanId, setupData]",{"range":"582","text":"583"},"Update the dependencies array to be: [repaymentStatus, resetRepaymentStatus]",{"range":"584","text":"585"},"Update the dependencies array to be: [approvedStatus, loanData, mappedRole, resetApprovalStatus]",{"range":"586","text":"587"},"Update the dependencies array to be: [clearError, error]",{"range":"588","text":"589"},"Update the dependencies array to be: [approvalError, clearApprovalError]",{"range":"590","text":"591"},"Update the dependencies array to be: [approvedInterest, approvedLoanAmount, approvedTenure, adminFee, setupData.approvedDti, setupData, loanData?.monthlySalary]",{"range":"592","text":"593"},{"range":"594","text":"550"},{"range":"595","text":"572"},"Update the dependencies array to be: [disburseBank, disburseData, loanData.approvedAmount]",{"range":"596","text":"597"},{"range":"598","text":"589"},"Update the dependencies array to be: [disbursedStatus, resetDisburseStatus]",{"range":"599","text":"600"},{"range":"601","text":"550"},{"range":"602","text":"528"},"Update the dependencies array to be: [getClientDetails, user.user_id]",{"range":"603","text":"604"},"Update the dependencies array to be: [returnNumber]",{"range":"605","text":"606"},[868,875],"[clearErrors, error]",[1123,1125],"[retrieveClientLoans]",[904,906],[1984,1990],"[biodata, data]",[4959,4965],"[data, nextOfKin]",[6937,6943],"[data, disburseBank]",[7287,7298],"[loanDeets, salaryBank]",[10781,10792],"[OfficeAddress, employerInfo, loanDeets]",[13630,13632],[17010,17012],"[clearErrors, clientId, getClientDetails]",[1155,1157],"[clientId, getClientDetails]",[1763,1769],"[basicInfo, data]",[6148,6150],"[clearError, loanId, verifyRepaymentStatus]",[9149,9151],"[loanId, retrieveLoan]",[91,92],"",[91,91],"\\",[116,117],[116,116],[3140,3204],"[monthlySalary, loanAmount, installmentPeriod, loanCalcData.dti, loanCalcData]",[3053,3055],"[close]",[4249,4256],[10218,10225],[10372,10383],"[clearErr, userError]",[2253,2255],"[loanData?.approvedAmount, loanData?.client?.firstName, loanData?.client?.lastName, loanData?.employment?.sector, loanData?.loanPurpose, loanData?.monthlyRepayment, loanData?.residence?.street, offerFormData]",[2818,2820],"[currentAddedUser, getClientDetails]",[3184,3215],"[biodata, currentAddedUser, userDetails]",[14599,14601],"[getBankList]",[15039,15082],"[bankInfo.accountNumber, bankInfo.bankName, bankList, verifyBankInfo]",[15255,15272],"[bankInfo, userBankDetails]",[21241,21243],[1811,1813],"[getClientListForRole, retrieveClientLoans]",[7378,7380],"[loanData, loanId, mappedRole, setupData]",[7483,7494],"[loanId, setupData]",[7663,7680],"[repaymentStatus, resetRepaymentStatus]",[7963,7979],"[approvedStatus, loanData, mappedRole, resetApprovalStatus]",[8077,8084],"[clearError, error]",[8206,8221],"[approvalError, clearApprovalError]",[9225,9338],"[approvedInterest, approvedLoanAmount, approvedTenure, adminFee, setupData.approvedDti, setupData, loanData?.monthlySalary]",[22771,22773],[1695,1697],[2006,2020],"[disburseBank, disburseData, loanData.approvedAmount]",[2118,2125],[2273,2290],"[disbursedStatus, resetDisburseStatus]",[4316,4318],[819,821],[1193,1195],"[getClientDetails, user.user_id]",[1194,1196],"[returnNumber]"]