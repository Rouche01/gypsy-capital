[{"/home/tga/Desktop/gypsy-capital/src/reportWebVitals.js":"1","/home/tga/Desktop/gypsy-capital/src/App.js":"2","/home/tga/Desktop/gypsy-capital/src/routes/pageUrl.js":"3","/home/tga/Desktop/gypsy-capital/src/context/createPersistDataContext.js":"4","/home/tga/Desktop/gypsy-capital/src/pages/SignUp/SignUp.jsx":"5","/home/tga/Desktop/gypsy-capital/src/pages/ConsumerCredit/ConsumerCredit.jsx":"6","/home/tga/Desktop/gypsy-capital/src/pages/LoanCalculator/LoanCalculator.jsx":"7","/home/tga/Desktop/gypsy-capital/src/pages/Overview/Overview.jsx":"8","/home/tga/Desktop/gypsy-capital/src/components/InputField/InputField.js":"9","/home/tga/Desktop/gypsy-capital/src/components/Footer/Footer.jsx":"10","/home/tga/Desktop/gypsy-capital/src/components/ProfileView/ProfileView.jsx":"11","/home/tga/Desktop/gypsy-capital/src/components/BvnForm/BvnForm.jsx":"12","/home/tga/Desktop/gypsy-capital/src/utils/nigeriaStates.js":"13","/home/tga/Desktop/gypsy-capital/src/context/AuthContext.js":"14","/home/tga/Desktop/gypsy-capital/src/api/gypsy-web.js":"15","/home/tga/Desktop/gypsy-capital/src/pages/Profile/Profile.jsx":"16","/home/tga/Desktop/gypsy-capital/src/pages/OtpVerify/OtpVerify.jsx":"17","/home/tga/Desktop/gypsy-capital/src/pages/AboutUs/AboutUs.jsx":"18","/home/tga/Desktop/gypsy-capital/src/pages/HomePage/HomePage.jsx":"19","/home/tga/Desktop/gypsy-capital/src/pages/MonoWidget/MonoWidget.jsx":"20","/home/tga/Desktop/gypsy-capital/src/components/ProgressBar/ProgressBar.jsx":"21","/home/tga/Desktop/gypsy-capital/src/components/NavBar/NavBar.jsx":"22","/home/tga/Desktop/gypsy-capital/src/components/LoanCalculatorForm/LoanCalculatorForm.jsx":"23","/home/tga/Desktop/gypsy-capital/src/components/LoanContactForm/LoanContactForm.jsx":"24","/home/tga/Desktop/gypsy-capital/src/components/EmployerInfoForm/EmployerInfoForm.jsx":"25","/home/tga/Desktop/gypsy-capital/src/components/BankInfoForm/BankInfoForm.jsx":"26","/home/tga/Desktop/gypsy-capital/src/components/PersonalForm/PersonalForm.jsx":"27","/home/tga/Desktop/gypsy-capital/src/index.js":"28","/home/tga/Desktop/gypsy-capital/src/utils/history.js":"29","/home/tga/Desktop/gypsy-capital/src/context/UserContext.js":"30","/home/tga/Desktop/gypsy-capital/src/context/BankCotext.js":"31","/home/tga/Desktop/gypsy-capital/src/context/createDataContext.js":"32","/home/tga/Desktop/gypsy-capital/src/pages/CreditReport/CreditReport.jsx":"33","/home/tga/Desktop/gypsy-capital/src/pages/ContactPage/ContactPage.jsx":"34","/home/tga/Desktop/gypsy-capital/src/components/Dashboard/Dashboard.jsx":"35","/home/tga/Desktop/gypsy-capital/src/components/FileUploadButton/FileUploadButton.js":"36","/home/tga/Desktop/gypsy-capital/src/utils/resolveToken.js":"37","/home/tga/Desktop/gypsy-capital/src/pages/AgentOverview/AgentOverview.jsx":"38","/home/tga/Desktop/gypsy-capital/src/pages/ClientListPage/ClientListPage.jsx":"39","/home/tga/Desktop/gypsy-capital/src/components/IdentityForm/IdentityForm.jsx":"40","/home/tga/Desktop/gypsy-capital/src/utils/validateInput.js":"41","/home/tga/Desktop/gypsy-capital/src/components/FaqSection/FaqSection.jsx":"42","/home/tga/Desktop/gypsy-capital/src/pages/Products/Products.jsx":"43","/home/tga/Desktop/gypsy-capital/src/pages/pages.js":"44","/home/tga/Desktop/gypsy-capital/src/routes/protectedroute/ProtectedRoute.js":"45","/home/tga/Desktop/gypsy-capital/src/components/Button/Button.jsx":"46","/home/tga/Desktop/gypsy-capital/src/context/LoanContext.js":"47","/home/tga/Desktop/gypsy-capital/src/pages/SignIn/SignIn.jsx":"48","/home/tga/Desktop/gypsy-capital/src/pages/Faqs/Faqs.jsx":"49","/home/tga/Desktop/gypsy-capital/src/routes/sidebarRoutes.js":"50","/home/tga/Desktop/gypsy-capital/src/pages/LoanList/LoanList.jsx":"51","/home/tga/Desktop/gypsy-capital/src/pages/Support/Support.jsx":"52","/home/tga/Desktop/gypsy-capital/src/utils/dummyData.js":"53","/home/tga/Desktop/gypsy-capital/src/pages/ClientDetails/ClientDetails.jsx":"54","/home/tga/Desktop/gypsy-capital/src/components/NavTabs/NavTabs.jsx":"55","/home/tga/Desktop/gypsy-capital/src/pages/LoanDetail/LoanDetail.jsx":"56","/home/tga/Desktop/gypsy-capital/src/hooks/usePagination.js":"57","/home/tga/Desktop/gypsy-capital/src/components/ModalForm/ModalForm.jsx":"58","/home/tga/Desktop/gypsy-capital/src/components/AccountSetupModal/AccountSetupModal.jsx":"59"},{"size":362,"mtime":1611009045300,"results":"60","hashOfConfig":"61"},{"size":3112,"mtime":1613285273860,"results":"62","hashOfConfig":"61"},{"size":1471,"mtime":1613285349811,"results":"63","hashOfConfig":"61"},{"size":821,"mtime":1612688150601,"results":"64","hashOfConfig":"61"},{"size":7692,"mtime":1612416738695,"results":"65","hashOfConfig":"61"},{"size":6170,"mtime":1613055073553,"results":"66","hashOfConfig":"61"},{"size":3598,"mtime":1613010165972,"results":"67","hashOfConfig":"61"},{"size":4634,"mtime":1613050027352,"results":"68","hashOfConfig":"61"},{"size":2389,"mtime":1612921206368,"results":"69","hashOfConfig":"61"},{"size":1152,"mtime":1612102534435,"results":"70","hashOfConfig":"61"},{"size":7010,"mtime":1612714255563,"results":"71","hashOfConfig":"61"},{"size":1331,"mtime":1612592363525,"results":"72","hashOfConfig":"61"},{"size":6576,"mtime":1613018961113,"results":"73","hashOfConfig":"61"},{"size":5804,"mtime":1612764452830,"results":"74","hashOfConfig":"61"},{"size":147,"mtime":1612318782772,"results":"75","hashOfConfig":"61"},{"size":5189,"mtime":1613050311835,"results":"76","hashOfConfig":"61"},{"size":2391,"mtime":1612574568451,"results":"77","hashOfConfig":"61"},{"size":6259,"mtime":1612758512034,"results":"78","hashOfConfig":"61"},{"size":13172,"mtime":1613019608220,"results":"79","hashOfConfig":"61"},{"size":749,"mtime":1612714255563,"results":"80","hashOfConfig":"61"},{"size":1565,"mtime":1611429643367,"results":"81","hashOfConfig":"61"},{"size":2545,"mtime":1613037844166,"results":"82","hashOfConfig":"61"},{"size":7506,"mtime":1613055902326,"results":"83","hashOfConfig":"61"},{"size":5925,"mtime":1613056242738,"results":"84","hashOfConfig":"61"},{"size":9637,"mtime":1613056480823,"results":"85","hashOfConfig":"61"},{"size":5529,"mtime":1613058459324,"results":"86","hashOfConfig":"61"},{"size":14060,"mtime":1612923045685,"results":"87","hashOfConfig":"61"},{"size":548,"mtime":1612763106807,"results":"88","hashOfConfig":"61"},{"size":84,"mtime":1612764469627,"results":"89","hashOfConfig":"61"},{"size":4381,"mtime":1612688150601,"results":"90","hashOfConfig":"61"},{"size":1701,"mtime":1612604883562,"results":"91","hashOfConfig":"61"},{"size":533,"mtime":1612421501467,"results":"92","hashOfConfig":"61"},{"size":498,"mtime":1613049821733,"results":"93","hashOfConfig":"61"},{"size":4507,"mtime":1612758575858,"results":"94","hashOfConfig":"61"},{"size":3540,"mtime":1613205462740,"results":"95","hashOfConfig":"61"},{"size":665,"mtime":1611816481368,"results":"96","hashOfConfig":"61"},{"size":192,"mtime":1612142197425,"results":"97","hashOfConfig":"61"},{"size":3322,"mtime":1613388376910,"results":"98","hashOfConfig":"61"},{"size":3435,"mtime":1613414410160,"results":"99","hashOfConfig":"61"},{"size":2429,"mtime":1612688150589,"results":"100","hashOfConfig":"61"},{"size":871,"mtime":1612718532240,"results":"101","hashOfConfig":"61"},{"size":2175,"mtime":1613020166641,"results":"102","hashOfConfig":"61"},{"size":11900,"mtime":1613037045371,"results":"103","hashOfConfig":"61"},{"size":1247,"mtime":1613284895113,"results":"104","hashOfConfig":"61"},{"size":837,"mtime":1611816481484,"results":"105","hashOfConfig":"61"},{"size":917,"mtime":1612416700603,"results":"106","hashOfConfig":"61"},{"size":5404,"mtime":1613054770839,"results":"107","hashOfConfig":"61"},{"size":3482,"mtime":1613052161589,"results":"108","hashOfConfig":"61"},{"size":737,"mtime":1613020227334,"results":"109","hashOfConfig":"61"},{"size":1574,"mtime":1613285410096,"results":"110","hashOfConfig":"61"},{"size":3582,"mtime":1613400272340,"results":"111","hashOfConfig":"61"},{"size":156,"mtime":1613199246806,"results":"112","hashOfConfig":"61"},{"size":3716,"mtime":1613283327274,"results":"113","hashOfConfig":"61"},{"size":9521,"mtime":1613280628219,"results":"114","hashOfConfig":"61"},{"size":504,"mtime":1613386895718,"results":"115","hashOfConfig":"61"},{"size":4731,"mtime":1613387224280,"results":"116","hashOfConfig":"61"},{"size":1253,"mtime":1613397508401,"results":"117","hashOfConfig":"61"},{"size":7758,"mtime":1613457344377,"results":"118","hashOfConfig":"61"},{"size":18951,"mtime":1613457270839,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"t9s37o",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"125"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"125"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"125"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"128"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"122"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"128"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"152"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"125"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"128"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"122"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"128"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"125"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"159"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"152"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"128"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"128"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"125"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"231"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"125"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"128"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"128"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"125"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"122"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"125"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273"},"/home/tga/Desktop/gypsy-capital/src/reportWebVitals.js",[],["274","275"],"/home/tga/Desktop/gypsy-capital/src/App.js",[],["276","277"],"/home/tga/Desktop/gypsy-capital/src/routes/pageUrl.js",[],["278","279"],"/home/tga/Desktop/gypsy-capital/src/context/createPersistDataContext.js",["280"],"import React, {createContext, useReducer, useEffect } from 'react';\n\n\nexport default (reducer, actions, initialState, persist, saveData) => {\n  const Context = createContext();\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState, () => {\n      if(persist) {\n        const localData = localStorage.getItem('gypsy');\n        return localData ? JSON.parse(localData) : {}\n      }\n    });\n\n    useEffect(() => {\n      if(persist) {\n        saveData(state);\n        // console.log(state);\n      }\n    }, [state])\n\n    const boundActions = {}\n\n    for(let key in actions) {\n      boundActions[key] = actions[key](dispatch);\n    }\n\n    return (\n      <Context.Provider value={{ state, ...boundActions }}>{children}</Context.Provider>\n    )\n  }\n\n  return { Context, Provider }\n}","/home/tga/Desktop/gypsy-capital/src/pages/SignUp/SignUp.jsx",["281","282","283"],"import React, { useContext, useEffect, useState } from 'react';\nimport Logo from '../../assets/logo.png';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport styles from './SignUp.module.scss';\nimport { Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport pageUrl from '../../routes/pageUrl';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\nconst SignUp = () => {\n\n  const { \n    state: { loading, error }, \n    registerUser, \n    getActiveUser, \n    clearErrors \n  } = useContext(AuthContext);\n\n  const [signUpValues, setSignUpvalues] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    mobileNumber: '',\n    password: '',\n    confirmPassword: '',\n    referralChoice: ''\n  });\n\n  const [validationErrors, setValidationErrors] = useState({\n    firstName: null,\n    lastName: null,\n    email: null,\n    mobileNumber: null,\n    password: null,\n    confirmPassword: null,\n    referralChoice: null\n  })\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearErrors();\n    }\n  }, [error])\n\n  const referralOptions = [\n    'Search Engine', \n    'Google Ads', \n    'Email', \n    'Radio', \n    'TV', \n    'Newspaper', \n    'Word of mouth',\n    'Facebook',\n    'Instagram',\n    'Other'\n  ]\n\n  const validateInput = () => {\n\n    const validMail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    let validPhoneNumber = /^[0]\\d{10}$/;\n\n    const errorsInit = {};\n    let fields = { ...signUpValues }\n\n    for(const key in fields) {\n      if(!fields[key]) {\n        errorsInit[key] = \"This field is required\";\n      } \n      if(fields.email && !fields.email.match(validMail)) {\n        errorsInit.email = \"Please enter a valid email address\"\n      } \n      if(fields.mobileNumber && !fields.mobileNumber.match(validPhoneNumber)) {\n        errorsInit.mobileNumber = \"Please enter a valid phone number\"\n      } \n      if(fields.password && fields.password.length < 8) {\n        errorsInit.password = \"Password must be at least 8 characters\";\n      }\n      if(fields.confirmPassword && fields.confirmPassword !== fields.password) {\n        errorsInit.confirmPassword = \"Your password does not match\"\n      }\n    }\n\n    setValidationErrors(errorsInit);\n\n    if(Object.entries(errorsInit).length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n\n  }\n\n  const handleSubmit = () => {\n    const validated = validateInput();\n    const signUpData = {\n      email: signUpValues.email,\n      firstName: signUpValues.firstName,\n      lastName: signUpValues.lastName,\n      phoneNumber: signUpValues.mobileNumber.replace('0', '234'),\n      password: signUpValues.password,\n      hearAboutUs: signUpValues.referralChoice,\n    }\n    // console.log(signUpData);\n    if(validated) {\n      registerUser(signUpData, getActiveUser);\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <img src={Logo} alt=\"Gypsy Logo\" />\n      <h1>Create your account</h1>\n      <p className={styles.subtitle}>Hey there, let's setup your Gypsy Capital account</p>\n      <div className={styles.registerBox}>\n        <ToastContainer position=\"top-center\" />\n        <Row>\n          <Col>\n            <InputField type=\"text\" \n              nameAttr=\"firstName\" \n              label=\"First Name\" \n              value={signUpValues.firstName} \n              changed={(val) => {\n                setValidationErrors({ ...validationErrors, firstName: null })\n                setSignUpvalues({...signUpValues, firstName: val})\n              }}\n              error={validationErrors.firstName && validationErrors.firstName}\n            />\n          </Col>\n          <Col>\n            <InputField type=\"text\" \n              nameAttr=\"lastName\" \n              label=\"Last Name\" \n              value={signUpValues.lastName}\n              changed={(val) => {\n                setValidationErrors({ ...validationErrors, lastName: null })\n                setSignUpvalues({...signUpValues, lastName: val})\n              }}\n              error={validationErrors.lastName && validationErrors.lastName}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mt-4\">\n          <Col>\n            <InputField type=\"email\" \n              nameAttr=\"email\" \n              label=\"Email\" \n              value={signUpValues.email}\n              changed={(val) => {\n                setValidationErrors({ ...validationErrors, email: null })\n                setSignUpvalues({...signUpValues, email: val})\n              }}\n              error={validationErrors.email && validationErrors.email}\n            />\n          </Col>\n          <Col>\n            <InputField type=\"phone\" \n              nameAttr=\"mobileNo\" \n              label=\"Mobile Number\" \n              value={signUpValues.mobileNumber}\n              changed={(val) => {\n                setValidationErrors({...validationErrors, mobileNumber: null})\n                setSignUpvalues({...signUpValues, mobileNumber: val})\n              }}\n              error={validationErrors.mobileNumber && validationErrors.mobileNumber}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mt-4\">\n          <Col>\n            <InputField type=\"password\" \n              nameAttr=\"password\" \n              label=\"Password\" \n              value={signUpValues.password}\n              changed={(val) => {\n                setValidationErrors({...validationErrors, password: null})\n                setSignUpvalues({...signUpValues, password: val})\n              }}\n              error={validationErrors.password && validationErrors.password}\n            />\n          </Col>\n          <Col>\n            <InputField type=\"password\" \n              nameAttr=\"confirmPassword\" \n              label=\"Confirm Password\" \n              value={signUpValues.confirmPassword}\n              changed={(val) => {\n                setValidationErrors({...validationErrors, confirmPassword: null})\n                setSignUpvalues({...signUpValues, confirmPassword: val})\n              }}\n              error={validationErrors.confirmPassword && validationErrors.confirmPassword}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mt-4\">\n          <Col>\n            <InputField type=\"select\" \n              label=\"How did you hear about us?\" \n              options={referralOptions} \n              nameAttr=\"publicity\"\n              changed={(val) => {\n                setValidationErrors({...validationErrors, referralChoice: null})\n                setSignUpvalues({...signUpValues, referralChoice: val})\n              }}\n              error={validationErrors.referralChoice && validationErrors.referralChoice}\n            />\n          </Col>\n        </Row>\n        <Button \n          className={ loading ? [styles.loadingBtn, \"mt-5\"].join(' ') : \"mt-5\" } \n          fullWidth \n          clicked={handleSubmit} \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n          disabled={loading}\n          loading={loading}\n        >\n          Sign Up\n        </Button>\n        <p className={[styles.authLink, 'mt-3'].join(' ')}>\n          Already have an account? <Link to={pageUrl.SIGNIN_PAGE}>Log in</Link>\n        </p>\n        <p className={styles.legalLink}>\n          By continuing, you agree to our <Link to={pageUrl.TERMS_CONDITIONS_PAGE}>Terms and Conditions</Link> of service and <Link to={pageUrl.PRIVACY_POLICY_PAGE}>Privacy Policy.</Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n\n\nexport default SignUp;","/home/tga/Desktop/gypsy-capital/src/pages/ConsumerCredit/ConsumerCredit.jsx",["284","285","286","287","288","289","290"],"import React, { useRef, useState, useContext, useEffect } from 'react';\nimport styles from './ConsumerCredit.module.scss';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport Button from '../../components/Button/Button';\nimport { Table } from 'react-bootstrap';\nimport noLoan from '../../assets/no-loan.png';\nimport { Row, Col } from 'react-bootstrap';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport LoanCalculatorForm from '../../components/LoanCalculatorForm/LoanCalculatorForm';\nimport LoanContactForm from '../../components/LoanContactForm/LoanContactForm';\nimport EmployerInfoForm from '../../components/EmployerInfoForm/EmployerInfoForm';\nimport BankInfoForm from '../../components/BankInfoForm/BankInfoForm';\nimport { Route, useRouteMatch, Switch, Link, useLocation, useHistory } from 'react-router-dom';\nimport { Context as LoanContext } from '../../context/LoanContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { clientRoutes } from '../../routes/sidebarRoutes';\n\n\nconst ConsumerCredit = () => {\n\n  const { url, path } = useRouteMatch();\n  const location = useLocation();\n  const history = useHistory();\n\n\n  const applyStageArray = {\n    '/dashboard/consumer-credit/apply/calculator': 0,\n    '/dashboard/consumer-credit/apply/contact-info': 1,\n    '/dashboard/consumer-credit/apply/employer-info': 2,\n    '/dashboard/consumer-credit/apply/bank-info': 3\n  }\n\n\n  const { \n    state: { loans, error }, \n    retrieveClientLoans,\n    clearError\n  } = useContext(LoanContext);\n  const { state: { user } } = useContext(AuthContext);\n\n  useEffect(() => {\n    retrieveClientLoans();\n  }, [])\n\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearError();\n    }\n  }, [error])\n\n\n  const numberWithCommas = (x) => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  return (\n    <Dashboard sidebarRoutes={clientRoutes} location={location}>\n      <ToastContainer position=\"top-center\" />\n      <div className={styles.heading}>\n        <div>\n          <h2>Consumer Credit</h2>\n          <p>Get a loan with ease</p>\n        </div>\n        { location.pathname === '/dashboard/consumer-credit/history' && <Button\n            bgColor=\"#741763\"\n            size=\"sm\"\n            color=\"#fff\"\n            className=\"mt-4\"\n            clicked={() => history.push('/dashboard/consumer-credit/apply/calculator')}\n          >\n            Apply for a loan\n          </Button>}\n      </div>\n      <Switch>\n        <Route path={`${path}/history`}>\n          <div className={styles.creditTable}>\n            <Table striped hover className={styles.tableStyles}>\n              <thead>\n                <tr>\n                  <th>Loan ID</th>\n                  <th>Monthly Repayment</th>\n                  <th>Tenor</th>\n                  <th>Status</th>\n                  <th>Repayment Source</th>\n                  <th>Loan Amount</th>\n                  <th>Balance</th>\n                </tr>\n              </thead>\n              <tbody>\n                {loans.map((loanInstance, idx) => {\n                  return (\n                    <tr>\n                      <td>{loanInstance._id.substring(0, 5)}</td>\n                      <td>{`N ${numberWithCommas(loanInstance.monthlyRepayment)}`}</td>\n                      <td>{!loanInstance.approvedTenure ? loanInstance.paymentPeriod : loanInstance.approvedTenure}</td>\n                      <td>{loanInstance.status}</td>\n                      <td>Salary</td>\n                      <td>{`N ${numberWithCommas(loanInstance.amount)}`}</td>\n                      <td>______</td>\n                    </tr>\n                  )\n                })}\n              </tbody>\n            </Table>\n            { (!loans || loans.length === 0) && <div className={styles.noLoanMessage}>\n              <p>Sorry you currently have no loan</p>\n              <img src={noLoan} alt=\"No loan history\" height=\"250\" />\n            </div>}\n          </div>\n        </Route>\n        <Route path={`${path}/apply`}>\n          <div className={styles.applyContainer}>\n            <Row>\n              <Col md={4}>\n                <ul className={styles.joinedBullets}>\n                  <li className={styles.active}>\n                    Loan Calculator\n                  </li>\n                  <li \n                    className={applyStageArray[location.pathname] > 0 && styles.active}\n                  >\n                    Contact Address\n                  </li>\n                  <li\n                    className={applyStageArray[location.pathname] > 1 && styles.active}\n                  >\n                    Employment Information\n                  </li>\n                  <li\n                    className={applyStageArray[location.pathname] > 2 && styles.active}\n                  >\n                    Bank Details\n                  </li>\n                </ul>\n              </Col>\n              <Col md={8}>\n                <div className={styles.applyForm}>\n                  <Switch>\n                    <Route path={`${path}/apply/calculator`}>\n                      <LoanCalculatorForm />\n                    </Route>\n                    <Route path={`${path}/apply/contact-info`}>\n                      <LoanContactForm />\n                    </Route>\n                    <Route path={`${path}/apply/employer-info`}>\n                      <EmployerInfoForm />\n                    </Route>\n                    <Route path={`${path}/apply/bank-info`}>\n                      <BankInfoForm />\n                    </Route>\n                  </Switch>\n                </div>\n              </Col>\n            </Row>\n          </div>\n        </Route>\n        <Route path={`${path}/success`}>\n          <div className={styles.applicationComplete}>\n            <FaCheckCircle size=\"4em\" color=\"#741763\" />\n            <h2>Congratulations!</h2>\n            <p>Your loan application has been submitted and is being processed</p>\n            <p>Look out for an email from us within the next 24 hours</p>\n          </div>\n        </Route>\n      </Switch>\n    </Dashboard>\n  )\n}\n\n\nexport default ConsumerCredit;",["291","292"],"/home/tga/Desktop/gypsy-capital/src/pages/LoanCalculator/LoanCalculator.jsx",["293"],"import React, { useEffect, useState } from 'react';\nimport styles from './LoanCalculator.module.scss';\nimport NavBar from '../../components/NavBar/NavBar';\nimport InputField from '../../components/InputField/InputField';\nimport { Row, Col } from 'react-bootstrap';\nimport Button from '../../components/Button/Button';\nimport { useLocation, useRouteMatch, useHistory } from 'react-router-dom';\n\n\nconst LoanCalculator = () => {\n\n  const [loanData, setLoanData] = useState({\n    proposedAmount: '',\n    proposedDuration: '',\n    monthlyIncome: '',\n    employmentStatus: '',\n    proposedMonthyRepayment: '',\n  })\n\n  const location = useLocation();\n  const history = useHistory();\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    if(location.state) {\n      setLoanData({ ...loanData, proposedAmount: location.state.loanAmount });\n    }\n  },[location])\n\n  return (\n    <>\n    <NavBar location={url} history={history} />\n    <div className={styles.mainSection}>\n      <div className={styles.container}>\n        <h3>Access Quick Loans of Up to ₦500,000</h3>\n        <p>Use our loan calculator to get started</p>\n        <div className={styles.calculatorBox}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"text\"\n                label=\"How much do you need?\"\n                nameAttr=\"loanAmt\"\n                value={loanData.proposedAmount}\n                changed={(val) => setLoanData({ ...loanData, proposedAmount: val})}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"select\"\n                label=\"How long before you pay back? (Months)\"\n                nameAttr=\"proposedDuration\"\n                options={[1, 2, 3]}\n                value={loanData.proposedDuration}\n                changed={(val) => setLoanData({ ...loanData, proposedDuration: val})}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"text\"\n                label=\"What is your monthly income?\"\n                nameAttr=\"monthlyIncome\"\n                value={loanData.monthlyIncome}\n                changed={(val) => setLoanData({ ...loanData, monthlyIncome: val})}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"select\"\n                label=\"Employment status\"\n                options={['Self-Employed', 'Unemployed', 'Employed']}\n                nameAttr=\"employStatus\"\n                value={loanData.employmentStatus}\n                changed={(val) => setLoanData({ ...loanData, employmentStatus: val})}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <InputField \n                type=\"text\"\n                label=\"Estimated monthly repayment\"\n                nameAttr=\"proposedRepayment\"\n                value={loanData.proposedMonthyRepayment}\n                changed={(val) => setLoanData({ ...loanData, proposedMonthyRepayment: val})}\n              />\n            </Col>\n          </Row>\n          <Button\n            className={ \"mt-5\" } \n            fullWidth \n            // clicked={handleSubmit} \n            bgColor=\"#741763\" \n            size=\"lg\" \n            color=\"#EBEBEB\"\n            // disabled={loading}\n            // loading={loading}\n          >\n            Continue\n          </Button>\n        </div>\n      </div>\n    </div>\n    </>\n  )\n}\n\n\nexport default LoanCalculator;","/home/tga/Desktop/gypsy-capital/src/pages/Overview/Overview.jsx",["294","295","296","297"],"import React, { useContext, useEffect, useState } from 'react';\nimport styles from './Overview.module.scss';\nimport { clientRoutes } from '../../routes/sidebarRoutes';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport Button from '../../components/Button/Button';\nimport gypsyNote from '../../assets/icons/gypsyNotes.svg';\nimport altInvestment from '../../assets/icons/alternative.svg';\nimport { Col, Row } from 'react-bootstrap';\nimport noLoan from '../../assets/no-loan.png';\nimport moment from 'moment';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { useRouteMatch, Link, useHistory, useLocation } from 'react-router-dom';\n\n\nconst Overview = () => {\n\n  const { url, path } = useRouteMatch();\n  const history = useHistory();\n  const location = useLocation();\n  const [loanStatus, setLoanStatus] = useState('inactive');\n\n  const { state: { user } } = useContext(AuthContext);\n\n  useEffect(() => {\n    console.log(user);\n  }, [user])\n\n  if(!user) {\n    return null\n  }\n\n  return (\n    <Dashboard sidebarRoutes={clientRoutes} location={location}>\n      <div className={styles.welcomeGroup}>\n        <h2>Hey, {user.firstName}</h2>\n        <p className={styles.currentDate}>Today is {moment().format('dddd Do[,] MMMM')}.</p>\n      </div>\n      <div className={styles.loanStatus} style={{padding: '30px 40px'}}>\n        { loanStatus === \"inactive\" && <div className={styles.innerContainer}>\n          <div className={styles.mainContent}>\n            <h3>Active Loan</h3>\n            <p>Sorry you currently have no active loan</p>\n            <Button\n              bgColor=\"#741763\"\n              size=\"sm\"\n              color=\"#fff\"\n              className=\"mt-4\"\n              clicked={() => history.push('/dashboard/consumer-credit/apply/calculator')}\n            >\n              Apply for loan\n            </Button>\n          </div>\n          <img src={noLoan} alt=\"No active loan\" height=\"280\" />\n        </div> } \n        { loanStatus !== \"inactive\" && <div className={styles.activeStyle}>\n          <div className={styles.mainContent}>\n            <h3>Active Loan <span>{loanStatus.replace('_', ' ')}</span></h3>\n            <div className={styles.statusBoard}>\n              <Row>\n                <Col className={styles.borderClass}>\n                  <div className={styles.loanData}>\n                    <div>\n                      <h6>Loan amount</h6>\n                      <h1>N150,000</h1>\n                    </div>\n                  </div>\n                </Col>\n                <Col className={styles.borderClass}>\n                  <div className={styles.loanData}>\n                    <div>\n                      <h6>Monthly Repayment</h6>\n                      <h1>N34,758</h1>\n                    </div>\n                  </div>\n                </Col>\n                <Col>\n                  <div className={styles.loanData}>\n                    <div>\n                      <h6>Tenure</h6>\n                      <h1>3 months</h1>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </div>}\n      </div>\n      <div className={styles.otherProducts}>\n        <Row>\n          <Col sm={12} md={6}>\n            <div className={[styles.product, styles.borderClass].join(' ')}>\n              <div className={styles.productIcon}>\n                <img src={gypsyNote} alt=\"Gypsy Notes\" width=\"25\" />\n              </div>\n              <h3 className={styles.productTitle}>Gypsy Notes</h3>\n              <p className=\"mt-2\">Let your money work for you and enjoy high interest rates on your money. Start a Gypsy Fixed Income Note today and earn more.</p>\n              <button className={[styles.productBtn, \"mt-3\"].join(' ')}>\n                Be the first to know when we launch\n              </button>\n            </div>\n          </Col>\n          <Col sm={12} md={6}>\n            <div className={[styles.product, styles.border2Class].join(' ')}>\n              <div className={styles.productIcon}>\n                <img src={altInvestment} alt=\"Alternative Investment\" width=\"40\" />\n              </div>\n              <h3 className={styles.productTitle}>Alternative Investment</h3>\n              <p className=\"mt-2\">Are you an investor who seek greater rewards? Our Alternative Investment service is here to help you earn more.</p>\n              <button className={[styles.productBtn, \"mt-3\"].join(' ')}>\n                Be the first to know when we launch\n              </button>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </Dashboard>\n  )\n}\n\n\nexport default Overview;","/home/tga/Desktop/gypsy-capital/src/components/InputField/InputField.js",[],"/home/tga/Desktop/gypsy-capital/src/components/Footer/Footer.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/ProfileView/ProfileView.jsx",["298","299"],"import React, { useState, useContext, useRef, useEffect } from 'react';\nimport styles from './ProfileView.module.scss';\nimport { Row, Col } from 'react-bootstrap';\nimport InputField from '../InputField/InputField';\nimport Button from '../Button/Button';\nimport { BiCreditCard, BiPlus } from 'react-icons/bi';\nimport { RiBankFill } from 'react-icons/ri';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { Context as UserContext } from '../../context/UserContext';\n\n\nconst ProfileView = () => {\n\n  const [visibleSection, setVisibleSection] = useState('personalInfo');\n  const [profileImg, setProfileImg] = useState(null);\n  const [visiblePaymentSection, setVisiblePaymentSection] = useState('card');\n\n  const [profileData, setProfileData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phoneNo: \"\",\n    bvn: \"\",\n    residence: \"\"\n  })\n\n  const profilePicRef = useRef();\n\n  const { state: { user } } = useContext(AuthContext);\n  const { \n    state: { userDetails },\n    getClientDetails, \n  } = useContext(UserContext);\n\n  useEffect(() => {\n    getClientDetails(user.user_id);\n  }, [])\n\n  useEffect(() => {\n    if(userDetails) {\n      // setProfileData({\n      //   firstName\n      // })\n      console.log(userDetails)\n      const { bioData, identity, residence } = userDetails;\n      setProfileData({\n        firstName: bioData.firstName,\n        lastName: bioData.lastName,\n        email: bioData.email,\n        phoneNo: bioData.phoneNumber.replace('234', '0'),\n        bvn: bioData.BVN,\n        residence: residence.street\n      })\n      setProfileImg(identity.profilePhoto)\n    }\n  }, [userDetails])\n\n  const goToProfileSection = (section) => {\n    console.log('works');\n    setVisibleSection(section);\n  }\n\n  return (\n    <div className={styles.profileBox}>\n      <div className={styles.header}>\n        <Row>\n          <Col \n            onClick={() => goToProfileSection('personalInfo')} \n            className={[styles.borderStyle, styles.tabCol].join(' ')}\n          >\n            <p \n              className={[styles.tabMenu, visibleSection === \"personalInfo\" && styles.activeTab1].join(' ')}\n            >\n              Personal Information\n            </p>\n          </Col>\n          <Col \n            onClick={() => goToProfileSection('security')} \n            className={[styles.borderStyle, styles.tabCol].join(' ')}\n          >\n            <p\n              className={[styles.tabMenu, visibleSection === \"security\" && styles.activeTab2].join(' ')}\n            >\n              Security\n            </p>\n          </Col>\n          <Col\n            onClick={() => goToProfileSection('payment')} \n            className={styles.tabCol}\n          >\n            <p\n              className={[styles.tabMenu, visibleSection === \"payment\" && styles.activeTab3].join(' ')}\n            >\n              Payment\n            </p>\n          </Col>\n        </Row>\n      </div>\n      <div className={styles.body}>\n        {visibleSection === \"personalInfo\" && <div>\n          <div className={styles.profilePictureSection}>\n            { profileImg && <img src={profileImg} alt=\"profile image\"/> }\n          </div>\n          <div className={styles.uploadBtn}>\n            <input type=\"file\" id=\"profilePic\" hidden ref={profilePicRef} />\n            <label  \n              htmlFor=\"profilePic\"\n            >\n              Change Profile Picture\n            </label>\n          </div>\n          <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"First Name\"\n              type=\"text\"\n              nameAttr=\"firstName\"\n              value={profileData.firstName}\n            />\n          </Col> \n          <Col>\n            <InputField \n              label=\"Last Name\"\n              type=\"text\"\n              nameAttr=\"lastName\"\n              value={profileData.lastName}\n            />\n          </Col> \n          </Row> \n          <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"Email\"\n              type=\"email\"\n              nameAttr=\"email\"\n              value={profileData.email}\n            />\n          </Col> \n          <Col>\n            <InputField \n              label=\"Phone Number\"\n              type=\"text\"\n              nameAttr=\"phoneNumber\"\n              value={profileData.phoneNo}\n            />\n          </Col> \n          </Row> \n          <Row>\n          <Col>\n            <InputField \n              label=\"BVN\"\n              type=\"text\"\n              nameAttr=\"bvn\"\n              value={profileData.bvn}\n            />\n          </Col> \n          <Col>\n            <InputField \n              label=\"Residential Address\"\n              type=\"text\"\n              nameAttr=\"address\"\n              value={profileData.residence}\n            />\n          </Col> \n          </Row> \n          <Button className=\"mt-5\" fullWidth  bgColor=\"#741763\" size=\"lg\" color=\"#EBEBEB\">\n            Edit Info\n          </Button>\n        </div>}\n        { visibleSection === \"security\" &&\n          <div className={styles.security}>\n            <h2>CHANGE PASSWORD</h2>\n            <Row className=\"mb-4\">\n              <Col>\n                <InputField \n                  type=\"password\"\n                  label=\"Current Password\"\n                  nameAttr=\"currPassword\"\n                />\n              </Col>\n            </Row>\n            <Row className=\"mb-4\">\n              <Col>\n                <InputField \n                  type=\"password\"\n                  label=\"Current Password\"\n                  nameAttr=\"currPassword\"\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <InputField \n                  type=\"password\"\n                  label=\"Current Password\"\n                  nameAttr=\"currPassword\"\n                />\n              </Col>\n            </Row>\n          </div>\n        }\n        { visibleSection === \"payment\" && \n          <div className={styles.payment}>\n            <div className={styles.btnGroup}>\n              <button \n                className={ visiblePaymentSection === 'card' && styles.activeMenu }\n                onClick={() => setVisiblePaymentSection('card')}\n              >\n                <BiCreditCard className={styles.icon} />\n                Card\n              </button>\n              <button\n                className={ visiblePaymentSection === 'bank' && styles.activeMenu }\n                onClick={() => setVisiblePaymentSection('bank')}\n              >\n                <RiBankFill className={styles.icon} />\n                Bank\n              </button>\n            </div>\n            <div className={styles.content}>\n              { visiblePaymentSection === \"card\" && <div className={styles.addCard}>\n                <div className={styles.cardInner}>\n                  <BiPlus size=\"2em\" />\n                  <p>Add Card</p>\n                </div>\n              </div> }\n            </div>\n          </div>\n        }\n      </div>\n    </div>\n  )\n}\n\n\nexport default ProfileView;",["300","301"],"/home/tga/Desktop/gypsy-capital/src/components/BvnForm/BvnForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/utils/nigeriaStates.js",[],"/home/tga/Desktop/gypsy-capital/src/context/AuthContext.js",[],["302","303"],"/home/tga/Desktop/gypsy-capital/src/api/gypsy-web.js",[],"/home/tga/Desktop/gypsy-capital/src/pages/Profile/Profile.jsx",["304","305","306","307","308","309"],"import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport styles from './Profile.module.scss';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport { clientRoutes } from '../../routes/sidebarRoutes';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport ProgressBar from '../../components/ProgressBar/ProgressBar';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { ToastContainer, toast } from 'react-toastify';\nimport PersonalForm from '../../components/PersonalForm/PersonalForm';\nimport BvnForm from '../../components/BvnForm/BvnForm';\nimport IdentityForm from '../../components/IdentityForm/IdentityForm';\nimport ProfileView from '../../components/ProfileView/ProfileView';\nimport { useRouteMatch, Link, useLocation } from 'react-router-dom';\n\n\nconst Profile = () => {\n\n  const { url } = useRouteMatch();\n  const location = useLocation();\n  const [setupStage, setSetupStage] = useState(0);\n  const [setupComplete, setSetupComplete] = useState(false);\n\n  const { \n    state: { error, bvnVerified, userDetails, completeState, personalInfoStatus }, \n    verifyBvn, \n    clearErrors,\n    getClientDetails,\n    updatePersonalInfo,\n    updateIdentityInfo\n  } = useContext(UserContext);\n  const { state: { user }, getActiveUser } = useContext(AuthContext);\n\n  useEffect(() => {\n    getClientDetails(user.user_id);\n  }, [])\n\n  useEffect(() => {\n    if(userDetails) {\n      const { bioData, identity, bank } = userDetails;\n      if(identity.identityType) {\n        setSetupComplete(true);\n      } else if(bank.accountName) {\n        setSetupStage(2)\n      } else if(bioData.BVN) {\n        setSetupStage(1)\n      }\n    }\n  }, [userDetails])\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearErrors();\n    }\n  }, [error])\n\n  useEffect(() => {\n    if(bvnVerified) {\n      setSetupStage(1);\n    }\n  }, [bvnVerified])\n\n\n  useEffect(() => {\n    if(personalInfoStatus) {\n      setSetupStage(2)\n    }\n  }, [personalInfoStatus])\n\n  useEffect(() => {\n    if(completeState) {\n      setSetupStage(3)\n    }\n  }, [completeState])\n\n\n  const submitBvn = async(bvn) => {\n    await verifyBvn(user.user_id, bvn, getActiveUser);\n  }\n\n\n  const submitPersonalInfo = async(biodata, residence, kin, bank) => {\n    console.log(biodata, residence, bank, kin);\n    const { altPhone, gender } = biodata;\n    const { city, state, street } = residence;\n    const { accountName, accountNumber, accountType, bankName } = bank;\n    const { address, email, fullName, phoneNo, relationship } = kin;\n\n    const data = {\n      alternativePhoneNumber: altPhone,\n      gender,\n      residence_street: street,\n      residence_city: city,\n      residence_state: state,\n      nextOfKin_fullName: fullName,\n      nextOfKin_relationship: relationship,\n      nextOfKin_email: email,\n      nextOfKin_phoneNumber: phoneNo,\n      nextOfKin_residentialAddress: address,\n      bank_name: bankName,\n      bank_accountType: accountType,\n      bank_accountNumber: accountNumber,\n      bank_accountName: accountName,\n      identity_type: null,\n      identity_imageUrl: null,\n      identity_profilePhoto: null\n    }\n\n    await updatePersonalInfo(user.user_id, data)\n  }\n\n  \n  const submitIdentityInfo = async(idRef, passportRef, idType) => {\n    \n    console.log(idRef, passportRef, idType);\n    const data = new FormData();\n    data.append('identification', idRef);\n    data.append('passport', passportRef);\n    data.append('identity_type', idType)\n    await updateIdentityInfo(user.user_id, data);\n  }\n\n\n\n  const goToProfileView = () => {\n    setSetupComplete(true);\n  }\n  \n\n  const CompleteStage = ({ redirect }) => {\n\n    useEffect(() => {\n      setTimeout(() => {\n        redirect();\n      }, 3000)\n    }, [])\n\n    return (\n      <div className={styles.stageComplete}>\n        <FaCheckCircle size=\"4em\" color=\"#741763\" />\n        <h2>Congratulations!</h2>\n        <p>Account setup completed.</p>\n        <p>Enjoy our amazing loan offer</p>\n      </div>\n    )\n  }\n\n\n  const resolveStageView = useMemo(() => {\n    if(setupStage === 0) {\n      return <BvnForm submit={submitBvn} />\n    } else if (setupStage === 1) {\n      return <PersonalForm submit={submitPersonalInfo} />\n    } else if(setupStage === 2) {\n      return <IdentityForm submit={submitIdentityInfo} />\n    } else if(setupStage === 3) {\n      return <CompleteStage redirect={goToProfileView} />\n    }\n  }, [setupStage])\n\n  // if(!userDetails && setupStage === 1) {\n  //   return null;\n  // }\n\n  return(\n    <Dashboard sidebarRoutes={clientRoutes} location={location}>\n      <div className={styles.container}>\n        <ToastContainer position=\"top-center\" />\n        { !setupComplete && <div>\n          <h1>Account Setup</h1>\n          <p className={styles.leadText}>Fill the field to complete your profile</p>\n          <ProgressBar stage={setupStage} className={styles.profileProgress} />\n          {resolveStageView}\n        </div>}\n        { setupComplete &&\n          <div>\n            <h2>Profile</h2>\n            <ProfileView />\n          </div> \n        }\n      </div>\n    </Dashboard>\n  );\n}\n\n\nexport default Profile;","/home/tga/Desktop/gypsy-capital/src/pages/OtpVerify/OtpVerify.jsx",["310"],"import React, { useContext, useEffect, useState } from 'react';\nimport styles from './OtpVerify.module.scss';\nimport Logo from '../../assets/logo.png';\nimport { Row, Col } from 'react-bootstrap';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport { Link } from 'react-router-dom';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst OtpVerify = () => {\n\n  const [otp, setOtp] = useState('');\n  const [validationErr, setValidationErr] = useState(null);\n\n  const { \n      state: { error, loading, message, user }, \n      verifyOtp, \n      getActiveUser, \n      resendOtp,\n      clearErrors \n  } = useContext(AuthContext);\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearErrors();\n    }\n  }, [error])\n\n  useEffect(() => {\n    if(message) {\n      toast.success(message);\n    }\n  }, [message])\n\n  const handleSubmit = () => {\n    if(!otp) {\n      setValidationErr('You need to enter your otp to verify your account')\n    } else {\n      verifyOtp(otp, user.email, getActiveUser);\n    }\n  }\n\n  const resendCode = () => {\n    resendOtp(user.email);\n  }\n\n  return(\n    <div className={styles.container}>\n      <img src={Logo} alt=\"Gypsy Logo\" />\n      <h1>Verify Your Details</h1>\n      <p>Please enter the OTP sent to your email to continue</p>\n      <div className={styles.verifyBox}>\n        <ToastContainer position=\"top-center\" />\n        <Row>\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"One Time Password\"\n              nameAttr=\"otp\"\n              value={otp}\n              changed={(val) => {\n                setValidationErr(null)\n                setOtp(val)\n              }}\n              error={validationErr && validationErr}\n            />\n          </Col>\n        </Row>\n        <Button \n          clicked={handleSubmit} \n          fullWidth \n          className=\"mt-4\" \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n          disabled={loading}\n          loading={loading}\n        >\n          Verify Code\n        </Button>\n        <p className={[styles.authLink, 'mt-3'].join(' ')}>\n          Didn’t receive code? <Link onClick={resendCode}>Resend OTP</Link>\n        </p>\n      </div>\n    </div>\n  )\n}\n\n\nexport default OtpVerify;","/home/tga/Desktop/gypsy-capital/src/pages/AboutUs/AboutUs.jsx",["311","312","313","314"],"import React from 'react';\nimport {Row, Col} from 'react-bootstrap';\nimport styles from './AboutUs.module.scss';\nimport NavBar from '../../components/NavBar/NavBar';\nimport Footer from '../../components/Footer/Footer';\nimport Illustration from '../../assets/illustration.png';\nimport Vision from '../../assets/icons/target.svg';\nimport Focus from '../../assets/icons/focus.svg';\nimport Mission from '../../assets/icons/flag.svg';\nimport { FaFacebookF, FaTwitter, FaLinkedinIn } from 'react-icons/fa';\nimport CEO from '../../assets/ceo.png';\nimport Partner from '../../assets/partner.png';\nimport Director1 from '../../assets/director.png';\nimport Director2 from '../../assets/director-2.png';\nimport { useRouteMatch, Link } from 'react-router-dom';\n\n\nconst ValueBox = ({ title, children, icon, borderColor }) => {\n  return (\n    <div className={styles.valueBox} style={{borderBottom: `5px solid ${borderColor}`}}>\n      <div className={styles.header}>\n        <img src={icon} alt={`Gypsy's ${title}`} />\n        <h3>{title}</h3>\n      </div>\n      <p>{children}</p>\n    </div>\n  )\n}\n\nconst TeamDisplay = ({ memberImg, name, title, fbLink, twitterLink, linkedIn, children }) => {\n  return (\n    <>\n      <Row className={styles.row}>\n        <Col md={4} className={styles.firstCol}>\n          <div className={styles.imageContainer}>\n            <img src={memberImg} alt={title} />\n            <div className={styles.nameTag}>\n              <h5>{name}</h5>\n              <p>{title}</p>\n            </div>\n            <div className={styles.socialIcons}>\n              <a href=\"\">\n                <FaFacebookF className={styles.icon} />\n              </a>\n              <a href=\"\">\n                <FaTwitter className={styles.icon} />\n              </a>\n              <a href=\"\">\n                <FaLinkedinIn className={styles.icon} />\n              </a>\n            </div>\n          </div>\n        </Col>\n        <Col md={8} className={styles.secondCol}>\n          <div className={styles.bio}>\n            <p>{children}</p>\n          </div>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nconst AboutUs = ({ history }) => {\n\n  const { url } = useRouteMatch();\n\n  return (\n    <>\n      <NavBar history={history} location={url} />\n      <div className={styles.heroSection}>\n        <div className={styles.container}>\n          <h2>About Us</h2>\n        </div>\n        <div className={styles.bgOverlay}></div>\n      </div>\n      <div className={styles.moreInfo}>\n        <div className={styles.container}>\n          <Row>\n            <Col className={styles.copyCol}>\n              <div>\n                <h4>About Gypsy Capital</h4>\n                <h2>We are a dynamic team of creative people with innovative mind</h2>\n                <p>Gypsy capital is a financial solutions service company, with a set commitment to helping individuals achieve their personal goals through financial intermediation.</p>\n                <p>“No matter what your personal goals may be, at Gypsy, we are invested in you, if you have the credible financial data.”</p>\n              </div>\n            </Col>\n            <Col>\n              <div className={styles.box}>\n                <img src={Illustration} alt=\"A dynamic team\" />\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </div>\n      <div className={styles.companyValues}>\n        <div className={styles.container}>\n          <Row>\n            <Col>\n              <ValueBox\n                title=\"Vision\"\n                borderColor=\"#1F8DE8\"\n                icon={Vision}\n              >\n                To grow into a long term successful global financial services and investment firm, delivering exceptional value to the market we serve.\n              </ValueBox>\n            </Col>\n            <Col>\n              <ValueBox\n                title=\"Mission\"\n                icon={Mission}\n                borderColor=\"#841FE8\"\n              >\n                To grow into a long term successful global financial services and investment firm, delivering exceptional value to the market we serve.\n              </ValueBox>\n            </Col>\n            <Col>\n              <ValueBox\n                title=\"Focus\"\n                icon={Focus}\n                borderColor=\"#015514\"\n              >\n                We are driven by a strong will to become the leading investment brokerage firm locally and aspire to be one of the leading global firm that drives prospect across the emerging market in Nigeria and Africa.\n              </ValueBox>\n            </Col>\n          </Row>\n        </div>\n      </div>\n      <div className={styles.teamSection}>\n        <div className={styles.container}>\n          <h2>Meet Our Dynamic Team</h2>\n          <TeamDisplay\n            title=\"Managing Director/CEO\"\n            memberImg={CEO}\n            name=\"Ayodeji Mekuleyi\"\n          > \n            With a wealth of experience spanning up to 10years in business management, Ayo is constantly looking for innovative ways to drive financial inclusion, value and possibilities for today’s personal and business ecosystems.\n          </TeamDisplay>\n          <TeamDisplay\n            title=\"Managing Partner / Director\"\n            memberImg={Partner}\n            name=\"Valentine Ndianefo\"\n          > \n            He is fondly referred to as the numbers expert hinged on his profound knowledge in accounting attained from his work experience in the banking sector.\n          </TeamDisplay>\n          <TeamDisplay\n            title=\"Non-Executive Director\"\n            memberImg={Director1}\n            name=\"Magaret Hall\"\n          > \n            Apart from earning her stripes as a seasoned and exceptionally skilled business strategy & management personnel, she is an accomplished entrepreneur with a distinctive academic background stemming from international exposure.\n          </TeamDisplay>\n          <TeamDisplay\n            title=\"Non-Executive Director\"\n            memberImg={Director2}\n            name=\"Senator Hosea Ehinlanwo (phd.)\"\n          > \n            A seasoned and distinguished public administrator with over 35 years of business, academic and administrative experience.\n          </TeamDisplay>\n        </div>\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nexport default AboutUs\n","/home/tga/Desktop/gypsy-capital/src/pages/HomePage/HomePage.jsx",["315"],"import React, { useState } from 'react';\nimport NavBar from '../../components/NavBar/NavBar';\nimport styles from './HomePage.module.scss';\nimport { Row, Col } from 'react-bootstrap';\nimport ExcitedCustomer from  '../../assets/excitement.jpeg';\nimport ExcitedCustomerMinor from '../../assets/excitement-2.jpg';\nimport Clients from '../../assets/clients.jpg'\nimport Circle from '../../assets/circle.svg';\nimport Pattern from '../../assets/pattern.svg';\nimport AboutImg from '../../assets/about.png';\nimport { FaMoneyBillWaveAlt, FaStopwatch, FaFileAlt } from 'react-icons/fa';\nimport { HiLocationMarker, HiMail, HiPhone } from 'react-icons/hi';\nimport { IoLogoWhatsapp } from 'react-icons/io';\nimport Credit from '../../assets/icons/credit.svg';\nimport Notes from '../../assets/icons/gypsyNotes.svg';\nimport Advisory from '../../assets/icons/advisory.svg';\nimport Alternative from '../../assets/icons/alternative.svg';\nimport CirclePattern from '../../assets/patternCircle.png';\nimport InputField from '../../components/InputField/InputField';\nimport FaqSection from '../../components/FaqSection/FaqSection';\nimport Footer from '../../components/Footer/Footer';\nimport { useRouteMatch, Link, useHistory } from 'react-router-dom';\n\n\nconst HomePage = () => {\n\n  const { url } = useRouteMatch();\n  const history = useHistory()\n  const [loanAmt, setLoanAmt] = useState('');\n  const [loanRequest, setLoanRequest] = useState('');\n\n  const [contactInfo, setContactInfo] = useState({\n    name: \"\",\n    subject: \"\",\n    email: \"\",\n    message: \"\"\n  });\n\n  return (\n    <>\n      <NavBar history={history} location={url} />\n      <div className={styles.heroSection}>\n        <Row className={styles.container}>\n          <Col md={6} sm={12} className={styles.mainCopy}>\n            <div className={styles.copyGroup}>\n              <h1>Access Quick Loans At Flexible Rates.</h1>\n              <h3>No collaterals needed, get funded within 24 hours</h3>\n              <input \n                type=\"text\" \n                name=\"loanAmt\" \n                value={loanAmt} \n                placeholder=\"How much do you need?\"\n                onChange={(e) => setLoanAmt(e.currentTarget.value)} \n              />\n              <button\n                onClick={() => history.push({ pathname: '/loan-calculator', state: { loanAmount: loanAmt }})}\n              >\n                Get Started\n              </button>\n              <img \n                src={Pattern}\n                className={styles.pattern}\n                alt=\"pattern\"\n              />\n            </div>\n          </Col>\n          <Col md={6} sm={12} className={styles.imageGroup}>\n            <div className={styles.imgContainer}>\n              <img \n                className={styles.mainImg} \n                src={ExcitedCustomer} \n                alt=\"An excited customer\" \n              />\n              <img \n                className={styles.minorImg}\n                src={ExcitedCustomerMinor}\n                alt=\"An excited customer\"\n              />\n              <img \n                className={styles.minorImg2}\n                src={Clients}\n                alt=\"Excited customers\"\n              />\n              <img \n                src={Circle}\n                className={styles.firstCircle}\n                alt=\"presentation\"\n              />\n              <img \n                src={Circle}\n                className={styles.secondCircle}\n                alt=\"presentation\"\n              />\n            </div>\n          </Col>\n        </Row>\n      </div>\n      <div className={styles.featureSection}>\n        <Row className={styles.container}>\n          <Col>\n            <div className={styles.featureBox}>\n              <FaStopwatch size=\"3.5em\" color=\"#741763\" />\n              <h2>Fast</h2>\n              <p>Funding in as soon as 24 hours</p>\n            </div>\n          </Col>\n          <Col>\n            <div className={styles.featureBox}>\n              <FaFileAlt size=\"3.5em\" color=\"#741763\" />\n              <h2>Simple</h2>\n              <p>Short & Quick Application</p>\n            </div>\n          </Col>\n          <Col>\n            <div className={styles.featureBox}>\n              <FaMoneyBillWaveAlt size=\"3.5em\" color=\"#741763\" />\n              <h2>Funding</h2>\n              <p>Up to 200% of your avg monthly salary</p>\n            </div>\n          </Col>\n        </Row>\n      </div>\n      <div className={styles.aboutSection}>\n        <Row className={styles.container}>\n          <Col>\n            <h5>About Gypsy Capital</h5>\n            <h2>Creating impactful value-driven financial services in Nigeria.</h2>\n            <p>Gypsy Capital is a financial solutions service company, with a sole commitment to helping individuals achieve personal goals through financial intermediation.</p>\n            <p>We are committed to a life of financial freedom, for individuals seeking the power to do more. We offer simple and smart solutions, you can trust.</p>\n            <p>Our core vision is to impact and empower our environment and creating a life of financial freedom for individuals seeking the power to do more.</p>\n            <p className={styles.founderQuote}>“No matter what your personal goals may be, at Gypsy, we are invested in you, if you have the credible financial data”.</p>\n            <p className={styles.quoter}><span>Ayo M.,</span> CEO Gypsy Capital</p>\n            <button onClick={() => history.push('/about-us')}>\n              Learn More\n            </button>\n          </Col>\n          <Col className={styles.imageGroup}>\n            <div className={styles.imageContainer}>\n              <img src={AboutImg} alt=\"About Gypsy\" />\n              <div className={styles.rect}></div>\n            </div>\n          </Col>\n        </Row>\n      </div>\n      <div className={styles.productSection}>\n        <div className={styles.container}>\n          <h5>Our Products</h5>\n          <h2>Creating impactful value-driven financial services in Nigeria.</h2>\n          <Row>\n            <Col>\n              <div className={styles.productBox} style={{borderBottom: \"4px solid #1F8DE8\"}}>\n                <div className={styles.iconWrapper}>\n                  <img src={Credit} alt=\"Consumer Credit\" className={styles.credit} />\n                </div>\n                <h3>Consumer Credit</h3>\n                <p>Access convenient personal and lifestyle loans. We are committed to providing consumer loan services, with efficiency and convenience at the forefront of all we do while ensuring best practices.</p>\n              </div>\n            </Col>\n            <Col>\n              <div className={styles.productBox} style={{borderBottom: \"4px solid #841FE8\"}}>\n                <div className={styles.iconWrapper}>\n                  <img src={Notes} alt=\"Gypsy Notes\" className={styles.notes} />\n                </div>\n                <h3>Gypsy Notes</h3>\n                <p>Earn more with us. Our investment arm is driven by our interest in real estate financing, financial services, agriculture and hospitality projects. We are focused on delivering solutions that inspire global possibilities that drive value and growth.</p>\n              </div>\n            </Col>\n          </Row>\n          <Row className=\"mt-5\">\n            <Col>\n              <div className={styles.productBox} style={{borderBottom: \"4px solid #FF5800\"}}>\n                <div className={styles.iconWrapper}>\n                  <img src={Advisory} alt=\"Financial Advisory\" className={styles.advisory} />\n                </div>\n                <h3>Financial Advisory</h3>\n                <p>We provide expert financial advisory and wealth management services to individual lifestyle needs. With a diverse range of industry experts, global knowledge and insight we achieve ranging clientele needs.</p>\n              </div>\n            </Col>\n            <Col>\n              <div className={styles.productBox} style={{borderBottom: \"4px solid #015514\"}}>\n                <div className={styles.iconWrapper}>\n                  <img src={Alternative} alt=\"Alternative Investment\" className={styles.alternative} />\n                </div>\n                <h3>Alternative Investment</h3>\n                <p>We offer annual returns up to 13% Per Annum which are tiered according to individual preferences with a minimum investment amount of N1million for a minimum tenor of 100 days.</p>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </div>\n      <FaqSection returnNumber={4} />\n      <div className={styles.repeatSection}>\n        <div className={styles.container}>\n          <div className={styles.styledBox}>\n            <Row>\n              <Col className={styles.access}>\n                <h2>Access Up to ₦500,000 Within 24 Hours</h2>\n              </Col>\n              <Col>\n                <input \n                  type=\"text\"\n                  name=\"loanRequest\"\n                  placeholder=\"How much do you need?\"\n                  value={loanRequest}\n                  onChange={(e) => setLoanRequest(e.currentTarget.value)}\n                />\n                <button>\n                  Apply Now\n                </button>\n              </Col>\n            </Row>\n            <img src={CirclePattern} alt=\"pattern\" className={styles.circlePatternOne} />\n            <img src={CirclePattern} alt=\"pattern\" className={styles.circlePatternTwo} />\n            <div className={[styles.firstCircle, styles.circle].join(' ')}></div>\n            <div className={[styles.secondCircle, styles.circle].join(' ')}></div>\n            <div className={[styles.thirdCircle, styles.circle].join(' ')}></div>\n            <div className={[styles.fourthCircle, styles.circle].join(' ')}></div>\n            <div className={[styles.fifthCircle, styles.circle].join(' ')}></div>\n            <div className={[styles.sixthCircle, styles.circle].join(' ')}></div>\n            <div className={[styles.seventhCircle, styles.circle].join(' ')}></div>\n            <div className={[styles.eigthCircle, styles.circle].join(' ')}></div>\n            <div className={[styles.ninthCircle, styles.circle].join(' ')}></div>\n          </div>\n        </div>\n      </div>\n      <div className={styles.contactSection}>\n        <div className={styles.container}>\n          <h2>Contact</h2>\n          <Row className={styles.contactContainer }>\n            <Col className={styles.addressCol}>\n              <div className={styles.addressDetails}>\n                <h3>Get In Touch</h3>\n                <div className={styles.contactGroup}>\n                  <HiLocationMarker className={styles.icon} size=\"4em\" />\n                  <p>Landmark Towers, 5B Water Corporation Rd,Oniru Rd, Victoria Island 101241, Lagos</p>\n                </div>\n                <div className={styles.contactGroup}>\n                  <HiMail className={styles.icon} size=\"1.8em\" />\n                  <p>hello@gypsycapital.com</p>\n                </div>\n                <div className={styles.contactGroup}>\n                  <HiPhone className={styles.icon} size=\"1.8em\" />\n                  <p>+234 809 9907 888</p>\n                </div>\n                <div className={styles.contactGroup}>\n                  <IoLogoWhatsapp className={styles.icon} size=\"1.8em\" />\n                  <p>+234 809 9907 888</p>\n                </div>\n              </div>\n            </Col>\n            <Col>\n              <div className={styles.contactForm}>\n                <h3>Send Us A Message</h3>\n                <div className={styles.inputWrapper}>\n                  <InputField \n                    placeholder=\"Name\"\n                    name=\"name\"\n                    type=\"text\"\n                    value={contactInfo.name}\n                    changed={(val) => setContactInfo({...contactInfo, name: val})}\n                  />\n                </div>\n                <div className={styles.inputWrapper}>\n                  <InputField \n                    placeholder=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    value={contactInfo.email}\n                    changed={(val) => setContactInfo({...contactInfo, email: val})}\n                  />\n                </div>\n                <div className={styles.inputWrapper}>\n                  <InputField \n                    placeholder=\"Subject\"\n                    name=\"subject\"\n                    type=\"text\"\n                    value={contactInfo.subject}\n                    changed={(val) => setContactInfo({...contactInfo, subject: val})}\n                  />\n                </div>\n                <div className={styles.inputWrapper}>\n                  <InputField \n                    type=\"textarea\"\n                    nameAttr=\"message\"\n                    placeholder=\"Message\"\n                    value={contactInfo.message}\n                    changed={(val) => setContactInfo({ ...contactInfo, message: val })}\n                  />\n                </div>\n                <button>\n                  Submit\n                </button>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </div>\n      <div className={styles.subFooter}></div>\n      <Footer />\n    </>\n  )\n}\n\n\nexport default HomePage;","/home/tga/Desktop/gypsy-capital/src/pages/MonoWidget/MonoWidget.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/ProgressBar/ProgressBar.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/NavBar/NavBar.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/LoanCalculatorForm/LoanCalculatorForm.jsx",["316"],"import React, { useState, useEffect, useContext } from 'react';\nimport styles from './LoanCalculatorForm.module.scss';\nimport InputField from '../InputField/InputField';\nimport Button from '../Button/Button';\nimport { Row, Col } from 'react-bootstrap';\nimport { validateInput } from '../../utils/validateInput';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Context as LoanContext } from '../../context/LoanContext';\nimport { Context as AuthContext } from '../../context/AuthContext';\n\n\nconst LoanCalculatorForm = () => {\n\n  const { state: { loading }, loanApply } = useContext(LoanContext);\n  const { state: { user } } = useContext(AuthContext);\n\n  const [daysOfMonth, setDaysOfMonth] = useState([]);\n  const [limitError, setLimitError] = useState(null);\n  const [loanCalcData, setLoanCalcData] = useState({\n    monthlySalary: \"\",\n    payDay: \"\",\n    loanAmount: \"\",\n    installmentPeriod: \"\",\n    loanPurpose: \"\",\n    estimatedMonthlyPayment: \"\"\n  });\n\n  const [loanCalcDataErrors, setLoanCalcDataErrors] = useState({\n    monthlySalary: null,\n    payDay: null,\n    loanAmount: null,\n    installmentPeriod: null,\n    loanPurpose: null\n  });\n\n  useEffect(() => {\n    setDaysOfMonth(fillUpDaysArray);\n  }, [])\n\n  const fillUpDaysArray = () => {\n    let daysArray = [];\n    for(let i=0; i < 31; i++) {\n      daysArray.push(i+1)\n    }\n    return daysArray;\n  }\n\n  const { monthlySalary, loanAmount, installmentPeriod, payDay, loanPurpose } = loanCalcData;\n\n  useEffect(() => {\n    if(monthlySalary && loanAmount && installmentPeriod) {\n      // console.log(typeof monthlySalary, typeof loanAmount, installmentPeriod);\n      const tenor = Number(installmentPeriod.split(' ')[0]);\n      let initRate = Number(loanAmount);\n      let toRepay = initRate + (initRate * 0.04);\n      toRepay = toRepay + (toRepay * 0.04 * tenor)\n      // for(let i=0; i < tenor; i++) {\n      //   toRepay = initRate + (initRate * 0.04);\n      //   initRate = toRepay;\n      // }\n      const monthlyRepay = toRepay / tenor;\n      console.log(monthlyRepay)\n      if(monthlyRepay > (0.333 * Number(monthlySalary))) {\n        setLimitError('You are not eligible for this amount, kindly enter a lower loan amount');\n      } else {\n        setLimitError(null)\n      }\n      setLoanCalcData({ ...loanCalcData, estimatedMonthlyPayment: Math.floor(monthlyRepay) })\n    }\n  }, [monthlySalary, loanAmount, installmentPeriod])\n\n  const submitLoanCalcData = () => {\n    console.log('works');\n    const fieldsTovalidate = { monthlySalary, payDay, loanAmount, installmentPeriod, loanPurpose }\n    const validated = validateInput(fieldsTovalidate, setLoanCalcDataErrors);\n    if(validated) {\n      const applyData = {\n        monthlySalary,\n        payDay,\n        amount: loanAmount,\n        paymentPeriod: installmentPeriod,\n        loanPurpose,\n        monthlyRepayment: loanCalcData.estimatedMonthlyPayment\n      }\n      console.log(applyData);\n      limitError ? toast.error(limitError) : loanApply(applyData, user.user_id);\n    }\n  }\n\n  if(daysOfMonth.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={styles.calculatorForm}>\n      <ToastContainer position=\"top-center\" />\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            label=\"Monthly Salary\" \n            type=\"number\" \n            nameAttr=\"salary\"\n            value={loanCalcData.monthlySalary}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, monthlySalary: null })\n              setLoanCalcData({ ...loanCalcData, monthlySalary: val })\n            }}\n            error={loanCalcDataErrors.monthlySalary && loanCalcDataErrors.monthlySalary}\n          />\n        </Col>\n        <Col>\n          <InputField \n            label=\"Pay Day\"\n            type=\"select\"\n            options={daysOfMonth}\n            nameAttr=\"payday\"\n            value={loanCalcData.payDay}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, payDay: null })\n              setLoanCalcData({ ...loanCalcData, payDay: val })\n            }}\n            error={loanCalcDataErrors.payDay && loanCalcDataErrors.payDay}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            label=\"Loan Amount\" \n            type=\"number\" \n            nameAttr=\"loanAmt\"\n            value={loanCalcData.loanAmount}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, loanAmount: null })\n              setLoanCalcData({ ...loanCalcData, loanAmount: val })\n            }}\n            error={loanCalcDataErrors.loanAmount && loanCalcDataErrors.loanAmount}\n          />\n          <p className={styles.inputHint}>\n            <span>min amt:</span> #50,000; <span>max amt:</span> #500,000\n          </p>\n        </Col>\n        <Col>\n          <InputField \n            label=\"Installment Period\"\n            type=\"select\"\n            options={['1 Month', '2 Months', '3 Months']}\n            nameAttr=\"installmentCycle\"\n            value={loanCalcData.installmentPeriod}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, installmentPeriod: null })\n              setLoanCalcData({ ...loanCalcData, installmentPeriod: val })\n            }}\n            error={loanCalcDataErrors.installmentPeriod && loanCalcDataErrors.installmentPeriod}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            label=\"Loan Purpose\"\n            type=\"select\"\n            options={[\n              'Debt Consolidation',\n              'Home Remodelling',\n              'Moving Costs',\n              'Emergency Expenses',\n              'Medical Bills',\n              'Education',\n              'Appliance Purchase',\n              'Vehicle Financing',\n              'Vacation Costs',\n              'Wedding Expenses',\n              'Others'\n            ]}\n            nameAttr=\"loanPurpose\"\n            value={loanCalcData.loanPurpose}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, loanPurpose: null })\n              setLoanCalcData({ ...loanCalcData, loanPurpose: val })\n            }}\n            error={loanCalcDataErrors.loanPurpose && loanCalcDataErrors.loanPurpose}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Estimated Monthly Payment\"\n            nameAttr=\"monthlyPayment\"\n            value={loanCalcData.estimatedMonthlyPayment}\n            disable={true}\n            changed={(val) => {\n              setLoanCalcDataErrors({ ...loanCalcDataErrors, estimatedMonthlyPayment: null })\n              setLoanCalcData({ ...loanCalcData, estimatedMonthlyPayment: val })\n            }}\n            error={loanCalcDataErrors.estimatedMonthlyPayment && loanCalcDataErrors.estimatedMonthlyPayment}\n          />\n          <p className={styles.inputHint}>\n            <span>Eventual repayment amount may differ after risk assessment.</span>\n          </p>\n          { limitError && <p className={styles.limitError}>{limitError}</p> }\n        </Col>\n      </Row>\n      <Button \n        className=\"mt-5\" \n        fullWidth \n        clicked={submitLoanCalcData} \n        bgColor=\"#741763\" \n        size=\"lg\" \n        color=\"#EBEBEB\"\n        disabled={loading}\n        loading={loading}\n      >\n        Continue\n      </Button>\n    </div>\n  )\n}\n\n\nexport default LoanCalculatorForm;","/home/tga/Desktop/gypsy-capital/src/components/LoanContactForm/LoanContactForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/EmployerInfoForm/EmployerInfoForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/BankInfoForm/BankInfoForm.jsx",["317","318","319"],"import React, { useState, useRef, useMemo, useContext, useEffect } from 'react';\nimport styles from './BankInfoForm.module.scss';\nimport { Row, Col } from 'react-bootstrap';\nimport InputField from '../InputField/InputField';\nimport FileUploadButton from '../FileUploadButton/FileUploadButton';\nimport { FaCloudUploadAlt } from 'react-icons/fa';\nimport Button from '../Button/Button';\nimport { Context as BankContext } from '../../context/BankCotext';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { Context as LoanContext } from '../../context/LoanContext';\nimport { validateInput } from '../../utils/validateInput';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\nconst BankInfoForm = () => {\n\n  const { state: { user } } = useContext(AuthContext);\n  const { state: { loading }, addBankInfoForLoan } = useContext(LoanContext);\n\n  const { \n    state: { bankList, userBankDetails }, \n    getBankList, \n    verifyBankInfo,\n  } = useContext(BankContext);\n\n  const [bankInfo, setBankInfo] = useState({\n    bankName: \"\",\n    accountType: \"\",\n    accountNumber: \"\",\n    accountName: \"\",\n  })\n\n  const [bankErrors, setBankErrors] = useState({\n    bankName: null,\n    accountType: null,\n    accountNumber: null,\n  })\n\n  useEffect(() => {\n    (async() => {\n      await getBankList();\n    })()\n  }, [])\n \n  const bankNames = useMemo(() => {\n    return bankList ? \n      bankList.map((bank) => bank.name) :\n      []\n  }, [bankList])\n\n  const acctStatementRef = useRef();\n\n  const uploadBankInfo = () => {\n    if(acctStatementRef.current.files.length > 0) {\n      const acctStatement = acctStatementRef.current.files[0];\n      const validated = validateInput(bankInfo, setBankErrors);\n      if(validated) {\n        // console.log('validated')\n        const data = new FormData();\n        data.append('bank_name', bankInfo.bankName);\n        data.append('bank_account_type', bankInfo.accountType);\n        data.append('bank_account_number', bankInfo.accountNumber);\n        data.append('bank_account_name', bankInfo.accountName);\n        data.append('image', acctStatement);\n\n        addBankInfoForLoan(data, user.user_id);\n      }\n    } else {\n      toast.error(\"You need to upload your account statement to be able to proceed\")\n    }\n  }\n\n  useEffect(() => {\n    if(bankInfo.accountNumber.length === 10 && bankInfo.bankName) {\n      const bank = bankList.find(bank => bank.name.toLowerCase() === bankInfo.bankName);\n      const bankCode = bank.code;\n      console.log(bankCode)\n      verifyBankInfo(bankInfo.accountNumber, bankCode)\n    }\n  }, [bankInfo.accountNumber, bankInfo.bankName])\n\n  useEffect(() => {\n    console.log(userBankDetails);\n    if(userBankDetails) {\n      setBankInfo({ ...bankInfo, accountName: userBankDetails.account_name })\n    }\n  }, [userBankDetails]);\n\n  return (\n    <div className={styles.bankInfo}>\n      <ToastContainer position=\"top-center\" />\n      <p className={styles.importantInfo}>Bank account provided must be your salary account</p>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"select\"\n            nameAttr=\"bankName\"\n            label=\"Bank Name\"\n            options={bankNames}\n            value={bankInfo.bankName}\n            changed={(val) => {\n              setBankErrors({ ...bankErrors, bankName: null })\n              setBankInfo({ ...bankInfo, bankName: val })\n            }}\n            error={bankErrors.bankName && bankErrors.bankName}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"select\"\n            nameAttr=\"accountType\"\n            label=\"Bank Account Type\"\n            options={['Savings', 'Current']}\n            value={bankInfo.accountType}\n            changed={(val) => {\n              setBankErrors({ ...bankErrors, accountType: null })\n              setBankInfo({ ...bankInfo, accountType: val })\n            }}\n            error={bankErrors.accountType && bankErrors.accountType}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            nameAttr=\"acctNumber\"\n            label=\"Account Number\"\n            value={bankInfo.accountNumber}\n            changed={(val) => {\n              setBankErrors({ ...bankErrors, accountNumber: null })\n              setBankInfo({ ...bankInfo, accountNumber: val })\n            }}\n            error={bankErrors.accountNumber && bankErrors.accountNumber}\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"type\"\n            nameAttr=\"acctName\"\n            label=\"Account Name\"\n            value={bankInfo.accountName}\n            disable={true}\n            changed={(val) => setBankInfo({ ...bankInfo, accountName: val })}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <FileUploadButton \n            label=\"Choose file\"\n            icon={<FaCloudUploadAlt className=\"ml-3\" size=\"1.2em\" />}\n            id=\"acct-statement-upload\" \n            fileRef={acctStatementRef}\n            visibleLabel=\"Statement of Account\"\n            fullwidth\n          />\n          <p className={styles.inputHint}>Please provide your 6 months bank statement to us.</p>\n        </Col>\n      </Row>\n      <Button \n        className=\"mt-5\" \n        fullWidth \n        clicked={uploadBankInfo} \n        bgColor=\"#741763\" \n        size=\"lg\" \n        color=\"#EBEBEB\"\n        disabled={loading}\n        loading={loading}\n      >\n        Submit\n      </Button>\n    </div>\n  )\n}\n\nexport default BankInfoForm;","/home/tga/Desktop/gypsy-capital/src/components/PersonalForm/PersonalForm.jsx",["320","321","322","323"],"import React, { useState, useContext, useEffect, useMemo } from 'react';\nimport styles from './PersonalForm.module.scss';\nimport { Row, Col } from 'react-bootstrap';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport InputField from '../InputField/InputField';\nimport Button from '../Button/Button';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { nigeriaStates } from '../../utils/nigeriaStates';\nimport { Context as BankContext } from '../../context/BankCotext';\nimport { validateInput } from '../../utils/validateInput';\n\n\nconst PersonalForm = ({ submit }) => {\n\n  const { \n    state: { bankList, userBankDetails }, \n    getBankList, \n    verifyBankInfo,\n  } = useContext(BankContext);\n  const { state: { user } } = useContext(AuthContext);\n  const {\n    state: { userDetails, loading },\n    getClientDetails\n  } = useContext(UserContext);\n\n  useEffect(() => {\n    (async() => {\n      await getClientDetails(user.user_id);\n      await getBankList();\n    })()\n  }, [])\n \n  const bankNames = useMemo(() => {\n    return bankList ? \n      bankList.map((bank) => bank.name) :\n      []\n  }, [bankList])\n\n\n  const [biodata, setBiodata] = useState({\n    fullName: '',\n    dateOfBirth: '',\n    bvnPhoneNo: '',\n    email: '',\n    phoneNo: '',\n    altPhone: '',\n    gender: ''\n  });\n  const [biodataErrors, setBiodataErrors] = useState({\n    fullName: null,\n    dateOfBirth: null,\n    bvnPhoneNo: null,\n    email: null,\n    phoneNo: null,\n    altPhone: null,\n    gender: null\n  });\n  const [residentialInfo, setResidentialInfo] = useState({\n    street: '',\n    city: '',\n    state: ''\n  });\n  const [residentialErrors, setResidentialErrors] = useState({\n    street: null,\n    city: null,\n    state: null\n  })\n  const [kinInfo, setKinInfo] = useState({\n    fullName: '',\n    relationship: '',\n    email: '',\n    phoneNo: '',\n    address: ''\n  });\n  const [kinErrors, setKinErrors] = useState({\n    fullName: null,\n    relationship: null,\n    email: null,\n    phoneNo: null,\n    address: null\n  });\n  const [bankInfo, setBankInfo] = useState({\n    bankName: '',\n    accountType: '',\n    accountNumber: '',\n    accountName: ''\n  });\n  const [bankInfoErrors, setBankInfoErrors] = useState({\n    bankName: null,\n    accountType: null,\n    accountNumber: null,\n    accountName: null\n  })\n\n  useEffect(() => {\n    if(bankInfo.accountNumber.length === 10 && bankInfo.bankName) {\n      const bank = bankList.find(bank => bank.name.toLowerCase() === bankInfo.bankName);\n      const bankCode = bank.code;\n      console.log(bankCode)\n      verifyBankInfo(bankInfo.accountNumber, bankCode)\n    }\n  }, [bankInfo.accountNumber, bankInfo.bankName])\n\n\n  useEffect(() => {\n    console.log(userBankDetails);\n    if(userBankDetails) {\n      setBankInfo({ ...bankInfo, accountName: userBankDetails.account_name })\n    }\n  }, [userBankDetails]);\n\n\n  const handleSubmit = () => {\n    const validatedBiodata = validateInput(biodata, setBiodataErrors);\n    const validatedResidence = validateInput(residentialInfo, setResidentialErrors);\n    const validatedKinInfo = validateInput(kinInfo, setKinErrors)\n    const validatedBankInfo = validateInput(bankInfo, setBankInfoErrors)\n    if(validatedBiodata && validatedResidence && validatedKinInfo && validatedBankInfo) {\n      submit(biodata, residentialInfo, kinInfo, bankInfo)\n    }\n  }\n\n\n  useEffect(() => {\n    if(user && userDetails) {\n      const { bioData } = userDetails;\n      setBiodata({ ...biodata, \n        fullName: `${user.firstName} ${user.lastName}`,\n        email: user.email,\n        phoneNo: user.phoneNumber.replace('234', '0'),\n        dateOfBirth: bioData.DOB,\n        bvnPhoneNo: bioData.bvnPhoneNumber\n      })\n    }\n  }, [user, userDetails])\n\n  if(!userDetails) {\n    return null\n  }\n\n  return (\n    <div className={styles.personalInfo}>\n      <div className={styles.biodata}>\n        <h3>Biodata Information</h3>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"Full name\"\n              type=\"text\"\n              nameAttr=\"fullname\"\n              value={biodata.fullName}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, fullName: null })\n                setBiodata({ ...biodata, fullName: val})\n              }}\n              error={biodataErrors.fullName && biodataErrors.fullName}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Date of Birth\"\n              type=\"text\"\n              nameAttr=\"dob\"\n              value={biodata.dateOfBirth}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, dateOfBirth: null })\n                setBiodata({ ...biodata, dateOfBirth: val})\n              }}\n              error={biodataErrors.dateOfBirth && biodataErrors.dateOfBirth}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"BVN-linked Phone Number\"\n              type=\"text\"\n              nameAttr=\"bvnPhoneNo\"\n              value={biodata.bvnPhoneNo}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, bvnPhoneNo: null })\n                setBiodata({ ...biodata, bvnPhoneNo: val})\n              }}\n              error={biodataErrors.bvnPhoneNo && biodataErrors.bvnPhoneNo}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Email\"\n              type=\"email\"\n              nameAttr=\"email\"\n              value={biodata.email}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, email: null })\n                setBiodata({ ...biodata, email: val})\n              }}\n              error={biodataErrors.email && biodataErrors.email}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"Phone Number\"\n              type=\"text\"\n              nameAttr=\"PhoneNo\"\n              value={biodata.phoneNo}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, phoneNo: null })\n                setBiodata({ ...biodata, phoneNo: val})\n              }}\n              error={biodataErrors.phoneNo && biodataErrors.phoneNo}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Alternative Phone Number\"\n              type=\"text\"\n              nameAttr=\"altPhoneNo\"\n              value={biodata.altPhone}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, altPhone: null })\n                setBiodata({ ...biodata, altPhone: val})\n              }}\n              error={biodataErrors.altPhone && biodataErrors.altPhone}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <InputField \n              label=\"Gender\"\n              type=\"select\"\n              options={['Female', 'Male', 'Other']}\n              nameAttr=\"gender\"\n              value={biodata.gender}\n              changed={(val) => {\n                setBiodataErrors({ ...biodataErrors, gender: null })\n                setBiodata({ ...biodata, gender: val})\n              }}\n              error={biodataErrors.gender && biodataErrors.gender}\n            />\n          </Col>\n        </Row>\n      </div>\n      <div className={styles.residentialInfo}>\n        <h3>Residential Address</h3>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"Street\"\n              type=\"text\"\n              nameAttr=\"residentStreet\"\n              value={residentialInfo.street}\n              changed={(val) => {\n                setResidentialErrors({ ...residentialErrors, street: null })\n                setResidentialInfo({ ...residentialInfo, street: val})\n              }}\n              error={residentialErrors.street && residentialErrors.street}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <InputField \n              label=\"City\"\n              type=\"text\"\n              nameAttr=\"city\"\n              value={residentialInfo.city}\n              changed={(val) => {\n                setResidentialErrors({ ...residentialErrors, city: null })\n                setResidentialInfo({ ...residentialInfo, city: val})\n              }}\n              error={residentialErrors.city && residentialErrors.city}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"State\"\n              type=\"select\"\n              options={nigeriaStates}\n              nameAttr=\"state\"\n              value={residentialInfo.state}\n              changed={(val) => {\n                setResidentialErrors({ ...residentialErrors, state: null })\n                setResidentialInfo({ ...residentialInfo, state: val})\n              }}\n              error={residentialErrors.state && residentialErrors.state}\n            />\n          </Col>\n        </Row>\n      </div>\n      <div className={styles.kinInfo}>\n        <h3>Next of Kin Information</h3>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"Full name\"\n              type=\"text\"\n              nameAttr=\"kinFullname\"\n              value={kinInfo.fullName}\n              changed={(val) => {\n                setKinErrors({ ...kinErrors, fullName: null })\n                setKinInfo({ ...kinInfo, fullName: val})\n              }}\n              error={kinErrors.fullName && kinErrors.fullName}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Relationship\"\n              type=\"text\"\n              nameAttr=\"kinRelationship\"\n              value={kinInfo.relationship}\n              changed={(val) => {\n                setKinErrors({ ...kinErrors, relationship: null })\n                setKinInfo({ ...kinInfo, relationship: val})\n              }}\n              error={kinErrors.relationship && kinErrors.relationship}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              label=\"Email Address\"\n              type=\"email\"\n              nameAttr=\"kinEmail\"\n              value={kinInfo.email}\n              changed={(val) => {\n                setKinErrors({ ...kinErrors, email: null })\n                setKinInfo({ ...kinInfo, email: val})\n              }}\n              error={kinErrors.email && kinErrors.email}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Phone Number\"\n              type=\"text\"\n              nameAttr=\"kinPhone\"\n              value={kinInfo.phoneNo}\n              changed={(val) => {\n                setKinErrors({ ...kinErrors, phoneNo: null })\n                setKinInfo({ ...kinInfo, phoneNo: val})\n              }}\n              error={kinErrors.phoneNo && kinErrors.phoneNo}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <InputField \n              label=\"Residential Address\"\n              type=\"text\"\n              nameAttr=\"kinAddress\"\n              placeholder=\"Street address to the nearest bus stop\"\n              value={kinInfo.address}\n              changed={(val) => {\n                setKinErrors({ ...kinErrors, address: null })\n                setKinInfo({ ...kinInfo, address: val})\n              }}\n              error={kinErrors.address && kinErrors.address}\n            />\n          </Col>\n        </Row>\n      </div>\n      <div className={styles.bankInfo}>\n        <h3>Bank Information</h3>\n        <p>Please provide a bank account where we can send your investment proceeds or loan requests to.</p>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"select\"\n              label=\"Bank\"\n              options={bankNames}\n              nameAttr=\"bank\"\n              value={bankInfo.bankName}\n              changed={(val) => {\n                setBankInfoErrors({ ...bankInfoErrors, bankName: null })\n                setBankInfo({ ...bankInfo, bankName: val})\n              }}\n              error={bankInfoErrors.bankName && bankInfoErrors.bankName}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Account Type\"\n              type=\"select\"\n              options={[\"Savings\", \"Current\"]}\n              nameAttr=\"acountType\"\n              value={bankInfo.accountType}\n              changed={(val) => {\n                setBankInfoErrors({ ...bankInfoErrors, accountType: null })\n                setBankInfo({ ...bankInfo, accountType: val})\n              }}\n              error={bankInfoErrors.accountType && bankInfoErrors.accountType}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Account Number\"\n              nameAttr=\"accountNo\"\n              value={bankInfo.accountNumber}\n              changed={(val) => {\n                setBankInfoErrors({ ...bankInfoErrors, accountNumber: null })\n                setBankInfo({ ...bankInfo, accountNumber: val})\n              }}\n              error={bankInfoErrors.accountNumber && bankInfoErrors.accountNumber}\n            />\n          </Col>\n          <Col>\n            <InputField \n              label=\"Account Name\"\n              type=\"text\"\n              nameAttr=\"accountName\"\n              value={bankInfo.accountName}\n              changed={(val) => {\n                setBankInfoErrors({ ...bankInfoErrors, accountName: null })\n                setBankInfo({ ...bankInfo, accountName: val})\n              }}\n              error={bankInfoErrors.accountName && bankInfoErrors.accountName}\n            />\n          </Col>\n        </Row>\n      </div>\n      <Button \n        className=\"mt-4\" \n        clicked={handleSubmit} \n        loading={loading}\n        disabled={loading}\n        fullWidth \n        bgColor=\"#741763\" \n        size=\"lg\" \n        color=\"#EBEBEB\"\n      >\n        Save & Continue\n      </Button>\n    </div>\n  )\n}\n\nexport default PersonalForm;","/home/tga/Desktop/gypsy-capital/src/index.js",[],["324","325"],"/home/tga/Desktop/gypsy-capital/src/utils/history.js",[],"/home/tga/Desktop/gypsy-capital/src/context/UserContext.js",[],"/home/tga/Desktop/gypsy-capital/src/context/BankCotext.js",[],"/home/tga/Desktop/gypsy-capital/src/context/createDataContext.js",["326"],"import React, {createContext, useReducer } from 'react';\n\n\nexport default (reducer, actions, initialState, persist, saveData) => {\n  const Context = createContext();\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    const boundActions = {}\n\n    for(let key in actions) {\n      boundActions[key] = actions[key](dispatch);\n    }\n\n    return (\n      <Context.Provider value={{ state, ...boundActions }}>{children}</Context.Provider>\n    )\n  }\n\n  return { Context, Provider }\n}","/home/tga/Desktop/gypsy-capital/src/pages/CreditReport/CreditReport.jsx",["327","328","329"],"import React from 'react';\nimport styles from './CreditReport.module.scss';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport { clientRoutes } from '../../routes/sidebarRoutes';\nimport { useRouteMatch, Link, useLocation } from 'react-router-dom';\n\n\nconst CreditReport = () => {\n\n  const { url } = useRouteMatch();\n  const location = useLocation();\n\n  return (\n    <Dashboard sidebarRoutes={clientRoutes} location={location}>\n\n    </Dashboard>\n  )\n}\n\n\nexport default CreditReport;","/home/tga/Desktop/gypsy-capital/src/pages/ContactPage/ContactPage.jsx",["330","331"],"import React, { useState } from 'react';\nimport {Row, Col} from 'react-bootstrap';\nimport styles from './ContactPage.module.scss';\nimport NavBar from '../../components/NavBar/NavBar';\nimport { HiLocationMarker, HiMail, HiPhone } from 'react-icons/hi';\nimport { IoLogoWhatsapp } from 'react-icons/io';\nimport Footer from '../../components/Footer/Footer';\nimport InputField from '../../components/InputField/InputField';\nimport { useRouteMatch, Link } from 'react-router-dom';\n\n\nconst ContactPage = ({ history }) => {\n\n  const { url } = useRouteMatch();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    subject: '',\n    message: ''\n  });\n\n  return (\n    <>\n      <NavBar history={history} location={url} />\n      <div className={styles.heroSection}>\n        <div className={styles.container}>\n          <h2>Contact Us</h2>\n        </div>\n        <div className={styles.bgOverlay}></div>\n      </div>\n      <div className={styles.mapSection}>\n        <div className={styles.container}>\n          <iframe\n              className={styles.map}\n              frameBorder={0}\n              scrolling=\"no\"\n              marginHeight={0}\n              marginWidth={0}\n              src=\"https://maps.google.com/maps?hl=en&amp;q=Landmark%20Towers,%205B%20Water%20Corporation%20Rd,Oniru%20Rd,%20Victoria%20Island%20101241,%20Lagos+(Gypsy%20Capital)&amp;t=&amp;z=15&amp;ie=UTF8&amp;iwloc=B&amp;output=embed\"\n            >\n            </iframe>\n        </div>\n      </div>\n      <div className={styles.contactSection}>\n        <div className={styles.container}>\n          <Row>\n            <Col md={7}>\n              <div className={styles.contactForm}>\n                <h3>Send Us A Message</h3>\n                <Row className=\"mb-4\">\n                  <Col>\n                    <InputField \n                      type=\"text\"\n                      placeholder=\"Name\"\n                      nameAttr=\"name\"\n                      value={formData.name}\n                      changed={(val) => setFormData({ ...formData, name: val })}\n                    />\n                  </Col>\n                  <Col>\n                    <InputField \n                      type=\"email\"\n                      placeholder=\"Email\"\n                      nameAttr=\"email\"\n                      value={formData.email}\n                      changed={(val) => setFormData({ ...formData, email: val })}\n                    />\n                  </Col>\n                </Row>\n                <Row className=\"mb-4\">\n                  <Col>\n                    <InputField \n                      type=\"text\"\n                      placeholder=\"Subject\"\n                      nameAttr=\"subject\"\n                      value={formData.subject}\n                      changed={(val) => setFormData({ ...formData, subject: val })}\n                    />\n                  </Col>\n                </Row>\n                <Row className=\"mb-4\">\n                  <Col>\n                    <InputField \n                      type=\"textarea\"\n                      placeholder=\"Message\"\n                      nameAttr=\"message\"\n                      value={formData.message}\n                      changed={(val) => setFormData({ ...formData, message: val })}\n                    />\n                  </Col>\n                </Row>\n                <button>\n                  Submit\n                </button>\n              </div>\n            </Col>\n            <Col md={5}>\n              <div className={styles.addressBox}>\n                <h3>Get In Touch</h3>\n                <div className={styles.addressGroup}>\n                  <HiLocationMarker className={styles.icon} size=\"4em\" />\n                  <p>Landmark Towers, 5B Water Corporation Rd,Oniru Rd, Victoria Island 101241, Lagos</p>\n                </div>\n                <div className={styles.addressGroup}>\n                  <HiMail className={styles.icon} size=\"1.8em\" />\n                  <p>hello@gypsycapital.com</p>\n                </div>\n                <div className={styles.addressGroup}>\n                  <HiPhone className={styles.icon} size=\"1.8em\" />\n                  <p>+234 809 9907 888</p>\n                </div>\n                <div className={styles.addressGroup}>\n                  <IoLogoWhatsapp className={styles.icon} size=\"1.8em\" />\n                  <p>+234 809 9907 888</p>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </div>\n      <Footer />\n    </>\n\n  )\n}\n\n\nexport default ContactPage;","/home/tga/Desktop/gypsy-capital/src/components/Dashboard/Dashboard.jsx",["332"],"import React, { useContext, useState } from 'react';\nimport styles from './Dashboard.module.scss';\nimport { Row, Col } from 'react-bootstrap';\nimport Logo from '../../assets/logo-white.png';\nimport Button from '../../components/Button/Button';\nimport { FaSearch } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport { MdNotificationsNone } from 'react-icons/md';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport placeholderAvatar from '../../assets/placeholder.png';\n\n\nconst Dashboard = ({ children, sidebarRoutes, location }) => {\n\n  console.log(location)\n\n  const { logout } = useContext(AuthContext);\n  const signout = () => {\n    logout();\n  }\n\n  const role = \"sales\";\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  return(\n    <div className={styles.container}>\n      <Row className={styles.header}>\n        <Col className={styles.logoGrid} sm={3}>\n          <img src={Logo} alt=\"Gypsy Logo\" width={150} />\n        </Col>\n        <Col className={styles.altNavGrid} sm={9}>\n          { role && role === \"client\" ? \n          <>\n            <MdNotificationsNone size=\"2em\" className=\"mr-5\" color=\"#741763\" />\n            <Button clicked={signout} size=\"sm\" bgColor=\"#A0208931\" color=\"#212121\">Log out</Button>\n          </> : null\n          }\n          {\n            role && role === \"sales\" ?\n            <>\n              <div className={styles.searchBar}>\n                <FaSearch className={styles.searchIcon} />\n                <input \n                  type=\"text\"\n                  name=\"searchTerm\"\n                  placeholder=\"Search for customer by  name, number or BVN\"\n                  className={styles.searchTerm}\n                  value={searchTerm}\n                  onChange={(e) => {\n                    setSearchTerm(e.currentTarget.value)\n                  }}\n                />\n              </div>\n              <div className={styles.profileGroup}>\n                <MdNotificationsNone style={{ display: \"block\" }} size=\"2em\" className=\"mr-5\" color=\"#741763\" />\n                <div className={styles.profileAvi}>\n                  <img src={placeholderAvatar} alt=\"Profile Picture\" />\n                  <div className={styles.userInfo}>\n                    <p>Moses Emmanuel</p>\n                    <p>Sales agent</p>\n                  </div>\n                </div>\n              </div>\n            </> : null\n          }\n        </Col>\n      </Row>\n      <Row>\n        <Col className={styles.menuPanel} sm={3}>\n          <div className={styles.menuList}>\n            <ul>\n              { sidebarRoutes.map(route => {\n                if(location.pathname.includes(route.rootLink)) {\n                  return (\n                    <li className={[styles.activeMenu, \"mb-4\"].join(' ')}>\n                      <route.icon size=\"1.3em\" color=\"#741763\" />\n                      <Link className={styles.activeLink} to={route.link}>{route.label}</Link>\n                    </li>\n                  )\n                } else {\n                  return (\n                    <li className=\"mb-4\">\n                      <route.icon size=\"1.3em\" color=\"#fff\" />\n                      <Link to={route.link}>{route.label}</Link>\n                    </li>\n                  )\n                }\n              })}\n            </ul>\n          </div>\n        </Col>\n        <Col sm={9} className={styles.mainPanel}>\n          <div className={styles.mainContent}>\n            {children}\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\n\nexport default Dashboard;","/home/tga/Desktop/gypsy-capital/src/components/FileUploadButton/FileUploadButton.js",[],"/home/tga/Desktop/gypsy-capital/src/utils/resolveToken.js",["333"],"export default () => {\n    const gypsyData = localStorage.getItem('gypsy');\n    if (!gypsyData) return null;\n    let token = JSON.parse(gypsyData);\n    token = token.token;\n    return token;\n}","/home/tga/Desktop/gypsy-capital/src/pages/AgentOverview/AgentOverview.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/ClientListPage/ClientListPage.jsx",[],"/home/tga/Desktop/gypsy-capital/src/components/IdentityForm/IdentityForm.jsx",[],"/home/tga/Desktop/gypsy-capital/src/utils/validateInput.js",["334","335"],"export const validateInput = (inputValues, errorSetter) => {\n\n  const validMail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  let validPhoneNumber = /^[0]\\d{10}$/;\n\n  const errorsInit = {};\n  let fields = { ...inputValues }\n\n  for(const key in fields) {\n    if(!fields[key]) {\n      errorsInit[key] = \"This field is required\";\n    } \n    if(fields.email && !fields.email.match(validMail)) {\n      errorsInit.email = \"Please enter a valid email address\"\n    } \n    if(fields.phoneNo && !fields.phoneNo.match(validPhoneNumber)) {\n      errorsInit.phoneNo = \"Please enter a valid phone number\"\n    } \n  }\n\n  errorSetter(errorsInit);\n  console.log(errorsInit);\n  if(Object.entries(errorsInit).length === 0) {\n    return true;\n  } else {\n    return false;\n  }\n\n}","/home/tga/Desktop/gypsy-capital/src/components/FaqSection/FaqSection.jsx",["336"],"import React, {useEffect, useState} from 'react';\nimport styles from './FaqSection.module.scss';\nimport { useAccordionToggle, Accordion, Card, AccordionCollapse } from 'react-bootstrap';\nimport { FaPlus, FaMinus } from 'react-icons/fa';\nimport { limitFaqContent, faqContent } from '../../utils/nigeriaStates';\nimport { useHistory } from 'react-router';\n\n\nconst CustomToggle = ({ children, eventKey }) => {\n\n  const [open, setOpen] = useState(false);\n\n  const customOnClick = useAccordionToggle(eventKey, () => {\n    setOpen(!open);\n  })\n\n  return (\n    <div\n      className={styles.customAccordionHeader}\n      onClick={customOnClick}\n    >\n      { open ? \n        <FaMinus size=\"1.2em\" className={styles.icon} color=\"#741763\" /> : \n        <FaPlus size=\"1.2em\" className={styles.icon} color=\"#741763\" />\n      }\n      {children}\n    </div>\n  )\n}\n\nconst FaqSection = ({ returnNumber }) => {\n\n  const [faqs, setFaqs] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    if(typeof returnNumber === \"number\") {\n      setFaqs(limitFaqContent(returnNumber))\n    } else if(typeof returnNumber === \"string\" && returnNumber === 'all') {\n      setFaqs(faqContent)\n    }\n  }, [])\n\n  if(faqs.length === 0) {\n    return null\n  }\n\n  return (\n    <div className={styles.faqSection}>\n      <div className={styles.container}>\n        { returnNumber !== 'all' && <h2>Frequently Asked Questions</h2> }\n        <Accordion>\n          { faqs.map((faq, index) => (\n            <Card className={styles.accordionTab}>\n              <Card.Header>\n                <CustomToggle eventKey={index+1}>\n                  {faq.title}\n                </CustomToggle>\n              </Card.Header>\n              <AccordionCollapse eventKey={index+1}>\n                <Card.Body className={styles.cardBody}>\n                  {faq.bodyContent()}\n                </Card.Body>\n              </AccordionCollapse>\n            </Card>\n          ))}\n        </Accordion>\n        { returnNumber !== \"all\" && \n          <button onClick={() => history.push('/frequently-asked-questions')}>\n            View All\n          </button>\n        }\n      </div>\n    </div>\n  );\n}\n\n\nexport default FaqSection;",["337","338"],"/home/tga/Desktop/gypsy-capital/src/pages/Products/Products.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/pages.js",[],"/home/tga/Desktop/gypsy-capital/src/routes/protectedroute/ProtectedRoute.js",["339"],"import React, { useContext } from 'react';\nimport { Route, withRouter, Redirect } from 'react-router-dom';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport pageUrl from '../pageUrl';\n\nconst renderPage = (Component, props) => {\n  return <Route render={() => <Component {...props}/>} />\n}\n\n\nconst ProtectedRoute = ({component: Component, history, ...rest}) => {\n\n  const { state: { loggedIn, user } } = useContext(AuthContext);\n\n  console.log(loggedIn);\n\n  return (\n    <Route \n      {...rest}\n      render={(props) => {\n        return loggedIn ? \n          renderPage(Component, props) :\n          <Redirect \n            to={{\n              pathname: pageUrl.SIGNIN_PAGE,\n              state: { from: props.location }\n            }}\n          />\n      }}\n    />\n  )\n}\n\n\nexport default withRouter(ProtectedRoute);","/home/tga/Desktop/gypsy-capital/src/components/Button/Button.jsx",[],"/home/tga/Desktop/gypsy-capital/src/context/LoanContext.js",[],"/home/tga/Desktop/gypsy-capital/src/pages/SignIn/SignIn.jsx",["340"],"import React, { useState, useContext, useEffect } from 'react';\nimport Logo from '../../assets/logo.png';\nimport styles from './SignIn.module.scss';\nimport { Row, Col } from 'react-bootstrap';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport pageUrl from '../../routes/pageUrl';\nimport { Link } from 'react-router-dom';\nimport { Context as AuthContext } from '../../context/AuthContext';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { validateInput } from '../../utils/validateInput';\n\n\nconst SignIn = () => {\n\n  const { \n      state: { loading, error }, \n      loginUser, \n      getActiveUser, \n      clearErrors \n  } = useContext(AuthContext);\n\n  useEffect(() => {\n    if(error) {\n      toast.error(error);\n      clearErrors();\n    }\n  }, [error])\n\n  const [signinValues, setSigninValues] = useState({\n    email: '',\n    password: ''\n  });\n\n  const [signinErrors, setSigninErrors] = useState({\n    email: null,\n    password: null\n  });\n\n  const handleSubmit = () => {\n    console.log(signinValues);\n    const validated = validateInput(signinValues, setSigninErrors);\n    console.log(validated);\n    if(validated) {\n      loginUser({ email: signinValues.email, password: signinValues.password }, getActiveUser);\n    }\n  }\n\n  // useEffect(() => {\n  //   const listener = event => {\n  //     if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n  //       console.log(\"Enter key was pressed. Run your function.\");\n  //       handleSubmit();\n  //     }\n  //   };\n  //   document.addEventListener(\"keydown\", listener);\n  //   return () => {\n  //     document.removeEventListener(\"keydown\", listener);\n  //   };\n  // }, []);\n\n  return (\n    <div className={styles.container}>\n      <ToastContainer position=\"top-center\" />\n      <img src={Logo} alt=\"Gypsy Logo\" />\n      <h1>Login to your account</h1>\n      <div className={styles.loginBox}>\n        <Row>\n          <Col>\n            <InputField \n              type=\"email\"\n              label=\"Email\"\n              nameAttr=\"email\"\n              value={signinValues.email}\n              changed={(val) => {\n                setSigninErrors({ ...signinErrors, email: null })\n                setSigninValues({ ...signinValues, email: val })\n              }}\n              error={signinErrors.email && signinErrors.email}\n            />\n          </Col>\n        </Row>\n        <Row className=\"mt-3\">\n          <Col>\n            <InputField \n              type=\"password\"\n              label=\"Password\"\n              nameAttr=\"password\"\n              value={signinValues.password}\n              changed={(val) => {\n                setSigninErrors({ ...signinErrors, password: null })\n                setSigninValues({ ...signinValues, password: val })\n              }}\n              error={signinErrors.password && signinErrors.password}\n            />\n          </Col>\n        </Row>\n        <p className={styles.resetPassword}>Forgot password?</p>\n        <Button \n          clicked={handleSubmit} \n          fullWidth \n          className=\"mt-4\" \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n          disabled={loading}\n          loading={loading}\n        >\n          Login\n        </Button>\n        <p className={[styles.authLink, 'mt-3'].join(' ')}>\n          Don’t have an account? <Link to={pageUrl.SIGNUP_PAGE}>Register</Link>\n        </p>\n      </div>\n    </div>\n  );\n}\n\n\nexport default SignIn;","/home/tga/Desktop/gypsy-capital/src/pages/Faqs/Faqs.jsx",[],"/home/tga/Desktop/gypsy-capital/src/routes/sidebarRoutes.js",["341"],"import pageUrl from './pageUrl';\nimport { FiLayers } from 'react-icons/fi';\nimport { BiCreditCard } from 'react-icons/bi';\nimport { AiOutlineUser } from 'react-icons/ai';\nimport { GiTakeMyMoney, GiMoneyStack } from 'react-icons/gi';\nimport { FaUser } from 'react-icons/fa';\nimport { BiSupport } from 'react-icons/bi';\nimport { RiUser3Fill } from 'react-icons/ri';\n\n\nexport const clientRoutes = [\n  {\n      label: \"Dashboard\",\n      link: pageUrl.DASHBOARD_HOMEPAGE,\n      rootLink: pageUrl.DASHBOARD_HOMEPAGE,\n      icon: FiLayers\n    },\n    {\n      label: \"Consumer Credit\",\n      link: '/dashboard/consumer-credit/history',\n      rootLink: pageUrl.CONSUMER_CREDIT_PAGE,\n      icon: GiTakeMyMoney\n    },\n    {\n      label: \"Credit Report\",\n      link: pageUrl.CREDIT_REPORT_PAGE,\n      rootLink: pageUrl.CREDIT_REPORT_PAGE,\n      icon: BiCreditCard\n    },\n    {\n      label: \"Profile\",\n      link: pageUrl.PROFILE_PAGE,\n      rootLink: pageUrl.PROFILE_PAGE,\n      icon: AiOutlineUser\n    },\n]\n\n\nconst salesRoutes = [\n  {\n    label: \"Dashboard\",\n    link: pageUrl.SALES_AGENT_OVERVIEW,\n    rootLink: pageUrl.SALES_AGENT_OVERVIEW,\n    icon: FiLayers\n  },\n  {\n    label: \"Clients\",\n    link: pageUrl.CLIENT_LIST_PAGE,\n    rootLink: '/sales-agent/client',\n    icon: FaUser\n  },\n  {\n    label: \"Loans\",\n    link: pageUrl.LOAN_LIST_PAGE,\n    rootLink: '/sales-agent/loan',\n    icon: GiMoneyStack\n  }, \n  {\n    label: \"Support\",\n    link: pageUrl.SUPPORT_PAGE,\n    rootLink: pageUrl.SUPPORT_PAGE,\n    icon: BiSupport\n  }\n]\n\n\nexport const routes = [\n  clientRoutes,\n  salesRoutes\n]","/home/tga/Desktop/gypsy-capital/src/pages/LoanList/LoanList.jsx",["342"],"import React, { useState, useMemo } from 'react';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport styles from './LoanList.module.scss';\nimport { useLocation, Link } from 'react-router-dom';\nimport { routes } from '../../routes/sidebarRoutes';\nimport InputField from '../../components/InputField/InputField';\nimport moment from 'moment';\nimport { Table, Pagination } from 'react-bootstrap';\nimport { loanList } from '../../utils/dummyData';\nimport usePagination from '../../hooks/usePagination';\n\n\nconst LoanList = () => {\n\n  const location = useLocation();\n  const salesRoutes = routes[1];\n  const [filterInput, setFilterInput] = useState('');\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(5);\n\n   const {  \n     currentList,\n     items,\n     goToPrevPage,\n     goToNextPage\n   } = usePagination(currentPage, postsPerPage, loanList, setCurrentPage, styles);\n\n  return (\n    <Dashboard sidebarRoutes={salesRoutes} location={location}>\n      <div className={styles.welcomeGroup}>\n        <div>\n          <h2>Loans</h2>\n          <p className={styles.currentDate}>Today is {moment().format('dddd Do[,] MMMM')}.</p>\n        </div>\n      </div>\n      <div className={styles.loansTable}>\n        <div className={styles.filterInput}>\n          <p>Filter</p>\n          <div className={styles.inputWrapper}>\n            <InputField \n              type=\"select\"\n              options={['Active Loans', 'Pending Loans', 'Declined Loans', 'Expired Loans']}\n              nameAttr='filterInput'\n              value={filterInput}\n              changed={(val) => setFilterInput(val)}\n            />\n          </div>\n        </div>\n        <div className={styles.cardTable}>\n          <Table>\n            <thead>\n              <tr>\n                <th>Loan ID</th>\n                <th>Monthly Repayment</th>\n                <th>Tenure</th>\n                <th>Status</th>\n                <th>Repayment Source</th>\n                <th>Loan Amount</th>\n                <th>Balance</th>\n              </tr>\n            </thead>\n            <tbody>\n              { currentList.map((loan, idx) => (\n                <tr>\n                  <td className={styles.loanId}>\n                    <Link to=\"/sales-agent/loan/general\">\n                      {loan.loanId}\n                    </Link>\n                  </td>\n                  <td>{loan.monthlyRepayment}</td>\n                  <td>{loan.tenure}</td>\n                  <td>{loan.status}</td>\n                  <td>{loan.repaymentSource}</td>\n                  <td>{loan.loanAmt}</td>\n                  <td>{loan.balance}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <div className={styles.tableFooter}>\n            <div className={styles.rowsInput}>\n              <p>Rows per page: </p>\n              <select onChange={(e) => setPostsPerPage(Number(e.currentTarget.value))}>\n                <option value={5} selected>5</option>\n                <option value={10}>10</option>\n                <option value={15}>15</option>\n                <option value={20}>20</option>\n                <option value={10}>25</option>\n                <option value={30}>30</option>\n              </select>\n            </div>\n            <Pagination className={styles.pagination}>\n              <Pagination.Prev onClick={goToPrevPage}/>\n              {items}\n              <Pagination.Next onClick={goToNextPage} />\n            </Pagination>\n          </div>\n        </div>\n      </div>\n    </Dashboard>\n  )\n}\n\n\nexport default LoanList;","/home/tga/Desktop/gypsy-capital/src/pages/Support/Support.jsx",["343"],"import React from 'react';\nimport styles from './Support.module.scss';\n\n\nconst Support = () => {\n  return (\n    <>\n\n    </>\n  )\n}\n\n\nexport default Support;\n","/home/tga/Desktop/gypsy-capital/src/utils/dummyData.js",[],"/home/tga/Desktop/gypsy-capital/src/pages/ClientDetails/ClientDetails.jsx",["344","345","346","347","348","349","350","351"],"import React, { useState } from 'react';\nimport styles from './ClientDetails.module.scss';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport { routes } from '../../routes/sidebarRoutes';\nimport { useLocation } from 'react-router-dom';\nimport InputField from '../../components/InputField/InputField';\nimport { Row, Col, Table } from 'react-bootstrap';\nimport NavTabs from '../../components/NavTabs/NavTabs';\nimport Button from '../../components/Button/Button';\n\n\nconst Biodata = () => {\n\n  const [biodata, setBiodata] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    gender: \"\",\n    dateOfBirth: \"\",\n    emailAddress: \"\",\n    phoneNumber: \"\",\n    residentialStatus: \"\",\n    altPhoneNumber: \"\",\n    residentialAddress: \"\"\n  });\n\n  return (\n    <>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"First Name\"\n            nameAttr=\"firstName\"\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Last Name\"\n            nameAttr=\"lastName\"\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Gender\"\n            nameAttr=\"gender\"\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Date of Birth\"\n            nameAttr=\"dob\"\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"email\"\n            label=\"Email Address\"\n            nameAttr=\"emailAddress\"\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Phone Number\"\n            nameAttr=\"phoneNo\"\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Residential Status\"\n            nameAttr=\"residentStatus\"\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Alternative Phone Number\"\n            nameAttr=\"altPhoneNo\"\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Residential Address\"\n            nameAttr=\"homeAddress\"\n          />\n        </Col>\n      </Row>\n    </>\n  )\n}\n\n\nconst NextOfKin = () => {\n\n  const [nextOfKin, setNextOfKin] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    relationship: \"\" ,\n    phoneNumber: \"\",\n    residentialAddress: \"\"\n  });\n\n  return (\n    <>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"First Name\"\n            nameAttr=\"firstName\"\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Last Name\"\n            nameAttr=\"lastName\"\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Relationship\"\n            nameAttr=\"relationship\"\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Phone Number\"\n            nameAttr=\"phoneNo\"\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Residential Address\"\n            nameAttr=\"kinAddress\"\n          />\n        </Col>\n      </Row>\n    </>\n  )\n}\n\n\nconst Bank = () => {\n\n  const [disburseBank, setDisburseBank] = useState({\n    bankName: \"\",\n    accountType: \"\",\n    accountNumber: \"\",\n    accountName: \"\"\n  });\n\n  const [salaryBank, setSalaryBank] = useState({\n    bankName: \"\",\n    accountType: \"\",\n    accountNumber: \"\",\n    accountName: \"\"\n  });\n\n  return (\n    <>\n      <div className={styles.disburse}>\n        <h3>Disbursement Account</h3>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Bank Name\"\n              nameAttr=\"bankName\"\n            />\n          </Col>\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Account Type\"\n              nameAttr=\"accountType\"\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Account Number\"\n              nameAttr=\"accountNumber\"\n            />\n          </Col>\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Account Name\"\n              nameAttr=\"accountName\"\n            />\n          </Col>\n        </Row>\n      </div>\n      <div className={styles.salary}>\n        <h3>Salary Account</h3>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Bank Name\"\n              nameAttr=\"salaryBank\"\n            />\n          </Col>\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Account Type\"\n              nameAttr=\"salaryAcctType\"\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Account Number\"\n              nameAttr=\"salaryAcctNum\"\n            />\n          </Col>\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Account Name\"\n              nameAttr=\"salaryAcctName\"\n            />\n          </Col>\n        </Row>\n      </div>\n    </>\n  )\n}\n\n\nconst Employer = () => {\n  return (\n    <>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Employer Name\"\n            nameAttr=\"employerName\"\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Employment Date\"\n            nameAttr=\"employmentDate\"\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Employment Sector\"\n            nameAttr=\"employmentSector\"\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Employment Type\"\n            nameAttr=\"employmentType\"\n          />\n        </Col>\n      </Row>\n      <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Office Email Address\"\n            nameAttr=\"officeEmail\"\n          />\n        </Col>\n      </Row>\n      <div className={styles.officeAddress}>\n        <h3>Office Address</h3>\n        <Row className=\"mb-4\">\n          <Col>\n            <InputField \n              type=\"text\"\n              label=\"Street Address\"\n              nameAttr=\"streetAddress\"\n            />\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"City\"\n            nameAttr=\"city\"\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"State\"\n            nameAttr=\"state\"\n          />\n        </Col>\n        <Col>\n          <InputField \n            type=\"text\"\n            label=\"Local Government Area\"\n            nameAttr=\"lga\"\n          />\n        </Col>\n      </Row>\n      </div>\n    </>\n  )\n}\n\n\nconst ClientLoan = () => {\n  return (\n    <div className={styles.loanTable}>\n      <Button\n        size=\"sm\" \n        bgColor=\"#741763\" \n        color=\"#fff\"\n        className={styles.btn}\n      >\n        Apply for a Loan\n      </Button>\n      <div className={styles.tableCard}>\n        <Table className={styles.table}>\n          <thead>\n            <tr>\n              <th>Loan ID</th>\n              <th>Monthly Repayment</th>\n              <th>Tenure</th>\n              <th>Status</th>\n              <th>Repayment Source</th>\n              <th>Loan Amount</th>\n              <th>Balance</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>654780</td>\n              <td>N35,600</td>\n              <td>3 Months</td>\n              <td>Active</td>\n              <td>Salary</td>\n              <td>N145,000</td>\n              <td>N125,000</td>\n            </tr>\n          </tbody>\n        </Table>\n      </div>\n    </div>\n  )\n}\n\n\nconst ClientDetails = () => {\n\n  const salesRoute = routes[1];\n  const location = useLocation();\n\n  const [detailSection, setDetailSection] = useState('biodata');\n\n  const navArray = [\n    {\n      title: \"Biodata\",\n      shortlink: \"biodata\"\n    },\n    {\n      title: \"Next of Kin Info\",\n      shortlink: \"kin\"\n    },\n    {\n      title: \"Bank Info\",\n      shortlink: \"bank\"\n    },\n    {\n      title: \"Employment Info\",\n      shortlink: \"employ\"\n    },\n    {\n      title: \"Loans\",\n      shortlink: \"loans\"\n    },\n  ]\n\n  const setActiveTab = (link) => {\n    setDetailSection(link);\n  }\n\n  return (\n    <Dashboard sidebarRoutes={salesRoute} location={location}>\n      <NavTabs navs={navArray} setActive={setActiveTab} currentTab={detailSection} />\n      <div className={detailSection !== \"loans\" && styles.detailFields}>\n        { detailSection === \"biodata\" && <Biodata /> }\n        { detailSection === \"kin\" && <NextOfKin /> }\n        { detailSection === \"bank\" && <Bank /> }\n        { detailSection === \"employ\" && <Employer /> }\n        { detailSection === \"loans\" && <ClientLoan /> }\n      </div>\n    </Dashboard>\n  )\n}\n\n\nexport default ClientDetails;","/home/tga/Desktop/gypsy-capital/src/components/NavTabs/NavTabs.jsx",[],"/home/tga/Desktop/gypsy-capital/src/pages/LoanDetail/LoanDetail.jsx",[],"/home/tga/Desktop/gypsy-capital/src/hooks/usePagination.js",["352","353"],"/home/tga/Desktop/gypsy-capital/src/components/ModalForm/ModalForm.jsx",["354"],"import React, { useState } from 'react';\nimport styles from './ModalForm.module.scss';\nimport InputField from '../../components/InputField/InputField';\nimport { Row, Col, Modal } from 'react-bootstrap';\nimport Button from '../../components/Button/Button';\nimport { validateInput } from '../../utils/validateInput';\nimport { \n  VerifyBvn, \n  PersonalInfo, \n  Residence,\n  NextOfKin,\n  BankInfo,\n  IdentityForm\n} from '../../components/AccountSetupModal/AccountSetupModal';\n\nconst VerifyOtp = ({ submit }) => {\n\n  const [otp, setOtp] = useState('');\n\n  const submitOtp = () => {\n    if(otp) {\n      submit();\n    }\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Verify OTP</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.otpBody}>\n          <Row>\n            <Col>\n              <InputField \n                type=\"text\"\n                nameAttr=\"otp\"\n                label=\"One Time Password\"\n                value={otp}\n                changed={(val) => {\n                  setOtp(val)\n                }}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.otpBody}>\n        <Button\n          fullWidth\n          bgColor=\"#741763\" \n          size=\"lg\" \n          clicked={submitOtp}\n          color=\"#EBEBEB\"\n        >\n          Verify\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\n\nconst RegisterForm = ({ submit }) => {\n\n  const emptyState = {\n    firstName: null,\n    lastName: null,\n    email: null,\n    phoneNo: null,\n    password: null,\n    confirmPassword: null,\n    referralChoice: null\n  };\n\n  const [registerData, setRegisterData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phoneNo: '',\n    password: '',\n    confirmPassword: '',\n    referralChoice: ''\n  });\n\n  const [registerError, setRegisterError] = useState({\n    firstName: null,\n    lastName: null,\n    email: null,\n    phoneNo: null,\n    password: null,\n    confirmPassword: null,\n    referralChoice: null\n  });\n\n  const referralOptions = [\n    'Search Engine', \n    'Google Ads', \n    'Email', \n    'Radio', \n    'TV', \n    'Newspaper', \n    'Word of mouth',\n    'Facebook',\n    'Instagram',\n    'Other'\n  ]\n\n  const { firstName, lastName, email, phoneNo, password, confirmPassword, referralChoice } = registerData;\n\n  const register = () => {\n    const validated = validateInput(registerData, setRegisterError);\n    console.log(validated);\n    if(validated) {\n      submit();\n    }\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Create Account</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.modalBody}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"text\"\n                nameAttr=\"firstName\"\n                label=\"First Name\"\n                value={firstName}\n                changed={(val) => {\n                  setRegisterError({ ...registerError, firstName: null })\n                  setRegisterData({...registerData, firstName: val})\n                }}\n                error={registerError.firstName && registerError.firstName}\n              />\n            </Col>\n            <Col>\n              <InputField \n                type=\"text\"\n                nameAttr=\"lastName\"\n                label=\"Last Name\"\n                value={lastName}\n                changed={(val) => {\n                  setRegisterError({ ...registerError, lastName: null })\n                  setRegisterData({...registerData, lastName: val})\n                }}\n                error={registerError.lastName && registerError.lastName}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"email\"\n                nameAttr=\"email\"\n                label=\"Email\"\n                value={email}\n                changed={(val) => {\n                  setRegisterError({ ...registerError, email: null })\n                  setRegisterData({...registerData, email: val})\n                }}\n                error={registerError.email && registerError.email}\n              />\n            </Col>\n            <Col>\n              <InputField \n                type=\"text\"\n                nameAttr=\"phoneNo\"\n                label=\"Mobile Number\"\n                value={phoneNo}\n                changed={(val) => {\n                  setRegisterError({ ...registerError, phoneNo: null })\n                  setRegisterData({...registerData, phoneNo: val})\n                }}\n                error={registerError.phoneNo && registerError.phoneNo}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"password\"\n                nameAttr=\"password\"\n                label=\"Password\"\n                value={password}\n                changed={(val) => {\n                  setRegisterError({ ...registerError, password: null })\n                  setRegisterData({...registerData, password: val})\n                }}\n                error={registerError.password && registerError.password}\n              />\n            </Col>\n            <Col>\n              <InputField \n                type=\"password\"\n                nameAttr=\"confirmPassword\"\n                label=\"Confirm Password\"\n                value={confirmPassword}\n                changed={(val) => {\n                  setRegisterError({ ...registerError, confirmPassword: null })\n                  setRegisterData({...registerData, confirmPassword: val})\n                }}\n                error={registerError.confirmPassword && registerError.confirmPassword}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"select\"\n                label=\"How did you hear about us?\"\n                options={referralOptions}\n                nameAttr=\"referral\"\n                value={referralChoice}\n                changed={(val) => {\n                  setRegisterError({ ...registerError, referralChoice: null })\n                  setRegisterData({...registerData, referralChoice: val})\n                }}\n                error={registerError.referralChoice && registerError.referralChoice}\n              />\n            </Col>\n          </Row>\n          <Modal.Footer>\n            <Button\n              fullWidth\n              bgColor=\"#741763\" \n              size=\"lg\" \n              clicked={register}\n              color=\"#EBEBEB\"\n            >\n              Sign Up\n            </Button>\n          </Modal.Footer>\n        </div>\n      </Modal.Body>\n    </>\n  )\n}\n\n\nconst ModalForm = ({ openState, closeHandler }) => {\n\n  const [stage, setStage] = useState(0);\n\n  const goToNextStage = () => {\n    console.log('works');\n    setStage(stage + 1);\n  }\n\n  return (\n    <Modal \n      show={openState}\n      size=\"lg\"\n      onHide={() => {\n        // setRegisterData(emptyState);\n        closeHandler();\n      }}\n    > \n      { stage === 7 && <IdentityForm submit={goToNextStage} /> }\n      { stage === 6 && <BankInfo submit={goToNextStage} /> }\n      { stage === 5 && <NextOfKin submit={goToNextStage} /> }\n      { stage === 4 && <Residence submit={goToNextStage} /> }\n      { stage === 3 && <PersonalInfo submit={goToNextStage} /> }\n      { stage === 2 && <VerifyBvn submit={goToNextStage} /> }\n      { stage === 1 && <VerifyOtp submit={goToNextStage} /> }\n      { stage === 0 && <RegisterForm  submit={goToNextStage} /> }\n    </Modal>\n  )\n}\n\n\nexport default ModalForm;","/home/tga/Desktop/gypsy-capital/src/components/AccountSetupModal/AccountSetupModal.jsx",["355","356","357"],"import React, { useContext, useEffect, useMemo, useState, useRef } from 'react';\nimport styles from './AccountSetupModal.module.scss';\nimport { Modal, Row, Col } from 'react-bootstrap';\nimport InputField from '../../components/InputField/InputField';\nimport Button from '../../components/Button/Button';\nimport { validateInput } from '../../utils/validateInput';\nimport { nigeriaStates } from '../../utils/nigeriaStates';\nimport { Context as BankContext } from '../../context/BankCotext';\nimport FileUploadButton from '../FileUploadButton/FileUploadButton';\nimport { FaCloudUploadAlt } from 'react-icons/fa';\n\n\nexport const VerifyBvn = ({ submit }) => {\n\n  const [bvn, setBvn] = useState('');\n\n  const submitBvn = () => {\n    if(bvn) {\n      submit();\n    }\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Verify BVN</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row>\n            <Col>\n              <InputField \n                type=\"text\"\n                nameAttr=\"otp\"\n                label=\"Enter Client's BVN\"\n                value={bvn}\n                changed={(val) => {\n                  setBvn(val)\n                }}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button\n          fullWidth\n          bgColor=\"#741763\" \n          size=\"lg\" \n          clicked={submitBvn}\n          color=\"#EBEBEB\"\n        >\n          Verify\n        </Button>\n        <p className={styles.hint}>To get your BVN, Dial *565*0#</p>\n      </Modal.Footer>\n    </>\n  )\n}\n\n\nexport const PersonalInfo = ({ submit }) => {\n\n  const [biodata, setBiodata] = useState({\n    fullName: '',\n    dateOfBirth: '',\n    bvnPhoneNo: '',\n    email: '',\n    phoneNo: '',\n    altPhone: '',\n    gender: ''\n  });\n\n  const [biodataErrors, setBiodataErrors] = useState({\n    fullName: null,\n    dateOfBirth: null,\n    bvnPhoneNo: null,\n    email: null,\n    phoneNo: null,\n    altPhone: null,\n    gender: null\n  });\n\n\n  const addPersonalInfo = () => {\n    const validated = validateInput(biodata, setBiodataErrors);\n    if(validated) {\n      submit();\n    }\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Personal Info</h2>\n        </Modal.Title>\n        {/* <p className={styles.subtitle}>Personal Info</p> */}\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Full name\"\n                type=\"text\"\n                nameAttr=\"fullname\"\n                value={biodata.fullName}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, fullName: null })\n                  setBiodata({ ...biodata, fullName: val})\n                }}\n                error={biodataErrors.fullName && biodataErrors.fullName}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Date of Birth\"\n                type=\"text\"\n                nameAttr=\"dob\"\n                value={biodata.dateOfBirth}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, dateOfBirth: null })\n                  setBiodata({ ...biodata, dateOfBirth: val})\n                }}\n                error={biodataErrors.dateOfBirth && biodataErrors.dateOfBirth}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"BVN-linked Phone Number\"\n                type=\"text\"\n                nameAttr=\"bvnPhoneNo\"\n                value={biodata.bvnPhoneNo}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, bvnPhoneNo: null })\n                  setBiodata({ ...biodata, bvnPhoneNo: val})\n                }}\n                error={biodataErrors.bvnPhoneNo && biodataErrors.bvnPhoneNo}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Email\"\n                type=\"email\"\n                nameAttr=\"email\"\n                value={biodata.email}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, email: null })\n                  setBiodata({ ...biodata, email: val})\n                }}\n                error={biodataErrors.email && biodataErrors.email}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Phone Number\"\n                type=\"text\"\n                nameAttr=\"PhoneNo\"\n                value={biodata.phoneNo}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, phoneNo: null })\n                  setBiodata({ ...biodata, phoneNo: val})\n                }}\n                error={biodataErrors.phoneNo && biodataErrors.phoneNo}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Alternative Phone Number\"\n                type=\"text\"\n                nameAttr=\"altPhoneNo\"\n                value={biodata.altPhone}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, altPhone: null })\n                  setBiodata({ ...biodata, altPhone: val})\n                }}\n                error={biodataErrors.altPhone && biodataErrors.altPhone}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <InputField \n                label=\"Gender\"\n                type=\"select\"\n                options={['Female', 'Male', 'Other']}\n                nameAttr=\"gender\"\n                value={biodata.gender}\n                changed={(val) => {\n                  setBiodataErrors({ ...biodataErrors, gender: null })\n                  setBiodata({ ...biodata, gender: val})\n                }}\n                error={biodataErrors.gender && biodataErrors.gender}\n              />\n            </Col>\n          </Row>\n          <Modal.Footer>\n            <Button \n              className=\"mt-4\" \n              clicked={addPersonalInfo} \n              fullWidth \n              bgColor=\"#741763\" \n              size=\"lg\" \n              color=\"#EBEBEB\"\n            >\n              Save & Continue\n            </Button>\n          </Modal.Footer>\n        </div>\n      </Modal.Body>\n    </>\n  )\n}\n\n\nexport const Residence = ({ submit }) => {\n\n  const [residentialInfo, setResidentialInfo] = useState({\n    street: '',\n    city: '',\n    state: ''\n  });\n\n  const [residentialErrors, setResidentialErrors] = useState({\n    street: null,\n    city: null,\n    state: null\n  });\n\n  const addResidence = () => {\n    const validated = validateInput(residentialInfo, setResidentialErrors);\n    if(validated) {\n      submit();\n    }\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Residential Address</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Street\"\n                type=\"text\"\n                nameAttr=\"residentStreet\"\n                value={residentialInfo.street}\n                changed={(val) => {\n                  setResidentialErrors({ ...residentialErrors, street: null })\n                  setResidentialInfo({ ...residentialInfo, street: val})\n                }}\n                error={residentialErrors.street && residentialErrors.street}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"City\"\n                type=\"text\"\n                nameAttr=\"city\"\n                value={residentialInfo.city}\n                changed={(val) => {\n                  setResidentialErrors({ ...residentialErrors, city: null })\n                  setResidentialInfo({ ...residentialInfo, city: val})\n                }}\n                error={residentialErrors.city && residentialErrors.city}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"State\"\n                type=\"select\"\n                options={nigeriaStates}\n                nameAttr=\"state\"\n                value={residentialInfo.state}\n                changed={(val) => {\n                  setResidentialErrors({ ...residentialErrors, state: null })\n                  setResidentialInfo({ ...residentialInfo, state: val})\n                }}\n                error={residentialErrors.state && residentialErrors.state}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addResidence} \n          fullWidth \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\n\nexport const NextOfKin = ({ submit }) => {\n\n  const [kinInfo, setKinInfo] = useState({\n    fullName: '',\n    relationship: '',\n    email: '',\n    phoneNo: '',\n    address: ''\n  });\n\n  const [kinErrors, setKinErrors] = useState({\n    fullName: null,\n    relationship: null,\n    email: null,\n    phoneNo: null,\n    address: null\n  });\n\n  const addNextOfKin = () => {\n    const validated = validateInput(kinInfo, setKinErrors);\n    if(validated) {\n      submit();\n    }\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Next of Kin Info</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Full name\"\n                type=\"text\"\n                nameAttr=\"kinFullname\"\n                value={kinInfo.fullName}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, fullName: null })\n                  setKinInfo({ ...kinInfo, fullName: val})\n                }}\n                error={kinErrors.fullName && kinErrors.fullName}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Relationship\"\n                type=\"text\"\n                nameAttr=\"kinRelationship\"\n                value={kinInfo.relationship}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, relationship: null })\n                  setKinInfo({ ...kinInfo, relationship: val})\n                }}\n                error={kinErrors.relationship && kinErrors.relationship}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Email Address\"\n                type=\"email\"\n                nameAttr=\"kinEmail\"\n                value={kinInfo.email}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, email: null })\n                  setKinInfo({ ...kinInfo, email: val})\n                }}\n                error={kinErrors.email && kinErrors.email}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Phone Number\"\n                type=\"text\"\n                nameAttr=\"kinPhone\"\n                value={kinInfo.phoneNo}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, phoneNo: null })\n                  setKinInfo({ ...kinInfo, phoneNo: val})\n                }}\n                error={kinErrors.phoneNo && kinErrors.phoneNo}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                label=\"Residential Address\"\n                type=\"text\"\n                nameAttr=\"kinAddress\"\n                placeholder=\"Street address to the nearest bus stop\"\n                value={kinInfo.address}\n                changed={(val) => {\n                  setKinErrors({ ...kinErrors, address: null })\n                  setKinInfo({ ...kinInfo, address: val})\n                }}  \n                error={kinErrors.address && kinErrors.address}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addNextOfKin} \n          fullWidth \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\nexport const BankInfo = ({ submit }) => {\n\n  const [bankInfo, setBankInfo] = useState({\n    bankName: '',\n    accountType: '',\n    accountNumber: '',\n    accountName: ''\n  });\n\n  const [bankInfoErrors, setBankInfoErrors] = useState({\n    bankName: null,\n    accountType: null,\n    accountNumber: null,\n    accountName: null\n  });\n\n  const { \n    state: { bankList, userBankDetails }, \n    getBankList,\n    verifyBankInfo\n  } = useContext(BankContext);\n\n  useEffect(() => {\n      getBankList();\n  }, []);\n\n  const bankNames = useMemo(() => {\n    return bankList ? \n      bankList.map((bank) => bank.name) :\n      []\n  }, [bankList]);\n\n  useEffect(() => {\n    if(bankInfo.accountNumber.length === 10 && bankInfo.bankName) {\n      const bank = bankList.find(bank => bank.name.toLowerCase() === bankInfo.bankName);\n      const bankCode = bank.code;\n      console.log(bankCode)\n      verifyBankInfo(bankInfo.accountNumber, bankCode)\n    }\n  }, [bankInfo.accountNumber, bankInfo.bankName])\n\n\n  useEffect(() => {\n    console.log(userBankDetails);\n    if(userBankDetails) {\n      setBankInfo({ ...bankInfo, accountName: userBankDetails.account_name })\n    }\n  }, [userBankDetails]);\n\n  const addBankInfo = () => {\n    const validated = validateInput(bankInfo, setBankInfoErrors);\n    if(validated) {\n      submit();\n    }\n  }\n\n  return(\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Bank Info</h2>\n          <p className={styles.subtitle}>Add a bank account where we can send investment proceeds or loan requests to.</p>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"select\"\n                label=\"Bank\"\n                options={bankNames}\n                nameAttr=\"bank\"\n                value={bankInfo.bankName}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, bankName: null })\n                  setBankInfo({ ...bankInfo, bankName: val})\n                }}\n                error={bankInfoErrors.bankName && bankInfoErrors.bankName}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Account Type\"\n                type=\"select\"\n                options={[\"Savings\", \"Current\"]}\n                nameAttr=\"acountType\"\n                value={bankInfo.accountType}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, accountType: null })\n                  setBankInfo({ ...bankInfo, accountType: val})\n                }}\n                error={bankInfoErrors.accountType && bankInfoErrors.accountType}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <InputField \n                type=\"text\"\n                label=\"Account Number\"\n                nameAttr=\"accountNo\"\n                value={bankInfo.accountNumber}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, accountNumber: null })\n                  setBankInfo({ ...bankInfo, accountNumber: val})\n                }}\n                error={bankInfoErrors.accountNumber && bankInfoErrors.accountNumber}\n              />\n            </Col>\n            <Col>\n              <InputField \n                label=\"Account Name\"\n                type=\"text\"\n                nameAttr=\"accountName\"\n                value={bankInfo.accountName}\n                changed={(val) => {\n                  setBankInfoErrors({ ...bankInfoErrors, accountName: null })\n                  setBankInfo({ ...bankInfo, accountName: val})\n                }}\n                error={bankInfoErrors.accountName && bankInfoErrors.accountName}\n              />\n            </Col>\n          </Row>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          clicked={addBankInfo} \n          fullWidth \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}\n\nexport const IdentityForm = () => {\n\n  const idFileRef = useRef();\n  const passportFileRef= useRef();\n\n  const [idType, setIdType] = useState('');\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <h2 className={styles.headerText}>Identity</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={styles.body}>\n          <div className={styles.validId}>\n            <p className={styles.validID}>Upload a valid government issued Identification</p>\n            <InputField \n              type=\"select\"\n              options={['International Passport', \"Driver's License\", 'Voters Card', 'National Identity Card']}\n              nameAttr=\"identityType\"\n              value={idType}\n              changed={(val) => setIdType(val)}\n            />\n            <FileUploadButton \n              label=\"Choose File\" \n              icon={<FaCloudUploadAlt className=\"ml-3\" size=\"1.1em\" />}\n              id=\"id-upload\" \n              className=\"mt-3\"\n              fileRef={idFileRef}\n              fullwidth\n            />\n          </div>\n          <div className={styles.passportVerify}>\n            <p className={styles.passportImg}>Please upload a clear and resent passport photograph.</p>\n            <FileUploadButton \n              label=\"Choose File\" \n              icon={<FaCloudUploadAlt className=\"ml-3\" size=\"1.1em\" />}\n              id=\"passport-upload\"  \n              fileRef={passportFileRef}\n              fullwidth\n            />\n          </div>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className={styles.body}>\n        <Button \n          className=\"mt-4\" \n          // clicked={addBankInfo} \n          fullWidth \n          bgColor=\"#741763\" \n          size=\"lg\" \n          color=\"#EBEBEB\"\n        >\n          Save & Continue\n        </Button>\n      </Modal.Footer>\n    </>\n  )\n}",{"ruleId":"358","replacedBy":"359"},{"ruleId":"360","replacedBy":"361"},{"ruleId":"358","replacedBy":"362"},{"ruleId":"360","replacedBy":"363"},{"ruleId":"358","replacedBy":"364"},{"ruleId":"360","replacedBy":"365"},{"ruleId":"366","severity":1,"message":"367","line":4,"column":1,"nodeType":"368","endLine":34,"endColumn":2},{"ruleId":"369","severity":1,"message":"370","line":47,"column":6,"nodeType":"371","endLine":47,"endColumn":13,"suggestions":"372"},{"ruleId":"373","severity":1,"message":"374","line":64,"column":33,"nodeType":"375","messageId":"376","endLine":64,"endColumn":34,"suggestions":"377"},{"ruleId":"373","severity":1,"message":"374","line":64,"column":58,"nodeType":"375","messageId":"376","endLine":64,"endColumn":59,"suggestions":"378"},{"ruleId":"379","severity":1,"message":"380","line":1,"column":17,"nodeType":"381","messageId":"382","endLine":1,"endColumn":23},{"ruleId":"379","severity":1,"message":"383","line":1,"column":25,"nodeType":"381","messageId":"382","endLine":1,"endColumn":33},{"ruleId":"379","severity":1,"message":"384","line":13,"column":40,"nodeType":"381","messageId":"382","endLine":13,"endColumn":44},{"ruleId":"379","severity":1,"message":"385","line":22,"column":11,"nodeType":"381","messageId":"382","endLine":22,"endColumn":14},{"ruleId":"379","severity":1,"message":"386","line":40,"column":20,"nodeType":"381","messageId":"382","endLine":40,"endColumn":24},{"ruleId":"369","severity":1,"message":"387","line":44,"column":6,"nodeType":"371","endLine":44,"endColumn":8,"suggestions":"388"},{"ruleId":"369","severity":1,"message":"389","line":52,"column":6,"nodeType":"371","endLine":52,"endColumn":13,"suggestions":"390"},{"ruleId":"358","replacedBy":"391"},{"ruleId":"360","replacedBy":"392"},{"ruleId":"369","severity":1,"message":"393","line":28,"column":5,"nodeType":"371","endLine":28,"endColumn":15,"suggestions":"394"},{"ruleId":"379","severity":1,"message":"384","line":12,"column":25,"nodeType":"381","messageId":"382","endLine":12,"endColumn":29},{"ruleId":"379","severity":1,"message":"385","line":17,"column":11,"nodeType":"381","messageId":"382","endLine":17,"endColumn":14},{"ruleId":"379","severity":1,"message":"395","line":17,"column":16,"nodeType":"381","messageId":"382","endLine":17,"endColumn":20},{"ruleId":"379","severity":1,"message":"396","line":20,"column":22,"nodeType":"381","messageId":"382","endLine":20,"endColumn":35},{"ruleId":"369","severity":1,"message":"397","line":37,"column":6,"nodeType":"371","endLine":37,"endColumn":8,"suggestions":"398"},{"ruleId":"399","severity":1,"message":"400","line":102,"column":29,"nodeType":"401","endLine":102,"endColumn":72},{"ruleId":"358","replacedBy":"402"},{"ruleId":"360","replacedBy":"403"},{"ruleId":"358","replacedBy":"404"},{"ruleId":"360","replacedBy":"405"},{"ruleId":"379","severity":1,"message":"384","line":14,"column":25,"nodeType":"381","messageId":"382","endLine":14,"endColumn":29},{"ruleId":"379","severity":1,"message":"385","line":19,"column":11,"nodeType":"381","messageId":"382","endLine":19,"endColumn":14},{"ruleId":"369","severity":1,"message":"397","line":36,"column":6,"nodeType":"371","endLine":36,"endColumn":8,"suggestions":"406"},{"ruleId":"369","severity":1,"message":"370","line":56,"column":6,"nodeType":"371","endLine":56,"endColumn":13,"suggestions":"407"},{"ruleId":"369","severity":1,"message":"408","line":137,"column":8,"nodeType":"371","endLine":137,"endColumn":10,"suggestions":"409"},{"ruleId":"369","severity":1,"message":"410","line":160,"column":6,"nodeType":"371","endLine":160,"endColumn":18,"suggestions":"411"},{"ruleId":"369","severity":1,"message":"370","line":29,"column":6,"nodeType":"371","endLine":29,"endColumn":13,"suggestions":"412"},{"ruleId":"379","severity":1,"message":"384","line":15,"column":25,"nodeType":"381","messageId":"382","endLine":15,"endColumn":29},{"ruleId":"413","severity":1,"message":"414","line":42,"column":15,"nodeType":"401","endLine":42,"endColumn":26},{"ruleId":"413","severity":1,"message":"414","line":45,"column":15,"nodeType":"401","endLine":45,"endColumn":26},{"ruleId":"413","severity":1,"message":"414","line":48,"column":15,"nodeType":"401","endLine":48,"endColumn":26},{"ruleId":"379","severity":1,"message":"384","line":22,"column":25,"nodeType":"381","messageId":"382","endLine":22,"endColumn":29},{"ruleId":"369","severity":1,"message":"415","line":70,"column":6,"nodeType":"371","endLine":70,"endColumn":52,"suggestions":"416"},{"ruleId":"369","severity":1,"message":"417","line":43,"column":6,"nodeType":"371","endLine":43,"endColumn":8,"suggestions":"418"},{"ruleId":"369","severity":1,"message":"419","line":80,"column":6,"nodeType":"371","endLine":80,"endColumn":49,"suggestions":"420"},{"ruleId":"369","severity":1,"message":"421","line":87,"column":6,"nodeType":"371","endLine":87,"endColumn":23,"suggestions":"422"},{"ruleId":"369","severity":1,"message":"423","line":31,"column":6,"nodeType":"371","endLine":31,"endColumn":8,"suggestions":"424"},{"ruleId":"369","severity":1,"message":"419","line":102,"column":6,"nodeType":"371","endLine":102,"endColumn":49,"suggestions":"425"},{"ruleId":"369","severity":1,"message":"421","line":110,"column":6,"nodeType":"371","endLine":110,"endColumn":23,"suggestions":"426"},{"ruleId":"369","severity":1,"message":"427","line":135,"column":6,"nodeType":"371","endLine":135,"endColumn":25,"suggestions":"428"},{"ruleId":"358","replacedBy":"429"},{"ruleId":"360","replacedBy":"430"},{"ruleId":"366","severity":1,"message":"367","line":4,"column":1,"nodeType":"368","endLine":22,"endColumn":2},{"ruleId":"379","severity":1,"message":"431","line":2,"column":8,"nodeType":"381","messageId":"382","endLine":2,"endColumn":14},{"ruleId":"379","severity":1,"message":"384","line":5,"column":25,"nodeType":"381","messageId":"382","endLine":5,"endColumn":29},{"ruleId":"379","severity":1,"message":"385","line":10,"column":11,"nodeType":"381","messageId":"382","endLine":10,"endColumn":14},{"ruleId":"379","severity":1,"message":"384","line":9,"column":25,"nodeType":"381","messageId":"382","endLine":9,"endColumn":29},{"ruleId":"432","severity":1,"message":"433","line":33,"column":11,"nodeType":"401","endLine":40,"endColumn":14},{"ruleId":"399","severity":1,"message":"400","line":58,"column":19,"nodeType":"401","endLine":58,"endColumn":72},{"ruleId":"366","severity":1,"message":"367","line":1,"column":1,"nodeType":"368","endLine":7,"endColumn":2},{"ruleId":"373","severity":1,"message":"374","line":3,"column":31,"nodeType":"375","messageId":"376","endLine":3,"endColumn":32,"suggestions":"434"},{"ruleId":"373","severity":1,"message":"374","line":3,"column":56,"nodeType":"375","messageId":"376","endLine":3,"endColumn":57,"suggestions":"435"},{"ruleId":"369","severity":1,"message":"436","line":42,"column":6,"nodeType":"371","endLine":42,"endColumn":8,"suggestions":"437"},{"ruleId":"358","replacedBy":"438"},{"ruleId":"360","replacedBy":"439"},{"ruleId":"379","severity":1,"message":"386","line":13,"column":30,"nodeType":"381","messageId":"382","endLine":13,"endColumn":34},{"ruleId":"369","severity":1,"message":"370","line":28,"column":6,"nodeType":"371","endLine":28,"endColumn":13,"suggestions":"440"},{"ruleId":"379","severity":1,"message":"441","line":8,"column":10,"nodeType":"381","messageId":"382","endLine":8,"endColumn":21},{"ruleId":"379","severity":1,"message":"442","line":1,"column":27,"nodeType":"381","messageId":"382","endLine":1,"endColumn":34},{"ruleId":"379","severity":1,"message":"431","line":2,"column":8,"nodeType":"381","messageId":"382","endLine":2,"endColumn":14},{"ruleId":"379","severity":1,"message":"443","line":14,"column":10,"nodeType":"381","messageId":"382","endLine":14,"endColumn":17},{"ruleId":"379","severity":1,"message":"444","line":14,"column":19,"nodeType":"381","messageId":"382","endLine":14,"endColumn":29},{"ruleId":"379","severity":1,"message":"445","line":108,"column":10,"nodeType":"381","messageId":"382","endLine":108,"endColumn":19},{"ruleId":"379","severity":1,"message":"446","line":108,"column":21,"nodeType":"381","messageId":"382","endLine":108,"endColumn":33},{"ruleId":"379","severity":1,"message":"447","line":166,"column":10,"nodeType":"381","messageId":"382","endLine":166,"endColumn":22},{"ruleId":"379","severity":1,"message":"448","line":166,"column":24,"nodeType":"381","messageId":"382","endLine":166,"endColumn":39},{"ruleId":"379","severity":1,"message":"449","line":173,"column":10,"nodeType":"381","messageId":"382","endLine":173,"endColumn":20},{"ruleId":"379","severity":1,"message":"450","line":173,"column":22,"nodeType":"381","messageId":"382","endLine":173,"endColumn":35},{"ruleId":"366","severity":1,"message":"367","line":5,"column":1,"nodeType":"368","endLine":52,"endColumn":2},{"ruleId":"369","severity":1,"message":"451","line":16,"column":6,"nodeType":"371","endLine":16,"endColumn":41,"suggestions":"452"},{"ruleId":"379","severity":1,"message":"453","line":68,"column":9,"nodeType":"381","messageId":"382","endLine":68,"endColumn":19},{"ruleId":"369","severity":1,"message":"417","line":464,"column":6,"nodeType":"371","endLine":464,"endColumn":8,"suggestions":"454"},{"ruleId":"369","severity":1,"message":"419","line":479,"column":6,"nodeType":"371","endLine":479,"endColumn":49,"suggestions":"455"},{"ruleId":"369","severity":1,"message":"421","line":487,"column":6,"nodeType":"371","endLine":487,"endColumn":23,"suggestions":"456"},"no-native-reassign",["457"],"no-negated-in-lhs",["458"],["457"],["458"],["457"],["458"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clearErrors'. Either include it or remove the dependency array.","ArrayExpression",["459"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["460","461"],["462","463"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Link' is defined but never used.","'url' is assigned a value but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveClientLoans'. Either include it or remove the dependency array.",["464"],"React Hook useEffect has a missing dependency: 'clearError'. Either include it or remove the dependency array.",["465"],["457"],["458"],"React Hook useEffect has a missing dependency: 'loanData'. Either include it or remove the dependency array. You can also do a functional update 'setLoanData(l => ...)' if you only need 'loanData' in the 'setLoanData' call.",["466"],"'path' is assigned a value but never used.","'setLoanStatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getClientDetails' and 'user.user_id'. Either include them or remove the dependency array.",["467"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["457"],["458"],["457"],["458"],["468"],["469"],"React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array. If 'redirect' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["470"],"React Hook useMemo has missing dependencies: 'submitBvn', 'submitIdentityInfo', and 'submitPersonalInfo'. Either include them or remove the dependency array.",["471"],["472"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'loanCalcData'. Either include it or remove the dependency array. You can also do a functional update 'setLoanCalcData(l => ...)' if you only need 'loanCalcData' in the 'setLoanCalcData' call.",["473"],"React Hook useEffect has a missing dependency: 'getBankList'. Either include it or remove the dependency array.",["474"],"React Hook useEffect has missing dependencies: 'bankList' and 'verifyBankInfo'. Either include them or remove the dependency array.",["475"],"React Hook useEffect has a missing dependency: 'bankInfo'. Either include it or remove the dependency array. You can also do a functional update 'setBankInfo(b => ...)' if you only need 'bankInfo' in the 'setBankInfo' call.",["476"],"React Hook useEffect has missing dependencies: 'getBankList', 'getClientDetails', and 'user.user_id'. Either include them or remove the dependency array.",["477"],["478"],["479"],"React Hook useEffect has a missing dependency: 'biodata'. Either include it or remove the dependency array. You can also do a functional update 'setBiodata(b => ...)' if you only need 'biodata' in the 'setBiodata' call.",["480"],["457"],["458"],"'styles' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.",["481","482"],["483","484"],"React Hook useEffect has a missing dependency: 'returnNumber'. Either include it or remove the dependency array. If 'setFaqs' needs the current value of 'returnNumber', you can also switch to useReducer instead of useState and read 'returnNumber' in the reducer.",["485"],["457"],["458"],["486"],"'RiUser3Fill' is defined but never used.","'useMemo' is defined but never used.","'biodata' is assigned a value but never used.","'setBiodata' is assigned a value but never used.","'nextOfKin' is assigned a value but never used.","'setNextOfKin' is assigned a value but never used.","'disburseBank' is assigned a value but never used.","'setDisburseBank' is assigned a value but never used.","'salaryBank' is assigned a value but never used.","'setSalaryBank' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'list'. Either include it or remove the dependency array.",["487"],"'emptyState' is assigned a value but never used.",["488"],["489"],["490"],"no-global-assign","no-unsafe-negation",{"desc":"491","fix":"492"},{"messageId":"493","fix":"494","desc":"495"},{"messageId":"496","fix":"497","desc":"498"},{"messageId":"493","fix":"499","desc":"495"},{"messageId":"496","fix":"500","desc":"498"},{"desc":"501","fix":"502"},{"desc":"503","fix":"504"},{"desc":"505","fix":"506"},{"desc":"507","fix":"508"},{"desc":"507","fix":"509"},{"desc":"491","fix":"510"},{"desc":"511","fix":"512"},{"desc":"513","fix":"514"},{"desc":"491","fix":"515"},{"desc":"516","fix":"517"},{"desc":"518","fix":"519"},{"desc":"520","fix":"521"},{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},{"desc":"520","fix":"526"},{"desc":"522","fix":"527"},{"desc":"528","fix":"529"},{"messageId":"493","fix":"530","desc":"495"},{"messageId":"496","fix":"531","desc":"498"},{"messageId":"493","fix":"532","desc":"495"},{"messageId":"496","fix":"533","desc":"498"},{"desc":"534","fix":"535"},{"desc":"491","fix":"536"},{"desc":"537","fix":"538"},{"desc":"518","fix":"539"},{"desc":"520","fix":"540"},{"desc":"522","fix":"541"},"Update the dependencies array to be: [clearErrors, error]",{"range":"542","text":"543"},"removeEscape",{"range":"544","text":"545"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"546","text":"547"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"548","text":"545"},{"range":"549","text":"547"},"Update the dependencies array to be: [retrieveClientLoans]",{"range":"550","text":"551"},"Update the dependencies array to be: [clearError, error]",{"range":"552","text":"553"},"Update the dependencies array to be: [loanData, location]",{"range":"554","text":"555"},"Update the dependencies array to be: [getClientDetails, user.user_id]",{"range":"556","text":"557"},{"range":"558","text":"557"},{"range":"559","text":"543"},"Update the dependencies array to be: [redirect]",{"range":"560","text":"561"},"Update the dependencies array to be: [setupStage, submitBvn, submitIdentityInfo, submitPersonalInfo]",{"range":"562","text":"563"},{"range":"564","text":"543"},"Update the dependencies array to be: [monthlySalary, loanAmount, installmentPeriod, loanCalcData]",{"range":"565","text":"566"},"Update the dependencies array to be: [getBankList]",{"range":"567","text":"568"},"Update the dependencies array to be: [bankInfo.accountNumber, bankInfo.bankName, bankList, verifyBankInfo]",{"range":"569","text":"570"},"Update the dependencies array to be: [bankInfo, userBankDetails]",{"range":"571","text":"572"},"Update the dependencies array to be: [getBankList, getClientDetails, user.user_id]",{"range":"573","text":"574"},{"range":"575","text":"570"},{"range":"576","text":"572"},"Update the dependencies array to be: [biodata, user, userDetails]",{"range":"577","text":"578"},{"range":"579","text":"545"},{"range":"580","text":"547"},{"range":"581","text":"545"},{"range":"582","text":"547"},"Update the dependencies array to be: [returnNumber]",{"range":"583","text":"584"},{"range":"585","text":"543"},"Update the dependencies array to be: [indexOfFirstItem, indexOfLastItem, list]",{"range":"586","text":"587"},{"range":"588","text":"568"},{"range":"589","text":"570"},{"range":"590","text":"572"},[1192,1199],"[clearErrors, error]",[1464,1465],"",[1464,1464],"\\",[1489,1490],[1489,1489],[1704,1706],"[retrieveClientLoans]",[1803,1810],"[clearError, error]",[846,856],"[loanData, location]",[1128,1130],"[getClientDetails, user.user_id]",[1450,1452],[1864,1871],[3809,3811],"[redirect]",[4470,4482],"[setupStage, submitBvn, submitIdentityInfo, submitPersonalInfo]",[868,875],[2358,2404],"[monthlySalary, loanAmount, installmentPeriod, loanCalcData]",[1328,1330],"[getBankList]",[2572,2615],"[bankInfo.accountNumber, bankInfo.bankName, bankList, verifyBankInfo]",[2787,2804],"[bankInfo, userBankDetails]",[1020,1022],"[getBankList, getClientDetails, user.user_id]",[2633,2676],[2849,2866],[3713,3732],"[biodata, user, userDetails]",[92,93],[92,92],[117,118],[117,117],[1186,1188],"[returnNumber]",[835,842],[504,539],"[indexOfFirstItem, indexOfLastItem, list]",[13355,13357],[13795,13838],[14011,14028]]